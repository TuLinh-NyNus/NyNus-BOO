services:
  postgres:
    image: postgres:15-alpine
    container_name: exam_bank_postgres
    environment:
      POSTGRES_DB: exam_bank_db
      POSTGRES_USER: exam_bank_user
      POSTGRES_PASSWORD: exam_bank_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - exam_bank_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U exam_bank_user -d exam_bank_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../..
      dockerfile: docker/backend.Dockerfile
    container_name: exam_bank_backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=exam_bank_db
      - DB_USER=exam_bank_user
      - DB_PASSWORD=exam_bank_password
      - JWT_SECRET=your-secret-key-here
      - JWT_ACCESS_TOKEN_EXPIRY=15m
      - JWT_REFRESH_TOKEN_EXPIRY=7d
      - HTTP_GATEWAY_ENABLED=true
      - ENV=development
      - OPENSEARCH_URL=http://opensearch:9200
      - OPENSEARCH_INDEX_PREFIX=questions
      - OPENSEARCH_ENABLED=true
      - OPENSEARCH_TIMEOUT=30s
      - OPENSEARCH_MAX_RETRIES=3
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=exam_bank_redis_password
      - REDIS_ENABLED=true
      - REDIS_MAX_RETRIES=3
      - REDIS_TIMEOUT=5s
    ports:
      - "50051:50051"
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    networks:
      - exam_bank_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7.2-alpine
    container_name: exam_bank_redis
    environment:
      - REDIS_PASSWORD=exam_bank_redis_password
    command: redis-server --requirepass exam_bank_redis_password --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - exam_bank_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "exam_bank_redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  opensearch:
    image: opensearchproject/opensearch:2.11.1
    container_name: exam_bank_opensearch
    environment:
      - cluster.name=exam-bank-opensearch
      - node.name=exam-bank-node-1
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - plugins.security.disabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data
      - ../opensearch/opensearch.yml:/usr/share/opensearch/config/opensearch.yml
      - ../opensearch/index-templates:/usr/share/opensearch/index-templates
    ports:
      - "9200:9200"
      - "9600:9600"
    networks:
      - exam_bank_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.1
    container_name: exam_bank_opensearch_dashboards
    environment:
      - OPENSEARCH_HOSTS=["http://opensearch:9200"]
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    volumes:
      - ../opensearch/opensearch-dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml
    ports:
      - "5601:5601"
    depends_on:
      opensearch:
        condition: service_healthy
    networks:
      - exam_bank_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ../..
      dockerfile: docker/frontend.Dockerfile
    container_name: exam_bank_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_GRPC_URL=http://localhost:8080
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-nextauth-secret-here
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - exam_bank_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database Management Tool - Adminer
  adminer:
    image: adminer:4.8.1
    container_name: exam_bank_adminer
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=pepa-linha-dark
    ports:
      - "8082:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - exam_bank_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  exam_bank_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  opensearch_data:

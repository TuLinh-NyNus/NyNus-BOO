# GolangCI-Lint Configuration for Exam Bank System Backend
# This configuration ensures code quality and consistency

# Output configuration
output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  sort-results: true

# Run configuration
run:
  timeout: 5m
  tests: true
  skip-dirs:
    - vendor
    - tmp
    - bin
    - cache
    - output
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_gen\\.go$"

# Linters configuration
linters-settings:
  # Error handling
  errcheck:
    check-type-assertions: true
    check-blank: true
  
  # Complexity
  gocyclo:
    min-complexity: 20  # Increased for complex routing functions
  
  # Code style
  gofmt:
    simplify: true
  
  goimports:
    local-prefixes: exam-bank-system/apps/backend
  
  # Performance
  ineffassign:
  
  # Security
  gosec:
    excludes:
      - G404 # Use of weak random number generator (math/rand instead of crypto/rand)
  
  # Naming conventions
  revive:
    rules:
      - name: exported
        arguments: ["checkPrivateReceivers", "disableStutteringCheck"]
  
  # Unused code
  unused:
    check-exported: false
  
  # Whitespace
  whitespace:
    multi-if: false
    multi-func: false
  
  # Line length
  lll:
    line-length: 120
  
  # Function length
  funlen:
    lines: 60
    statements: 40
  
  # Cognitive complexity
  gocognit:
    min-complexity: 20
  
  # Maintainability index
  maintidx:
    under: 20

# Enable specific linters
linters:
  enable:
    - errcheck        # Check for unchecked errors
    - gosimple        # Simplify code
    - govet           # Standard Go vet
    - ineffassign     # Detect ineffectual assignments
    - staticcheck     # Staticcheck (go vet on steroids)
    - typecheck       # Type-check Go code
    - unused          # Check for unused constants, variables, functions and types
    - gofmt           # Check whether code was gofmt-ed
    - goimports       # Check import statements are formatted according to the 'goimport' command
    - gocyclo         # Computes and checks the cyclomatic complexity of functions
    - gosec           # Inspect source code for security problems
    - revive          # Fast, configurable, extensible, flexible, and beautiful linter for Go
    - whitespace      # Tool for detection of leading and trailing whitespace
    - lll             # Reports long lines
    - funlen          # Tool for detection of long functions
    - gocognit        # Computes and checks the cognitive complexity of functions
    - maintidx        # Maintidx measures the maintainability index of each function
    - misspell        # Finds commonly misspelled English words in comments
    - nakedret        # Finds naked returns in functions greater than a specified function length
    - unconvert       # Remove unnecessary type conversions
    - unparam         # Reports unused function parameters
    - goconst         # Finds repeated strings that could be replaced by a constant
    - gocritic        # The most opinionated Go source code linter
    - godot           # Check if comments end in a period
    - godox           # Tool for detection of FIXME, TODO and other comment keywords

  disable:
    - deadcode        # Deprecated: replaced by 'unused'
    - varcheck        # Deprecated: replaced by 'unused'
    - structcheck     # Deprecated: replaced by 'unused'
    - scopelint       # Deprecated: replaced by 'exportloopref'
    - interfacer      # Deprecated: archived by author
    - maligned        # Deprecated: replaced by 'fieldalignment'

# Issues configuration
issues:
  # Disable default excludes for better security
  exclude-use-default: false
  
  # Maximum issues count per one linter
  max-issues-per-linter: 0
  
  # Maximum count of issues with the same text
  max-same-issues: 0
  
  # Show only new issues created after git revision
  new: false
  
  # Exclude specific issues
  exclude-rules:
    # Allow TODO comments in development
    - path: ".*_test\\.go"
      linters:
        - godox
    
    # Disable some linters for generated files
    - path: ".*\\.pb\\.go"
      linters:
        - lll
        - gocyclo
        - funlen
    
    # Allow long lines in build files
    - path: "Dockerfile.*"
      linters:
        - lll
    
    # Exclude certain revive rules
    - linters:
        - revive
      text: "should have a package comment"

# Severity configuration
severity:
  default-severity: error
  case-sensitive: false
  rules:
    - linters: [misspell, godot]
      severity: info
    - linters: [gosec]
      severity: error

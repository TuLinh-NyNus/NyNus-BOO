// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.12.4
// source: v1/question_filter.proto

package v1

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sorting Options
type SortField int32

const (
	SortField_SORT_FIELD_UNSPECIFIED   SortField = 0
	SortField_SORT_FIELD_CREATED_AT    SortField = 1
	SortField_SORT_FIELD_UPDATED_AT    SortField = 2
	SortField_SORT_FIELD_USAGE_COUNT   SortField = 3
	SortField_SORT_FIELD_FEEDBACK      SortField = 4
	SortField_SORT_FIELD_DIFFICULTY    SortField = 5
	SortField_SORT_FIELD_QUESTION_CODE SortField = 6
	SortField_SORT_FIELD_TYPE          SortField = 7
	SortField_SORT_FIELD_STATUS        SortField = 8
)

// Enum value maps for SortField.
var (
	SortField_name = map[int32]string{
		0: "SORT_FIELD_UNSPECIFIED",
		1: "SORT_FIELD_CREATED_AT",
		2: "SORT_FIELD_UPDATED_AT",
		3: "SORT_FIELD_USAGE_COUNT",
		4: "SORT_FIELD_FEEDBACK",
		5: "SORT_FIELD_DIFFICULTY",
		6: "SORT_FIELD_QUESTION_CODE",
		7: "SORT_FIELD_TYPE",
		8: "SORT_FIELD_STATUS",
	}
	SortField_value = map[string]int32{
		"SORT_FIELD_UNSPECIFIED":   0,
		"SORT_FIELD_CREATED_AT":    1,
		"SORT_FIELD_UPDATED_AT":    2,
		"SORT_FIELD_USAGE_COUNT":   3,
		"SORT_FIELD_FEEDBACK":      4,
		"SORT_FIELD_DIFFICULTY":    5,
		"SORT_FIELD_QUESTION_CODE": 6,
		"SORT_FIELD_TYPE":          7,
		"SORT_FIELD_STATUS":        8,
	}
)

func (x SortField) Enum() *SortField {
	p := new(SortField)
	*p = x
	return p
}

func (x SortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortField) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_question_filter_proto_enumTypes[0].Descriptor()
}

func (SortField) Type() protoreflect.EnumType {
	return &file_v1_question_filter_proto_enumTypes[0]
}

func (x SortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortField.Descriptor instead.
func (SortField) EnumDescriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{0}
}

type SortOrder int32

const (
	SortOrder_SORT_ORDER_UNSPECIFIED SortOrder = 0
	SortOrder_SORT_ORDER_ASC         SortOrder = 1
	SortOrder_SORT_ORDER_DESC        SortOrder = 2
)

// Enum value maps for SortOrder.
var (
	SortOrder_name = map[int32]string{
		0: "SORT_ORDER_UNSPECIFIED",
		1: "SORT_ORDER_ASC",
		2: "SORT_ORDER_DESC",
	}
	SortOrder_value = map[string]int32{
		"SORT_ORDER_UNSPECIFIED": 0,
		"SORT_ORDER_ASC":         1,
		"SORT_ORDER_DESC":        2,
	}
)

func (x SortOrder) Enum() *SortOrder {
	p := new(SortOrder)
	*p = x
	return p
}

func (x SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_question_filter_proto_enumTypes[1].Descriptor()
}

func (SortOrder) Type() protoreflect.EnumType {
	return &file_v1_question_filter_proto_enumTypes[1]
}

func (x SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortOrder.Descriptor instead.
func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{1}
}

// QuestionDetail message for filter responses
type QuestionDetail struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RawContent     string                 `protobuf:"bytes,2,opt,name=raw_content,json=rawContent,proto3" json:"raw_content,omitempty"`
	Content        string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Subcount       string                 `protobuf:"bytes,4,opt,name=subcount,proto3" json:"subcount,omitempty"`
	Type           string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Source         string                 `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	Answers        string                 `protobuf:"bytes,7,opt,name=answers,proto3" json:"answers,omitempty"`
	CorrectAnswer  string                 `protobuf:"bytes,8,opt,name=correct_answer,json=correctAnswer,proto3" json:"correct_answer,omitempty"`
	Solution       string                 `protobuf:"bytes,9,opt,name=solution,proto3" json:"solution,omitempty"`
	Tags           []string               `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	UsageCount     int32                  `protobuf:"varint,11,opt,name=usage_count,json=usageCount,proto3" json:"usage_count,omitempty"`
	Creator        string                 `protobuf:"bytes,12,opt,name=creator,proto3" json:"creator,omitempty"`
	Status         string                 `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	Feedback       int32                  `protobuf:"varint,14,opt,name=feedback,proto3" json:"feedback,omitempty"`
	Difficulty     string                 `protobuf:"bytes,15,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	CreatedAt      *timestamp.Timestamp   `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamp.Timestamp   `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	QuestionCodeId string                 `protobuf:"bytes,18,opt,name=question_code_id,json=questionCodeId,proto3" json:"question_code_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QuestionDetail) Reset() {
	*x = QuestionDetail{}
	mi := &file_v1_question_filter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionDetail) ProtoMessage() {}

func (x *QuestionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionDetail.ProtoReflect.Descriptor instead.
func (*QuestionDetail) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{0}
}

func (x *QuestionDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QuestionDetail) GetRawContent() string {
	if x != nil {
		return x.RawContent
	}
	return ""
}

func (x *QuestionDetail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *QuestionDetail) GetSubcount() string {
	if x != nil {
		return x.Subcount
	}
	return ""
}

func (x *QuestionDetail) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QuestionDetail) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *QuestionDetail) GetAnswers() string {
	if x != nil {
		return x.Answers
	}
	return ""
}

func (x *QuestionDetail) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

func (x *QuestionDetail) GetSolution() string {
	if x != nil {
		return x.Solution
	}
	return ""
}

func (x *QuestionDetail) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *QuestionDetail) GetUsageCount() int32 {
	if x != nil {
		return x.UsageCount
	}
	return 0
}

func (x *QuestionDetail) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *QuestionDetail) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *QuestionDetail) GetFeedback() int32 {
	if x != nil {
		return x.Feedback
	}
	return 0
}

func (x *QuestionDetail) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *QuestionDetail) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *QuestionDetail) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *QuestionDetail) GetQuestionCodeId() string {
	if x != nil {
		return x.QuestionCodeId
	}
	return ""
}

// QuestionCode Filter Components
type QuestionCodeFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Grades        []string               `protobuf:"bytes,1,rep,name=grades,proto3" json:"grades,omitempty"`                            // 0,1,2 (10th, 11th, 12th grade)
	Subjects      []string               `protobuf:"bytes,2,rep,name=subjects,proto3" json:"subjects,omitempty"`                        // P,L,H,T,S (Math, Physics, Chemistry, English, Biology)
	Chapters      []string               `protobuf:"bytes,3,rep,name=chapters,proto3" json:"chapters,omitempty"`                        // 1,2,3,4,5... (Chapter numbers)
	Levels        []string               `protobuf:"bytes,4,rep,name=levels,proto3" json:"levels,omitempty"`                            // N,H,V,C,T,M (Recognition, Understanding, Application, High Application, VIP, Note)
	Lessons       []string               `protobuf:"bytes,5,rep,name=lessons,proto3" json:"lessons,omitempty"`                          // 1,2,3,A,B,C... (Lesson identifiers)
	Forms         []string               `protobuf:"bytes,6,rep,name=forms,proto3" json:"forms,omitempty"`                              // 1,2,3... (Form numbers, only for ID6 format)
	IncludeId5    bool                   `protobuf:"varint,7,opt,name=include_id5,json=includeId5,proto3" json:"include_id5,omitempty"` // Include ID5 format questions (default: true)
	IncludeId6    bool                   `protobuf:"varint,8,opt,name=include_id6,json=includeId6,proto3" json:"include_id6,omitempty"` // Include ID6 format questions (default: true)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionCodeFilter) Reset() {
	*x = QuestionCodeFilter{}
	mi := &file_v1_question_filter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionCodeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionCodeFilter) ProtoMessage() {}

func (x *QuestionCodeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionCodeFilter.ProtoReflect.Descriptor instead.
func (*QuestionCodeFilter) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{1}
}

func (x *QuestionCodeFilter) GetGrades() []string {
	if x != nil {
		return x.Grades
	}
	return nil
}

func (x *QuestionCodeFilter) GetSubjects() []string {
	if x != nil {
		return x.Subjects
	}
	return nil
}

func (x *QuestionCodeFilter) GetChapters() []string {
	if x != nil {
		return x.Chapters
	}
	return nil
}

func (x *QuestionCodeFilter) GetLevels() []string {
	if x != nil {
		return x.Levels
	}
	return nil
}

func (x *QuestionCodeFilter) GetLessons() []string {
	if x != nil {
		return x.Lessons
	}
	return nil
}

func (x *QuestionCodeFilter) GetForms() []string {
	if x != nil {
		return x.Forms
	}
	return nil
}

func (x *QuestionCodeFilter) GetIncludeId5() bool {
	if x != nil {
		return x.IncludeId5
	}
	return false
}

func (x *QuestionCodeFilter) GetIncludeId6() bool {
	if x != nil {
		return x.IncludeId6
	}
	return false
}

// Metadata Filters
type MetadataFilter struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Types           []string               `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`                                            // MC, TF, SA, ES, MA
	Statuses        []string               `protobuf:"bytes,2,rep,name=statuses,proto3" json:"statuses,omitempty"`                                      // ACTIVE, PENDING, INACTIVE, ARCHIVED
	Difficulties    []string               `protobuf:"bytes,3,rep,name=difficulties,proto3" json:"difficulties,omitempty"`                              // EASY, MEDIUM, HARD
	Creators        []string               `protobuf:"bytes,4,rep,name=creators,proto3" json:"creators,omitempty"`                                      // Filter by creator usernames
	Tags            []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`                                              // Filter by tags (OR logic)
	RequireAllTags  bool                   `protobuf:"varint,6,opt,name=require_all_tags,json=requireAllTags,proto3" json:"require_all_tags,omitempty"` // If true, use AND logic for tags
	SubcountPattern string                 `protobuf:"bytes,7,opt,name=subcount_pattern,json=subcountPattern,proto3" json:"subcount_pattern,omitempty"` // Pattern matching for subcount field
	MinUsageCount   int32                  `protobuf:"varint,8,opt,name=min_usage_count,json=minUsageCount,proto3" json:"min_usage_count,omitempty"`    // Minimum usage count
	MaxUsageCount   int32                  `protobuf:"varint,9,opt,name=max_usage_count,json=maxUsageCount,proto3" json:"max_usage_count,omitempty"`    // Maximum usage count
	MinFeedback     int32                  `protobuf:"varint,10,opt,name=min_feedback,json=minFeedback,proto3" json:"min_feedback,omitempty"`           // Minimum feedback score
	MaxFeedback     int32                  `protobuf:"varint,11,opt,name=max_feedback,json=maxFeedback,proto3" json:"max_feedback,omitempty"`           // Maximum feedback score
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MetadataFilter) Reset() {
	*x = MetadataFilter{}
	mi := &file_v1_question_filter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataFilter) ProtoMessage() {}

func (x *MetadataFilter) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataFilter.ProtoReflect.Descriptor instead.
func (*MetadataFilter) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{2}
}

func (x *MetadataFilter) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *MetadataFilter) GetStatuses() []string {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *MetadataFilter) GetDifficulties() []string {
	if x != nil {
		return x.Difficulties
	}
	return nil
}

func (x *MetadataFilter) GetCreators() []string {
	if x != nil {
		return x.Creators
	}
	return nil
}

func (x *MetadataFilter) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MetadataFilter) GetRequireAllTags() bool {
	if x != nil {
		return x.RequireAllTags
	}
	return false
}

func (x *MetadataFilter) GetSubcountPattern() string {
	if x != nil {
		return x.SubcountPattern
	}
	return ""
}

func (x *MetadataFilter) GetMinUsageCount() int32 {
	if x != nil {
		return x.MinUsageCount
	}
	return 0
}

func (x *MetadataFilter) GetMaxUsageCount() int32 {
	if x != nil {
		return x.MaxUsageCount
	}
	return 0
}

func (x *MetadataFilter) GetMinFeedback() int32 {
	if x != nil {
		return x.MinFeedback
	}
	return 0
}

func (x *MetadataFilter) GetMaxFeedback() int32 {
	if x != nil {
		return x.MaxFeedback
	}
	return 0
}

// Date Range Filter
type DateRangeFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedAfter  *timestamp.Timestamp   `protobuf:"bytes,1,opt,name=created_after,json=createdAfter,proto3" json:"created_after,omitempty"`    // Created after this date
	CreatedBefore *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=created_before,json=createdBefore,proto3" json:"created_before,omitempty"` // Created before this date
	UpdatedAfter  *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=updated_after,json=updatedAfter,proto3" json:"updated_after,omitempty"`    // Updated after this date
	UpdatedBefore *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=updated_before,json=updatedBefore,proto3" json:"updated_before,omitempty"` // Updated before this date
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DateRangeFilter) Reset() {
	*x = DateRangeFilter{}
	mi := &file_v1_question_filter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateRangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRangeFilter) ProtoMessage() {}

func (x *DateRangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRangeFilter.ProtoReflect.Descriptor instead.
func (*DateRangeFilter) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{3}
}

func (x *DateRangeFilter) GetCreatedAfter() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAfter
	}
	return nil
}

func (x *DateRangeFilter) GetCreatedBefore() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedBefore
	}
	return nil
}

func (x *DateRangeFilter) GetUpdatedAfter() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAfter
	}
	return nil
}

func (x *DateRangeFilter) GetUpdatedBefore() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedBefore
	}
	return nil
}

// Boolean Content Filters
type ContentFilter struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	HasImages      bool                   `protobuf:"varint,1,opt,name=has_images,json=hasImages,proto3" json:"has_images,omitempty"`               // Filter questions with/without images
	HasSolution    bool                   `protobuf:"varint,2,opt,name=has_solution,json=hasSolution,proto3" json:"has_solution,omitempty"`         // Filter questions with/without solution
	HasAnswers     bool                   `protobuf:"varint,3,opt,name=has_answers,json=hasAnswers,proto3" json:"has_answers,omitempty"`            // Filter questions with/without answers
	HasFeedback    bool                   `protobuf:"varint,4,opt,name=has_feedback,json=hasFeedback,proto3" json:"has_feedback,omitempty"`         // Filter questions with/without feedback
	HasTags        bool                   `protobuf:"varint,5,opt,name=has_tags,json=hasTags,proto3" json:"has_tags,omitempty"`                     // Filter questions with/without tags
	ContentSearch  string                 `protobuf:"bytes,6,opt,name=content_search,json=contentSearch,proto3" json:"content_search,omitempty"`    // Full-text search in content
	SolutionSearch string                 `protobuf:"bytes,7,opt,name=solution_search,json=solutionSearch,proto3" json:"solution_search,omitempty"` // Full-text search in solution
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ContentFilter) Reset() {
	*x = ContentFilter{}
	mi := &file_v1_question_filter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentFilter) ProtoMessage() {}

func (x *ContentFilter) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentFilter.ProtoReflect.Descriptor instead.
func (*ContentFilter) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{4}
}

func (x *ContentFilter) GetHasImages() bool {
	if x != nil {
		return x.HasImages
	}
	return false
}

func (x *ContentFilter) GetHasSolution() bool {
	if x != nil {
		return x.HasSolution
	}
	return false
}

func (x *ContentFilter) GetHasAnswers() bool {
	if x != nil {
		return x.HasAnswers
	}
	return false
}

func (x *ContentFilter) GetHasFeedback() bool {
	if x != nil {
		return x.HasFeedback
	}
	return false
}

func (x *ContentFilter) GetHasTags() bool {
	if x != nil {
		return x.HasTags
	}
	return false
}

func (x *ContentFilter) GetContentSearch() string {
	if x != nil {
		return x.ContentSearch
	}
	return ""
}

func (x *ContentFilter) GetSolutionSearch() string {
	if x != nil {
		return x.SolutionSearch
	}
	return ""
}

type SortOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         SortField              `protobuf:"varint,1,opt,name=field,proto3,enum=v1.SortField" json:"field,omitempty"`
	Order         SortOrder              `protobuf:"varint,2,opt,name=order,proto3,enum=v1.SortOrder" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortOptions) Reset() {
	*x = SortOptions{}
	mi := &file_v1_question_filter_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortOptions) ProtoMessage() {}

func (x *SortOptions) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortOptions.ProtoReflect.Descriptor instead.
func (*SortOptions) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{5}
}

func (x *SortOptions) GetField() SortField {
	if x != nil {
		return x.Field
	}
	return SortField_SORT_FIELD_UNSPECIFIED
}

func (x *SortOptions) GetOrder() SortOrder {
	if x != nil {
		return x.Order
	}
	return SortOrder_SORT_ORDER_UNSPECIFIED
}

// Pagination for Filter Results
type FilterPagination struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`   // Page number (1-based)
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` // Items per page (max 100)
	Sort          []*SortOptions         `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`    // Multiple sort criteria
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterPagination) Reset() {
	*x = FilterPagination{}
	mi := &file_v1_question_filter_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterPagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterPagination) ProtoMessage() {}

func (x *FilterPagination) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterPagination.ProtoReflect.Descriptor instead.
func (*FilterPagination) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{6}
}

func (x *FilterPagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FilterPagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FilterPagination) GetSort() []*SortOptions {
	if x != nil {
		return x.Sort
	}
	return nil
}

// ListQuestionsByFilter - Comprehensive filtering
type ListQuestionsByFilterRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	QuestionCodeFilter *QuestionCodeFilter    `protobuf:"bytes,1,opt,name=question_code_filter,json=questionCodeFilter,proto3" json:"question_code_filter,omitempty"`
	MetadataFilter     *MetadataFilter        `protobuf:"bytes,2,opt,name=metadata_filter,json=metadataFilter,proto3" json:"metadata_filter,omitempty"`
	DateFilter         *DateRangeFilter       `protobuf:"bytes,3,opt,name=date_filter,json=dateFilter,proto3" json:"date_filter,omitempty"`
	ContentFilter      *ContentFilter         `protobuf:"bytes,4,opt,name=content_filter,json=contentFilter,proto3" json:"content_filter,omitempty"`
	Pagination         *FilterPagination      `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListQuestionsByFilterRequest) Reset() {
	*x = ListQuestionsByFilterRequest{}
	mi := &file_v1_question_filter_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQuestionsByFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuestionsByFilterRequest) ProtoMessage() {}

func (x *ListQuestionsByFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuestionsByFilterRequest.ProtoReflect.Descriptor instead.
func (*ListQuestionsByFilterRequest) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{7}
}

func (x *ListQuestionsByFilterRequest) GetQuestionCodeFilter() *QuestionCodeFilter {
	if x != nil {
		return x.QuestionCodeFilter
	}
	return nil
}

func (x *ListQuestionsByFilterRequest) GetMetadataFilter() *MetadataFilter {
	if x != nil {
		return x.MetadataFilter
	}
	return nil
}

func (x *ListQuestionsByFilterRequest) GetDateFilter() *DateRangeFilter {
	if x != nil {
		return x.DateFilter
	}
	return nil
}

func (x *ListQuestionsByFilterRequest) GetContentFilter() *ContentFilter {
	if x != nil {
		return x.ContentFilter
	}
	return nil
}

func (x *ListQuestionsByFilterRequest) GetPagination() *FilterPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListQuestionsByFilterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Questions     []*QuestionDetail      `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	TotalPages    int32                  `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	FilterSummary *FilterSummary         `protobuf:"bytes,6,opt,name=filter_summary,json=filterSummary,proto3" json:"filter_summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQuestionsByFilterResponse) Reset() {
	*x = ListQuestionsByFilterResponse{}
	mi := &file_v1_question_filter_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQuestionsByFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuestionsByFilterResponse) ProtoMessage() {}

func (x *ListQuestionsByFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuestionsByFilterResponse.ProtoReflect.Descriptor instead.
func (*ListQuestionsByFilterResponse) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{8}
}

func (x *ListQuestionsByFilterResponse) GetQuestions() []*QuestionDetail {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *ListQuestionsByFilterResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListQuestionsByFilterResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListQuestionsByFilterResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListQuestionsByFilterResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *ListQuestionsByFilterResponse) GetFilterSummary() *FilterSummary {
	if x != nil {
		return x.FilterSummary
	}
	return nil
}

// SearchQuestions - Full-text search with filters
type SearchQuestionsRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Query              string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`                                   // Search query
	SearchFields       []string               `protobuf:"bytes,2,rep,name=search_fields,json=searchFields,proto3" json:"search_fields,omitempty"` // Fields to search: content, solution, tags
	QuestionCodeFilter *QuestionCodeFilter    `protobuf:"bytes,3,opt,name=question_code_filter,json=questionCodeFilter,proto3" json:"question_code_filter,omitempty"`
	MetadataFilter     *MetadataFilter        `protobuf:"bytes,4,opt,name=metadata_filter,json=metadataFilter,proto3" json:"metadata_filter,omitempty"`
	DateFilter         *DateRangeFilter       `protobuf:"bytes,5,opt,name=date_filter,json=dateFilter,proto3" json:"date_filter,omitempty"`
	Pagination         *FilterPagination      `protobuf:"bytes,6,opt,name=pagination,proto3" json:"pagination,omitempty"`
	HighlightMatches   bool                   `protobuf:"varint,7,opt,name=highlight_matches,json=highlightMatches,proto3" json:"highlight_matches,omitempty"` // Return highlighted search matches
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SearchQuestionsRequest) Reset() {
	*x = SearchQuestionsRequest{}
	mi := &file_v1_question_filter_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQuestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQuestionsRequest) ProtoMessage() {}

func (x *SearchQuestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQuestionsRequest.ProtoReflect.Descriptor instead.
func (*SearchQuestionsRequest) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{9}
}

func (x *SearchQuestionsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchQuestionsRequest) GetSearchFields() []string {
	if x != nil {
		return x.SearchFields
	}
	return nil
}

func (x *SearchQuestionsRequest) GetQuestionCodeFilter() *QuestionCodeFilter {
	if x != nil {
		return x.QuestionCodeFilter
	}
	return nil
}

func (x *SearchQuestionsRequest) GetMetadataFilter() *MetadataFilter {
	if x != nil {
		return x.MetadataFilter
	}
	return nil
}

func (x *SearchQuestionsRequest) GetDateFilter() *DateRangeFilter {
	if x != nil {
		return x.DateFilter
	}
	return nil
}

func (x *SearchQuestionsRequest) GetPagination() *FilterPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchQuestionsRequest) GetHighlightMatches() bool {
	if x != nil {
		return x.HighlightMatches
	}
	return false
}

type SearchQuestionsResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Questions     []*QuestionSearchResult `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	TotalCount    int32                   `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	TotalPages    int32                   `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	Query         string                  `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty"`
	SearchFields  []string                `protobuf:"bytes,7,rep,name=search_fields,json=searchFields,proto3" json:"search_fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQuestionsResponse) Reset() {
	*x = SearchQuestionsResponse{}
	mi := &file_v1_question_filter_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQuestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQuestionsResponse) ProtoMessage() {}

func (x *SearchQuestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQuestionsResponse.ProtoReflect.Descriptor instead.
func (*SearchQuestionsResponse) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{10}
}

func (x *SearchQuestionsResponse) GetQuestions() []*QuestionSearchResult {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *SearchQuestionsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SearchQuestionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchQuestionsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchQuestionsResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *SearchQuestionsResponse) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchQuestionsResponse) GetSearchFields() []string {
	if x != nil {
		return x.SearchFields
	}
	return nil
}

// GetQuestionsByQuestionCode - Filter by QuestionCode components
type GetQuestionsByQuestionCodeRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	QuestionCodeFilter      *QuestionCodeFilter    `protobuf:"bytes,1,opt,name=question_code_filter,json=questionCodeFilter,proto3" json:"question_code_filter,omitempty"`
	MetadataFilter          *MetadataFilter        `protobuf:"bytes,2,opt,name=metadata_filter,json=metadataFilter,proto3" json:"metadata_filter,omitempty"`
	Pagination              *FilterPagination      `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	IncludeQuestionCodeInfo bool                   `protobuf:"varint,4,opt,name=include_question_code_info,json=includeQuestionCodeInfo,proto3" json:"include_question_code_info,omitempty"` // Include parsed QuestionCode information
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetQuestionsByQuestionCodeRequest) Reset() {
	*x = GetQuestionsByQuestionCodeRequest{}
	mi := &file_v1_question_filter_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuestionsByQuestionCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsByQuestionCodeRequest) ProtoMessage() {}

func (x *GetQuestionsByQuestionCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsByQuestionCodeRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionsByQuestionCodeRequest) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{11}
}

func (x *GetQuestionsByQuestionCodeRequest) GetQuestionCodeFilter() *QuestionCodeFilter {
	if x != nil {
		return x.QuestionCodeFilter
	}
	return nil
}

func (x *GetQuestionsByQuestionCodeRequest) GetMetadataFilter() *MetadataFilter {
	if x != nil {
		return x.MetadataFilter
	}
	return nil
}

func (x *GetQuestionsByQuestionCodeRequest) GetPagination() *FilterPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetQuestionsByQuestionCodeRequest) GetIncludeQuestionCodeInfo() bool {
	if x != nil {
		return x.IncludeQuestionCodeInfo
	}
	return false
}

type GetQuestionsByQuestionCodeResponse struct {
	state               protoimpl.MessageState  `protogen:"open.v1"`
	Questions           []*QuestionWithCodeInfo `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	TotalCount          int32                   `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page                int32                   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit               int32                   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	TotalPages          int32                   `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	QuestionCodeSummary []*QuestionCodeSummary  `protobuf:"bytes,6,rep,name=question_code_summary,json=questionCodeSummary,proto3" json:"question_code_summary,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetQuestionsByQuestionCodeResponse) Reset() {
	*x = GetQuestionsByQuestionCodeResponse{}
	mi := &file_v1_question_filter_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuestionsByQuestionCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsByQuestionCodeResponse) ProtoMessage() {}

func (x *GetQuestionsByQuestionCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsByQuestionCodeResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionsByQuestionCodeResponse) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{12}
}

func (x *GetQuestionsByQuestionCodeResponse) GetQuestions() []*QuestionWithCodeInfo {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *GetQuestionsByQuestionCodeResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetQuestionsByQuestionCodeResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetQuestionsByQuestionCodeResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetQuestionsByQuestionCodeResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *GetQuestionsByQuestionCodeResponse) GetQuestionCodeSummary() []*QuestionCodeSummary {
	if x != nil {
		return x.QuestionCodeSummary
	}
	return nil
}

// Filter Summary for analytics
type FilterSummary struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalQuestions int32                  `protobuf:"varint,1,opt,name=total_questions,json=totalQuestions,proto3" json:"total_questions,omitempty"`
	ByType         map[string]int32       `protobuf:"bytes,2,rep,name=by_type,json=byType,proto3" json:"by_type,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`                   // Count by question type
	ByStatus       map[string]int32       `protobuf:"bytes,3,rep,name=by_status,json=byStatus,proto3" json:"by_status,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`             // Count by status
	ByDifficulty   map[string]int32       `protobuf:"bytes,4,rep,name=by_difficulty,json=byDifficulty,proto3" json:"by_difficulty,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // Count by difficulty
	ByGrade        map[string]int32       `protobuf:"bytes,5,rep,name=by_grade,json=byGrade,proto3" json:"by_grade,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`                // Count by grade
	BySubject      map[string]int32       `protobuf:"bytes,6,rep,name=by_subject,json=bySubject,proto3" json:"by_subject,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`          // Count by subject
	ByCreator      map[string]int32       `protobuf:"bytes,7,rep,name=by_creator,json=byCreator,proto3" json:"by_creator,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`          // Count by creator
	WithImages     int32                  `protobuf:"varint,8,opt,name=with_images,json=withImages,proto3" json:"with_images,omitempty"`                                                                                 // Count with images
	WithSolution   int32                  `protobuf:"varint,9,opt,name=with_solution,json=withSolution,proto3" json:"with_solution,omitempty"`                                                                           // Count with solution
	WithFeedback   int32                  `protobuf:"varint,10,opt,name=with_feedback,json=withFeedback,proto3" json:"with_feedback,omitempty"`                                                                          // Count with feedback
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FilterSummary) Reset() {
	*x = FilterSummary{}
	mi := &file_v1_question_filter_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterSummary) ProtoMessage() {}

func (x *FilterSummary) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterSummary.ProtoReflect.Descriptor instead.
func (*FilterSummary) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{13}
}

func (x *FilterSummary) GetTotalQuestions() int32 {
	if x != nil {
		return x.TotalQuestions
	}
	return 0
}

func (x *FilterSummary) GetByType() map[string]int32 {
	if x != nil {
		return x.ByType
	}
	return nil
}

func (x *FilterSummary) GetByStatus() map[string]int32 {
	if x != nil {
		return x.ByStatus
	}
	return nil
}

func (x *FilterSummary) GetByDifficulty() map[string]int32 {
	if x != nil {
		return x.ByDifficulty
	}
	return nil
}

func (x *FilterSummary) GetByGrade() map[string]int32 {
	if x != nil {
		return x.ByGrade
	}
	return nil
}

func (x *FilterSummary) GetBySubject() map[string]int32 {
	if x != nil {
		return x.BySubject
	}
	return nil
}

func (x *FilterSummary) GetByCreator() map[string]int32 {
	if x != nil {
		return x.ByCreator
	}
	return nil
}

func (x *FilterSummary) GetWithImages() int32 {
	if x != nil {
		return x.WithImages
	}
	return 0
}

func (x *FilterSummary) GetWithSolution() int32 {
	if x != nil {
		return x.WithSolution
	}
	return 0
}

func (x *FilterSummary) GetWithFeedback() int32 {
	if x != nil {
		return x.WithFeedback
	}
	return 0
}

// Question with search highlights
type QuestionSearchResult struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Question       *QuestionDetail        `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Highlights     []*SearchHighlight     `protobuf:"bytes,2,rep,name=highlights,proto3" json:"highlights,omitempty"`
	RelevanceScore float32                `protobuf:"fixed32,3,opt,name=relevance_score,json=relevanceScore,proto3" json:"relevance_score,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QuestionSearchResult) Reset() {
	*x = QuestionSearchResult{}
	mi := &file_v1_question_filter_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionSearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionSearchResult) ProtoMessage() {}

func (x *QuestionSearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionSearchResult.ProtoReflect.Descriptor instead.
func (*QuestionSearchResult) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{14}
}

func (x *QuestionSearchResult) GetQuestion() *QuestionDetail {
	if x != nil {
		return x.Question
	}
	return nil
}

func (x *QuestionSearchResult) GetHighlights() []*SearchHighlight {
	if x != nil {
		return x.Highlights
	}
	return nil
}

func (x *QuestionSearchResult) GetRelevanceScore() float32 {
	if x != nil {
		return x.RelevanceScore
	}
	return 0
}

// Search highlight information
type SearchHighlight struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`                 // Field name where match was found
	Snippet       string                 `protobuf:"bytes,2,opt,name=snippet,proto3" json:"snippet,omitempty"`             // Text snippet with highlights
	Positions     []int32                `protobuf:"varint,3,rep,packed,name=positions,proto3" json:"positions,omitempty"` // Character positions of matches
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchHighlight) Reset() {
	*x = SearchHighlight{}
	mi := &file_v1_question_filter_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchHighlight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHighlight) ProtoMessage() {}

func (x *SearchHighlight) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHighlight.ProtoReflect.Descriptor instead.
func (*SearchHighlight) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{15}
}

func (x *SearchHighlight) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SearchHighlight) GetSnippet() string {
	if x != nil {
		return x.Snippet
	}
	return ""
}

func (x *SearchHighlight) GetPositions() []int32 {
	if x != nil {
		return x.Positions
	}
	return nil
}

// Question with QuestionCode information
type QuestionWithCodeInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Question         *QuestionDetail        `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	QuestionCodeInfo *QuestionCodeInfo      `protobuf:"bytes,2,opt,name=question_code_info,json=questionCodeInfo,proto3" json:"question_code_info,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *QuestionWithCodeInfo) Reset() {
	*x = QuestionWithCodeInfo{}
	mi := &file_v1_question_filter_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionWithCodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionWithCodeInfo) ProtoMessage() {}

func (x *QuestionWithCodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionWithCodeInfo.ProtoReflect.Descriptor instead.
func (*QuestionWithCodeInfo) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{16}
}

func (x *QuestionWithCodeInfo) GetQuestion() *QuestionDetail {
	if x != nil {
		return x.Question
	}
	return nil
}

func (x *QuestionWithCodeInfo) GetQuestionCodeInfo() *QuestionCodeInfo {
	if x != nil {
		return x.QuestionCodeInfo
	}
	return nil
}

// QuestionCode information
type QuestionCodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Format        string                 `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`   // ID5 or ID6
	Grade         string                 `protobuf:"bytes,3,opt,name=grade,proto3" json:"grade,omitempty"`     // Human-readable grade
	Subject       string                 `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"` // Human-readable subject
	Chapter       string                 `protobuf:"bytes,5,opt,name=chapter,proto3" json:"chapter,omitempty"`
	Level         string                 `protobuf:"bytes,6,opt,name=level,proto3" json:"level,omitempty"` // Human-readable level
	Lesson        string                 `protobuf:"bytes,7,opt,name=lesson,proto3" json:"lesson,omitempty"`
	Form          string                 `protobuf:"bytes,8,opt,name=form,proto3" json:"form,omitempty"`
	FolderPath    string                 `protobuf:"bytes,9,opt,name=folder_path,json=folderPath,proto3" json:"folder_path,omitempty"` // Google Drive folder path
	IsId6         bool                   `protobuf:"varint,10,opt,name=is_id6,json=isId6,proto3" json:"is_id6,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionCodeInfo) Reset() {
	*x = QuestionCodeInfo{}
	mi := &file_v1_question_filter_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionCodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionCodeInfo) ProtoMessage() {}

func (x *QuestionCodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionCodeInfo.ProtoReflect.Descriptor instead.
func (*QuestionCodeInfo) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{17}
}

func (x *QuestionCodeInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *QuestionCodeInfo) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *QuestionCodeInfo) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *QuestionCodeInfo) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *QuestionCodeInfo) GetChapter() string {
	if x != nil {
		return x.Chapter
	}
	return ""
}

func (x *QuestionCodeInfo) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *QuestionCodeInfo) GetLesson() string {
	if x != nil {
		return x.Lesson
	}
	return ""
}

func (x *QuestionCodeInfo) GetForm() string {
	if x != nil {
		return x.Form
	}
	return ""
}

func (x *QuestionCodeInfo) GetFolderPath() string {
	if x != nil {
		return x.FolderPath
	}
	return ""
}

func (x *QuestionCodeInfo) GetIsId6() bool {
	if x != nil {
		return x.IsId6
	}
	return false
}

// QuestionCode summary for analytics
type QuestionCodeSummary struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Grade            string                 `protobuf:"bytes,1,opt,name=grade,proto3" json:"grade,omitempty"`
	Subject          string                 `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Chapter          string                 `protobuf:"bytes,3,opt,name=chapter,proto3" json:"chapter,omitempty"`
	Level            string                 `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
	QuestionCount    int32                  `protobuf:"varint,5,opt,name=question_count,json=questionCount,proto3" json:"question_count,omitempty"`
	AvailableLessons []string               `protobuf:"bytes,6,rep,name=available_lessons,json=availableLessons,proto3" json:"available_lessons,omitempty"`
	AvailableForms   []string               `protobuf:"bytes,7,rep,name=available_forms,json=availableForms,proto3" json:"available_forms,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *QuestionCodeSummary) Reset() {
	*x = QuestionCodeSummary{}
	mi := &file_v1_question_filter_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionCodeSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionCodeSummary) ProtoMessage() {}

func (x *QuestionCodeSummary) ProtoReflect() protoreflect.Message {
	mi := &file_v1_question_filter_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionCodeSummary.ProtoReflect.Descriptor instead.
func (*QuestionCodeSummary) Descriptor() ([]byte, []int) {
	return file_v1_question_filter_proto_rawDescGZIP(), []int{18}
}

func (x *QuestionCodeSummary) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *QuestionCodeSummary) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *QuestionCodeSummary) GetChapter() string {
	if x != nil {
		return x.Chapter
	}
	return ""
}

func (x *QuestionCodeSummary) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *QuestionCodeSummary) GetQuestionCount() int32 {
	if x != nil {
		return x.QuestionCount
	}
	return 0
}

func (x *QuestionCodeSummary) GetAvailableLessons() []string {
	if x != nil {
		return x.AvailableLessons
	}
	return nil
}

func (x *QuestionCodeSummary) GetAvailableForms() []string {
	if x != nil {
		return x.AvailableForms
	}
	return nil
}

var File_v1_question_filter_proto protoreflect.FileDescriptor

const file_v1_question_filter_proto_rawDesc = "" +
	"\n" +
	"\x18v1/question_filter.proto\x12\x02v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/api/annotations.proto\"\xc3\x04\n" +
	"\x0eQuestionDetail\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vraw_content\x18\x02 \x01(\tR\n" +
	"rawContent\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1a\n" +
	"\bsubcount\x18\x04 \x01(\tR\bsubcount\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\x12\x16\n" +
	"\x06source\x18\x06 \x01(\tR\x06source\x12\x18\n" +
	"\aanswers\x18\a \x01(\tR\aanswers\x12%\n" +
	"\x0ecorrect_answer\x18\b \x01(\tR\rcorrectAnswer\x12\x1a\n" +
	"\bsolution\x18\t \x01(\tR\bsolution\x12\x12\n" +
	"\x04tags\x18\n" +
	" \x03(\tR\x04tags\x12\x1f\n" +
	"\vusage_count\x18\v \x01(\x05R\n" +
	"usageCount\x12\x18\n" +
	"\acreator\x18\f \x01(\tR\acreator\x12\x16\n" +
	"\x06status\x18\r \x01(\tR\x06status\x12\x1a\n" +
	"\bfeedback\x18\x0e \x01(\x05R\bfeedback\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x0f \x01(\tR\n" +
	"difficulty\x129\n" +
	"\n" +
	"created_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12(\n" +
	"\x10question_code_id\x18\x12 \x01(\tR\x0equestionCodeId\"\xee\x01\n" +
	"\x12QuestionCodeFilter\x12\x16\n" +
	"\x06grades\x18\x01 \x03(\tR\x06grades\x12\x1a\n" +
	"\bsubjects\x18\x02 \x03(\tR\bsubjects\x12\x1a\n" +
	"\bchapters\x18\x03 \x03(\tR\bchapters\x12\x16\n" +
	"\x06levels\x18\x04 \x03(\tR\x06levels\x12\x18\n" +
	"\alessons\x18\x05 \x03(\tR\alessons\x12\x14\n" +
	"\x05forms\x18\x06 \x03(\tR\x05forms\x12\x1f\n" +
	"\vinclude_id5\x18\a \x01(\bR\n" +
	"includeId5\x12\x1f\n" +
	"\vinclude_id6\x18\b \x01(\bR\n" +
	"includeId6\"\x81\x03\n" +
	"\x0eMetadataFilter\x12\x14\n" +
	"\x05types\x18\x01 \x03(\tR\x05types\x12\x1a\n" +
	"\bstatuses\x18\x02 \x03(\tR\bstatuses\x12\"\n" +
	"\fdifficulties\x18\x03 \x03(\tR\fdifficulties\x12\x1a\n" +
	"\bcreators\x18\x04 \x03(\tR\bcreators\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x12(\n" +
	"\x10require_all_tags\x18\x06 \x01(\bR\x0erequireAllTags\x12)\n" +
	"\x10subcount_pattern\x18\a \x01(\tR\x0fsubcountPattern\x12&\n" +
	"\x0fmin_usage_count\x18\b \x01(\x05R\rminUsageCount\x12&\n" +
	"\x0fmax_usage_count\x18\t \x01(\x05R\rmaxUsageCount\x12!\n" +
	"\fmin_feedback\x18\n" +
	" \x01(\x05R\vminFeedback\x12!\n" +
	"\fmax_feedback\x18\v \x01(\x05R\vmaxFeedback\"\x99\x02\n" +
	"\x0fDateRangeFilter\x12?\n" +
	"\rcreated_after\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\fcreatedAfter\x12A\n" +
	"\x0ecreated_before\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\rcreatedBefore\x12?\n" +
	"\rupdated_after\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\fupdatedAfter\x12A\n" +
	"\x0eupdated_before\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\rupdatedBefore\"\x80\x02\n" +
	"\rContentFilter\x12\x1d\n" +
	"\n" +
	"has_images\x18\x01 \x01(\bR\thasImages\x12!\n" +
	"\fhas_solution\x18\x02 \x01(\bR\vhasSolution\x12\x1f\n" +
	"\vhas_answers\x18\x03 \x01(\bR\n" +
	"hasAnswers\x12!\n" +
	"\fhas_feedback\x18\x04 \x01(\bR\vhasFeedback\x12\x19\n" +
	"\bhas_tags\x18\x05 \x01(\bR\ahasTags\x12%\n" +
	"\x0econtent_search\x18\x06 \x01(\tR\rcontentSearch\x12'\n" +
	"\x0fsolution_search\x18\a \x01(\tR\x0esolutionSearch\"W\n" +
	"\vSortOptions\x12#\n" +
	"\x05field\x18\x01 \x01(\x0e2\r.v1.SortFieldR\x05field\x12#\n" +
	"\x05order\x18\x02 \x01(\x0e2\r.v1.SortOrderR\x05order\"a\n" +
	"\x10FilterPagination\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12#\n" +
	"\x04sort\x18\x03 \x03(\v2\x0f.v1.SortOptionsR\x04sort\"\xcb\x02\n" +
	"\x1cListQuestionsByFilterRequest\x12H\n" +
	"\x14question_code_filter\x18\x01 \x01(\v2\x16.v1.QuestionCodeFilterR\x12questionCodeFilter\x12;\n" +
	"\x0fmetadata_filter\x18\x02 \x01(\v2\x12.v1.MetadataFilterR\x0emetadataFilter\x124\n" +
	"\vdate_filter\x18\x03 \x01(\v2\x13.v1.DateRangeFilterR\n" +
	"dateFilter\x128\n" +
	"\x0econtent_filter\x18\x04 \x01(\v2\x11.v1.ContentFilterR\rcontentFilter\x124\n" +
	"\n" +
	"pagination\x18\x05 \x01(\v2\x14.v1.FilterPaginationR\n" +
	"pagination\"\xf7\x01\n" +
	"\x1dListQuestionsByFilterResponse\x120\n" +
	"\tquestions\x18\x01 \x03(\v2\x12.v1.QuestionDetailR\tquestions\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x1f\n" +
	"\vtotal_pages\x18\x05 \x01(\x05R\n" +
	"totalPages\x128\n" +
	"\x0efilter_summary\x18\x06 \x01(\v2\x11.v1.FilterSummaryR\rfilterSummary\"\xf3\x02\n" +
	"\x16SearchQuestionsRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12#\n" +
	"\rsearch_fields\x18\x02 \x03(\tR\fsearchFields\x12H\n" +
	"\x14question_code_filter\x18\x03 \x01(\v2\x16.v1.QuestionCodeFilterR\x12questionCodeFilter\x12;\n" +
	"\x0fmetadata_filter\x18\x04 \x01(\v2\x12.v1.MetadataFilterR\x0emetadataFilter\x124\n" +
	"\vdate_filter\x18\x05 \x01(\v2\x13.v1.DateRangeFilterR\n" +
	"dateFilter\x124\n" +
	"\n" +
	"pagination\x18\x06 \x01(\v2\x14.v1.FilterPaginationR\n" +
	"pagination\x12+\n" +
	"\x11highlight_matches\x18\a \x01(\bR\x10highlightMatches\"\xf8\x01\n" +
	"\x17SearchQuestionsResponse\x126\n" +
	"\tquestions\x18\x01 \x03(\v2\x18.v1.QuestionSearchResultR\tquestions\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x1f\n" +
	"\vtotal_pages\x18\x05 \x01(\x05R\n" +
	"totalPages\x12\x14\n" +
	"\x05query\x18\x06 \x01(\tR\x05query\x12#\n" +
	"\rsearch_fields\x18\a \x03(\tR\fsearchFields\"\x9d\x02\n" +
	"!GetQuestionsByQuestionCodeRequest\x12H\n" +
	"\x14question_code_filter\x18\x01 \x01(\v2\x16.v1.QuestionCodeFilterR\x12questionCodeFilter\x12;\n" +
	"\x0fmetadata_filter\x18\x02 \x01(\v2\x12.v1.MetadataFilterR\x0emetadataFilter\x124\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\x14.v1.FilterPaginationR\n" +
	"pagination\x12;\n" +
	"\x1ainclude_question_code_info\x18\x04 \x01(\bR\x17includeQuestionCodeInfo\"\x95\x02\n" +
	"\"GetQuestionsByQuestionCodeResponse\x126\n" +
	"\tquestions\x18\x01 \x03(\v2\x18.v1.QuestionWithCodeInfoR\tquestions\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x1f\n" +
	"\vtotal_pages\x18\x05 \x01(\x05R\n" +
	"totalPages\x12K\n" +
	"\x15question_code_summary\x18\x06 \x03(\v2\x17.v1.QuestionCodeSummaryR\x13questionCodeSummary\"\x91\a\n" +
	"\rFilterSummary\x12'\n" +
	"\x0ftotal_questions\x18\x01 \x01(\x05R\x0etotalQuestions\x126\n" +
	"\aby_type\x18\x02 \x03(\v2\x1d.v1.FilterSummary.ByTypeEntryR\x06byType\x12<\n" +
	"\tby_status\x18\x03 \x03(\v2\x1f.v1.FilterSummary.ByStatusEntryR\bbyStatus\x12H\n" +
	"\rby_difficulty\x18\x04 \x03(\v2#.v1.FilterSummary.ByDifficultyEntryR\fbyDifficulty\x129\n" +
	"\bby_grade\x18\x05 \x03(\v2\x1e.v1.FilterSummary.ByGradeEntryR\abyGrade\x12?\n" +
	"\n" +
	"by_subject\x18\x06 \x03(\v2 .v1.FilterSummary.BySubjectEntryR\tbySubject\x12?\n" +
	"\n" +
	"by_creator\x18\a \x03(\v2 .v1.FilterSummary.ByCreatorEntryR\tbyCreator\x12\x1f\n" +
	"\vwith_images\x18\b \x01(\x05R\n" +
	"withImages\x12#\n" +
	"\rwith_solution\x18\t \x01(\x05R\fwithSolution\x12#\n" +
	"\rwith_feedback\x18\n" +
	" \x01(\x05R\fwithFeedback\x1a9\n" +
	"\vByTypeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a;\n" +
	"\rByStatusEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a?\n" +
	"\x11ByDifficultyEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a:\n" +
	"\fByGradeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a<\n" +
	"\x0eBySubjectEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a<\n" +
	"\x0eByCreatorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xa4\x01\n" +
	"\x14QuestionSearchResult\x12.\n" +
	"\bquestion\x18\x01 \x01(\v2\x12.v1.QuestionDetailR\bquestion\x123\n" +
	"\n" +
	"highlights\x18\x02 \x03(\v2\x13.v1.SearchHighlightR\n" +
	"highlights\x12'\n" +
	"\x0frelevance_score\x18\x03 \x01(\x02R\x0erelevanceScore\"_\n" +
	"\x0fSearchHighlight\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x18\n" +
	"\asnippet\x18\x02 \x01(\tR\asnippet\x12\x1c\n" +
	"\tpositions\x18\x03 \x03(\x05R\tpositions\"\x8a\x01\n" +
	"\x14QuestionWithCodeInfo\x12.\n" +
	"\bquestion\x18\x01 \x01(\v2\x12.v1.QuestionDetailR\bquestion\x12B\n" +
	"\x12question_code_info\x18\x02 \x01(\v2\x14.v1.QuestionCodeInfoR\x10questionCodeInfo\"\x82\x02\n" +
	"\x10QuestionCodeInfo\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x16\n" +
	"\x06format\x18\x02 \x01(\tR\x06format\x12\x14\n" +
	"\x05grade\x18\x03 \x01(\tR\x05grade\x12\x18\n" +
	"\asubject\x18\x04 \x01(\tR\asubject\x12\x18\n" +
	"\achapter\x18\x05 \x01(\tR\achapter\x12\x14\n" +
	"\x05level\x18\x06 \x01(\tR\x05level\x12\x16\n" +
	"\x06lesson\x18\a \x01(\tR\x06lesson\x12\x12\n" +
	"\x04form\x18\b \x01(\tR\x04form\x12\x1f\n" +
	"\vfolder_path\x18\t \x01(\tR\n" +
	"folderPath\x12\x15\n" +
	"\x06is_id6\x18\n" +
	" \x01(\bR\x05isId6\"\xf2\x01\n" +
	"\x13QuestionCodeSummary\x12\x14\n" +
	"\x05grade\x18\x01 \x01(\tR\x05grade\x12\x18\n" +
	"\asubject\x18\x02 \x01(\tR\asubject\x12\x18\n" +
	"\achapter\x18\x03 \x01(\tR\achapter\x12\x14\n" +
	"\x05level\x18\x04 \x01(\tR\x05level\x12%\n" +
	"\x0equestion_count\x18\x05 \x01(\x05R\rquestionCount\x12+\n" +
	"\x11available_lessons\x18\x06 \x03(\tR\x10availableLessons\x12'\n" +
	"\x0favailable_forms\x18\a \x03(\tR\x0eavailableForms*\xf7\x01\n" +
	"\tSortField\x12\x1a\n" +
	"\x16SORT_FIELD_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15SORT_FIELD_CREATED_AT\x10\x01\x12\x19\n" +
	"\x15SORT_FIELD_UPDATED_AT\x10\x02\x12\x1a\n" +
	"\x16SORT_FIELD_USAGE_COUNT\x10\x03\x12\x17\n" +
	"\x13SORT_FIELD_FEEDBACK\x10\x04\x12\x19\n" +
	"\x15SORT_FIELD_DIFFICULTY\x10\x05\x12\x1c\n" +
	"\x18SORT_FIELD_QUESTION_CODE\x10\x06\x12\x13\n" +
	"\x0fSORT_FIELD_TYPE\x10\a\x12\x15\n" +
	"\x11SORT_FIELD_STATUS\x10\b*P\n" +
	"\tSortOrder\x12\x1a\n" +
	"\x16SORT_ORDER_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eSORT_ORDER_ASC\x10\x01\x12\x13\n" +
	"\x0fSORT_ORDER_DESC\x10\x022\xa0\x03\n" +
	"\x15QuestionFilterService\x12\x81\x01\n" +
	"\x15ListQuestionsByFilter\x12 .v1.ListQuestionsByFilterRequest\x1a!.v1.ListQuestionsByFilterResponse\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/api/v1/questions/filter\x12o\n" +
	"\x0fSearchQuestions\x12\x1a.v1.SearchQuestionsRequest\x1a\x1b.v1.SearchQuestionsResponse\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/api/v1/questions/search\x12\x91\x01\n" +
	"\x1aGetQuestionsByQuestionCode\x12%.v1.GetQuestionsByQuestionCodeRequest\x1a&.v1.GetQuestionsByQuestionCodeResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/api/v1/questions/by-codeBAZ?github.com/AnhPhan49/exam-bank-system/apps/backend/pkg/proto/v1b\x06proto3"

var (
	file_v1_question_filter_proto_rawDescOnce sync.Once
	file_v1_question_filter_proto_rawDescData []byte
)

func file_v1_question_filter_proto_rawDescGZIP() []byte {
	file_v1_question_filter_proto_rawDescOnce.Do(func() {
		file_v1_question_filter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_question_filter_proto_rawDesc), len(file_v1_question_filter_proto_rawDesc)))
	})
	return file_v1_question_filter_proto_rawDescData
}

var file_v1_question_filter_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_question_filter_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_v1_question_filter_proto_goTypes = []any{
	(SortField)(0),                             // 0: v1.SortField
	(SortOrder)(0),                             // 1: v1.SortOrder
	(*QuestionDetail)(nil),                     // 2: v1.QuestionDetail
	(*QuestionCodeFilter)(nil),                 // 3: v1.QuestionCodeFilter
	(*MetadataFilter)(nil),                     // 4: v1.MetadataFilter
	(*DateRangeFilter)(nil),                    // 5: v1.DateRangeFilter
	(*ContentFilter)(nil),                      // 6: v1.ContentFilter
	(*SortOptions)(nil),                        // 7: v1.SortOptions
	(*FilterPagination)(nil),                   // 8: v1.FilterPagination
	(*ListQuestionsByFilterRequest)(nil),       // 9: v1.ListQuestionsByFilterRequest
	(*ListQuestionsByFilterResponse)(nil),      // 10: v1.ListQuestionsByFilterResponse
	(*SearchQuestionsRequest)(nil),             // 11: v1.SearchQuestionsRequest
	(*SearchQuestionsResponse)(nil),            // 12: v1.SearchQuestionsResponse
	(*GetQuestionsByQuestionCodeRequest)(nil),  // 13: v1.GetQuestionsByQuestionCodeRequest
	(*GetQuestionsByQuestionCodeResponse)(nil), // 14: v1.GetQuestionsByQuestionCodeResponse
	(*FilterSummary)(nil),                      // 15: v1.FilterSummary
	(*QuestionSearchResult)(nil),               // 16: v1.QuestionSearchResult
	(*SearchHighlight)(nil),                    // 17: v1.SearchHighlight
	(*QuestionWithCodeInfo)(nil),               // 18: v1.QuestionWithCodeInfo
	(*QuestionCodeInfo)(nil),                   // 19: v1.QuestionCodeInfo
	(*QuestionCodeSummary)(nil),                // 20: v1.QuestionCodeSummary
	nil,                                        // 21: v1.FilterSummary.ByTypeEntry
	nil,                                        // 22: v1.FilterSummary.ByStatusEntry
	nil,                                        // 23: v1.FilterSummary.ByDifficultyEntry
	nil,                                        // 24: v1.FilterSummary.ByGradeEntry
	nil,                                        // 25: v1.FilterSummary.BySubjectEntry
	nil,                                        // 26: v1.FilterSummary.ByCreatorEntry
	(*timestamp.Timestamp)(nil),                // 27: google.protobuf.Timestamp
}
var file_v1_question_filter_proto_depIdxs = []int32{
	27, // 0: v1.QuestionDetail.created_at:type_name -> google.protobuf.Timestamp
	27, // 1: v1.QuestionDetail.updated_at:type_name -> google.protobuf.Timestamp
	27, // 2: v1.DateRangeFilter.created_after:type_name -> google.protobuf.Timestamp
	27, // 3: v1.DateRangeFilter.created_before:type_name -> google.protobuf.Timestamp
	27, // 4: v1.DateRangeFilter.updated_after:type_name -> google.protobuf.Timestamp
	27, // 5: v1.DateRangeFilter.updated_before:type_name -> google.protobuf.Timestamp
	0,  // 6: v1.SortOptions.field:type_name -> v1.SortField
	1,  // 7: v1.SortOptions.order:type_name -> v1.SortOrder
	7,  // 8: v1.FilterPagination.sort:type_name -> v1.SortOptions
	3,  // 9: v1.ListQuestionsByFilterRequest.question_code_filter:type_name -> v1.QuestionCodeFilter
	4,  // 10: v1.ListQuestionsByFilterRequest.metadata_filter:type_name -> v1.MetadataFilter
	5,  // 11: v1.ListQuestionsByFilterRequest.date_filter:type_name -> v1.DateRangeFilter
	6,  // 12: v1.ListQuestionsByFilterRequest.content_filter:type_name -> v1.ContentFilter
	8,  // 13: v1.ListQuestionsByFilterRequest.pagination:type_name -> v1.FilterPagination
	2,  // 14: v1.ListQuestionsByFilterResponse.questions:type_name -> v1.QuestionDetail
	15, // 15: v1.ListQuestionsByFilterResponse.filter_summary:type_name -> v1.FilterSummary
	3,  // 16: v1.SearchQuestionsRequest.question_code_filter:type_name -> v1.QuestionCodeFilter
	4,  // 17: v1.SearchQuestionsRequest.metadata_filter:type_name -> v1.MetadataFilter
	5,  // 18: v1.SearchQuestionsRequest.date_filter:type_name -> v1.DateRangeFilter
	8,  // 19: v1.SearchQuestionsRequest.pagination:type_name -> v1.FilterPagination
	16, // 20: v1.SearchQuestionsResponse.questions:type_name -> v1.QuestionSearchResult
	3,  // 21: v1.GetQuestionsByQuestionCodeRequest.question_code_filter:type_name -> v1.QuestionCodeFilter
	4,  // 22: v1.GetQuestionsByQuestionCodeRequest.metadata_filter:type_name -> v1.MetadataFilter
	8,  // 23: v1.GetQuestionsByQuestionCodeRequest.pagination:type_name -> v1.FilterPagination
	18, // 24: v1.GetQuestionsByQuestionCodeResponse.questions:type_name -> v1.QuestionWithCodeInfo
	20, // 25: v1.GetQuestionsByQuestionCodeResponse.question_code_summary:type_name -> v1.QuestionCodeSummary
	21, // 26: v1.FilterSummary.by_type:type_name -> v1.FilterSummary.ByTypeEntry
	22, // 27: v1.FilterSummary.by_status:type_name -> v1.FilterSummary.ByStatusEntry
	23, // 28: v1.FilterSummary.by_difficulty:type_name -> v1.FilterSummary.ByDifficultyEntry
	24, // 29: v1.FilterSummary.by_grade:type_name -> v1.FilterSummary.ByGradeEntry
	25, // 30: v1.FilterSummary.by_subject:type_name -> v1.FilterSummary.BySubjectEntry
	26, // 31: v1.FilterSummary.by_creator:type_name -> v1.FilterSummary.ByCreatorEntry
	2,  // 32: v1.QuestionSearchResult.question:type_name -> v1.QuestionDetail
	17, // 33: v1.QuestionSearchResult.highlights:type_name -> v1.SearchHighlight
	2,  // 34: v1.QuestionWithCodeInfo.question:type_name -> v1.QuestionDetail
	19, // 35: v1.QuestionWithCodeInfo.question_code_info:type_name -> v1.QuestionCodeInfo
	9,  // 36: v1.QuestionFilterService.ListQuestionsByFilter:input_type -> v1.ListQuestionsByFilterRequest
	11, // 37: v1.QuestionFilterService.SearchQuestions:input_type -> v1.SearchQuestionsRequest
	13, // 38: v1.QuestionFilterService.GetQuestionsByQuestionCode:input_type -> v1.GetQuestionsByQuestionCodeRequest
	10, // 39: v1.QuestionFilterService.ListQuestionsByFilter:output_type -> v1.ListQuestionsByFilterResponse
	12, // 40: v1.QuestionFilterService.SearchQuestions:output_type -> v1.SearchQuestionsResponse
	14, // 41: v1.QuestionFilterService.GetQuestionsByQuestionCode:output_type -> v1.GetQuestionsByQuestionCodeResponse
	39, // [39:42] is the sub-list for method output_type
	36, // [36:39] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_v1_question_filter_proto_init() }
func file_v1_question_filter_proto_init() {
	if File_v1_question_filter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_question_filter_proto_rawDesc), len(file_v1_question_filter_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_question_filter_proto_goTypes,
		DependencyIndexes: file_v1_question_filter_proto_depIdxs,
		EnumInfos:         file_v1_question_filter_proto_enumTypes,
		MessageInfos:      file_v1_question_filter_proto_msgTypes,
	}.Build()
	File_v1_question_filter_proto = out.File
	file_v1_question_filter_proto_goTypes = nil
	file_v1_question_filter_proto_depIdxs = nil
}

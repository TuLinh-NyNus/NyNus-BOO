// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: v1/library.proto

package v1

import (
	common "exam-bank-system/apps/backend/pkg/proto/common"
	_ "exam-bank-system/apps/backend/pkg/proto/google/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Library item type discriminator.
type LibraryItemType int32

const (
	LibraryItemType_LIBRARY_ITEM_TYPE_UNSPECIFIED LibraryItemType = 0
	LibraryItemType_LIBRARY_ITEM_TYPE_EXAM        LibraryItemType = 1
	LibraryItemType_LIBRARY_ITEM_TYPE_BOOK        LibraryItemType = 2
	LibraryItemType_LIBRARY_ITEM_TYPE_VIDEO       LibraryItemType = 3
)

// Enum value maps for LibraryItemType.
var (
	LibraryItemType_name = map[int32]string{
		0: "LIBRARY_ITEM_TYPE_UNSPECIFIED",
		1: "LIBRARY_ITEM_TYPE_EXAM",
		2: "LIBRARY_ITEM_TYPE_BOOK",
		3: "LIBRARY_ITEM_TYPE_VIDEO",
	}
	LibraryItemType_value = map[string]int32{
		"LIBRARY_ITEM_TYPE_UNSPECIFIED": 0,
		"LIBRARY_ITEM_TYPE_EXAM":        1,
		"LIBRARY_ITEM_TYPE_BOOK":        2,
		"LIBRARY_ITEM_TYPE_VIDEO":       3,
	}
)

func (x LibraryItemType) Enum() *LibraryItemType {
	p := new(LibraryItemType)
	*p = x
	return p
}

func (x LibraryItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LibraryItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_library_proto_enumTypes[0].Descriptor()
}

func (LibraryItemType) Type() protoreflect.EnumType {
	return &file_v1_library_proto_enumTypes[0]
}

func (x LibraryItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LibraryItemType.Descriptor instead.
func (LibraryItemType) EnumDescriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{0}
}

// Upload status workflow for library content.
type LibraryUploadStatus int32

const (
	LibraryUploadStatus_LIBRARY_UPLOAD_STATUS_UNSPECIFIED LibraryUploadStatus = 0
	LibraryUploadStatus_LIBRARY_UPLOAD_STATUS_PENDING     LibraryUploadStatus = 1
	LibraryUploadStatus_LIBRARY_UPLOAD_STATUS_APPROVED    LibraryUploadStatus = 2
	LibraryUploadStatus_LIBRARY_UPLOAD_STATUS_REJECTED    LibraryUploadStatus = 3
	LibraryUploadStatus_LIBRARY_UPLOAD_STATUS_ARCHIVED    LibraryUploadStatus = 4
)

// Enum value maps for LibraryUploadStatus.
var (
	LibraryUploadStatus_name = map[int32]string{
		0: "LIBRARY_UPLOAD_STATUS_UNSPECIFIED",
		1: "LIBRARY_UPLOAD_STATUS_PENDING",
		2: "LIBRARY_UPLOAD_STATUS_APPROVED",
		3: "LIBRARY_UPLOAD_STATUS_REJECTED",
		4: "LIBRARY_UPLOAD_STATUS_ARCHIVED",
	}
	LibraryUploadStatus_value = map[string]int32{
		"LIBRARY_UPLOAD_STATUS_UNSPECIFIED": 0,
		"LIBRARY_UPLOAD_STATUS_PENDING":     1,
		"LIBRARY_UPLOAD_STATUS_APPROVED":    2,
		"LIBRARY_UPLOAD_STATUS_REJECTED":    3,
		"LIBRARY_UPLOAD_STATUS_ARCHIVED":    4,
	}
)

func (x LibraryUploadStatus) Enum() *LibraryUploadStatus {
	p := new(LibraryUploadStatus)
	*p = x
	return p
}

func (x LibraryUploadStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LibraryUploadStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_library_proto_enumTypes[1].Descriptor()
}

func (LibraryUploadStatus) Type() protoreflect.EnumType {
	return &file_v1_library_proto_enumTypes[1]
}

func (x LibraryUploadStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LibraryUploadStatus.Descriptor instead.
func (LibraryUploadStatus) EnumDescriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{1}
}

// Base library item returned to clients.
type LibraryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          LibraryItemType        `protobuf:"varint,3,opt,name=type,proto3,enum=v1.LibraryItemType" json:"type,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	FileUrl       string                 `protobuf:"bytes,5,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	FileId        string                 `protobuf:"bytes,6,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	ThumbnailUrl  string                 `protobuf:"bytes,7,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	FileSize      *wrapperspb.Int64Value `protobuf:"bytes,8,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	UploadStatus  LibraryUploadStatus    `protobuf:"varint,9,opt,name=upload_status,json=uploadStatus,proto3,enum=v1.LibraryUploadStatus" json:"upload_status,omitempty"`
	IsActive      bool                   `protobuf:"varint,10,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	UploadedBy    string                 `protobuf:"bytes,11,opt,name=uploaded_by,json=uploadedBy,proto3" json:"uploaded_by,omitempty"`
	ApprovedBy    string                 `protobuf:"bytes,12,opt,name=approved_by,json=approvedBy,proto3" json:"approved_by,omitempty"`
	Tags          []string               `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty"`
	RequiredRole  string                 `protobuf:"bytes,14,opt,name=required_role,json=requiredRole,proto3" json:"required_role,omitempty"` // GUEST, STUDENT, TUTOR, TEACHER, ADMIN
	RequiredLevel *wrapperspb.Int32Value `protobuf:"bytes,15,opt,name=required_level,json=requiredLevel,proto3" json:"required_level,omitempty"`
	TargetRoles   []string               `protobuf:"bytes,16,rep,name=target_roles,json=targetRoles,proto3" json:"target_roles,omitempty"`
	DownloadCount int64                  `protobuf:"varint,17,opt,name=download_count,json=downloadCount,proto3" json:"download_count,omitempty"`
	AverageRating float64                `protobuf:"fixed64,18,opt,name=average_rating,json=averageRating,proto3" json:"average_rating,omitempty"`
	ReviewCount   int32                  `protobuf:"varint,19,opt,name=review_count,json=reviewCount,proto3" json:"review_count,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Types that are assignable to Metadata:
	//
	//	*LibraryItem_Exam
	//	*LibraryItem_Book
	//	*LibraryItem_Video
	Metadata isLibraryItem_Metadata `protobuf_oneof:"metadata"`
}

func (x *LibraryItem) Reset() {
	*x = LibraryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibraryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibraryItem) ProtoMessage() {}

func (x *LibraryItem) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibraryItem.ProtoReflect.Descriptor instead.
func (*LibraryItem) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{0}
}

func (x *LibraryItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LibraryItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LibraryItem) GetType() LibraryItemType {
	if x != nil {
		return x.Type
	}
	return LibraryItemType_LIBRARY_ITEM_TYPE_UNSPECIFIED
}

func (x *LibraryItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LibraryItem) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *LibraryItem) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *LibraryItem) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *LibraryItem) GetFileSize() *wrapperspb.Int64Value {
	if x != nil {
		return x.FileSize
	}
	return nil
}

func (x *LibraryItem) GetUploadStatus() LibraryUploadStatus {
	if x != nil {
		return x.UploadStatus
	}
	return LibraryUploadStatus_LIBRARY_UPLOAD_STATUS_UNSPECIFIED
}

func (x *LibraryItem) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *LibraryItem) GetUploadedBy() string {
	if x != nil {
		return x.UploadedBy
	}
	return ""
}

func (x *LibraryItem) GetApprovedBy() string {
	if x != nil {
		return x.ApprovedBy
	}
	return ""
}

func (x *LibraryItem) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *LibraryItem) GetRequiredRole() string {
	if x != nil {
		return x.RequiredRole
	}
	return ""
}

func (x *LibraryItem) GetRequiredLevel() *wrapperspb.Int32Value {
	if x != nil {
		return x.RequiredLevel
	}
	return nil
}

func (x *LibraryItem) GetTargetRoles() []string {
	if x != nil {
		return x.TargetRoles
	}
	return nil
}

func (x *LibraryItem) GetDownloadCount() int64 {
	if x != nil {
		return x.DownloadCount
	}
	return 0
}

func (x *LibraryItem) GetAverageRating() float64 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *LibraryItem) GetReviewCount() int32 {
	if x != nil {
		return x.ReviewCount
	}
	return 0
}

func (x *LibraryItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *LibraryItem) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (m *LibraryItem) GetMetadata() isLibraryItem_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *LibraryItem) GetExam() *ExamMetadata {
	if x, ok := x.GetMetadata().(*LibraryItem_Exam); ok {
		return x.Exam
	}
	return nil
}

func (x *LibraryItem) GetBook() *BookMetadata {
	if x, ok := x.GetMetadata().(*LibraryItem_Book); ok {
		return x.Book
	}
	return nil
}

func (x *LibraryItem) GetVideo() *VideoMetadata {
	if x, ok := x.GetMetadata().(*LibraryItem_Video); ok {
		return x.Video
	}
	return nil
}

type isLibraryItem_Metadata interface {
	isLibraryItem_Metadata()
}

type LibraryItem_Exam struct {
	Exam *ExamMetadata `protobuf:"bytes,30,opt,name=exam,proto3,oneof"`
}

type LibraryItem_Book struct {
	Book *BookMetadata `protobuf:"bytes,31,opt,name=book,proto3,oneof"`
}

type LibraryItem_Video struct {
	Video *VideoMetadata `protobuf:"bytes,32,opt,name=video,proto3,oneof"`
}

func (*LibraryItem_Exam) isLibraryItem_Metadata() {}

func (*LibraryItem_Book) isLibraryItem_Metadata() {}

func (*LibraryItem_Video) isLibraryItem_Metadata() {}

// Exam specific metadata.
type ExamMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject         string                 `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Grade           string                 `protobuf:"bytes,2,opt,name=grade,proto3" json:"grade,omitempty"`
	Province        string                 `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`
	School          string                 `protobuf:"bytes,4,opt,name=school,proto3" json:"school,omitempty"`
	AcademicYear    string                 `protobuf:"bytes,5,opt,name=academic_year,json=academicYear,proto3" json:"academic_year,omitempty"`
	Semester        string                 `protobuf:"bytes,6,opt,name=semester,proto3" json:"semester,omitempty"`
	ExamDuration    *wrapperspb.Int32Value `protobuf:"bytes,7,opt,name=exam_duration,json=examDuration,proto3" json:"exam_duration,omitempty"` // minutes
	QuestionCount   *wrapperspb.Int32Value `protobuf:"bytes,8,opt,name=question_count,json=questionCount,proto3" json:"question_count,omitempty"`
	DifficultyLevel string                 `protobuf:"bytes,9,opt,name=difficulty_level,json=difficultyLevel,proto3" json:"difficulty_level,omitempty"` // easy, medium, hard
	ExamType        string                 `protobuf:"bytes,10,opt,name=exam_type,json=examType,proto3" json:"exam_type,omitempty"`                     // practice, official, sample
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ExamMetadata) Reset() {
	*x = ExamMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamMetadata) ProtoMessage() {}

func (x *ExamMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamMetadata.ProtoReflect.Descriptor instead.
func (*ExamMetadata) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{1}
}

func (x *ExamMetadata) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ExamMetadata) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *ExamMetadata) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *ExamMetadata) GetSchool() string {
	if x != nil {
		return x.School
	}
	return ""
}

func (x *ExamMetadata) GetAcademicYear() string {
	if x != nil {
		return x.AcademicYear
	}
	return ""
}

func (x *ExamMetadata) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *ExamMetadata) GetExamDuration() *wrapperspb.Int32Value {
	if x != nil {
		return x.ExamDuration
	}
	return nil
}

func (x *ExamMetadata) GetQuestionCount() *wrapperspb.Int32Value {
	if x != nil {
		return x.QuestionCount
	}
	return nil
}

func (x *ExamMetadata) GetDifficultyLevel() string {
	if x != nil {
		return x.DifficultyLevel
	}
	return ""
}

func (x *ExamMetadata) GetExamType() string {
	if x != nil {
		return x.ExamType
	}
	return ""
}

func (x *ExamMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExamMetadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Book specific metadata.
type BookMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject         string                 `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Grade           string                 `protobuf:"bytes,2,opt,name=grade,proto3" json:"grade,omitempty"`
	BookType        string                 `protobuf:"bytes,3,opt,name=book_type,json=bookType,proto3" json:"book_type,omitempty"` // textbook, workbook, reference
	Author          string                 `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	Publisher       string                 `protobuf:"bytes,5,opt,name=publisher,proto3" json:"publisher,omitempty"`
	PublicationYear *wrapperspb.Int32Value `protobuf:"bytes,6,opt,name=publication_year,json=publicationYear,proto3" json:"publication_year,omitempty"`
	Isbn            string                 `protobuf:"bytes,7,opt,name=isbn,proto3" json:"isbn,omitempty"`
	PageCount       *wrapperspb.Int32Value `protobuf:"bytes,8,opt,name=page_count,json=pageCount,proto3" json:"page_count,omitempty"`
	CoverImage      string                 `protobuf:"bytes,9,opt,name=cover_image,json=coverImage,proto3" json:"cover_image,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BookMetadata) Reset() {
	*x = BookMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookMetadata) ProtoMessage() {}

func (x *BookMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookMetadata.ProtoReflect.Descriptor instead.
func (*BookMetadata) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{2}
}

func (x *BookMetadata) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *BookMetadata) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *BookMetadata) GetBookType() string {
	if x != nil {
		return x.BookType
	}
	return ""
}

func (x *BookMetadata) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *BookMetadata) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *BookMetadata) GetPublicationYear() *wrapperspb.Int32Value {
	if x != nil {
		return x.PublicationYear
	}
	return nil
}

func (x *BookMetadata) GetIsbn() string {
	if x != nil {
		return x.Isbn
	}
	return ""
}

func (x *BookMetadata) GetPageCount() *wrapperspb.Int32Value {
	if x != nil {
		return x.PageCount
	}
	return nil
}

func (x *BookMetadata) GetCoverImage() string {
	if x != nil {
		return x.CoverImage
	}
	return ""
}

func (x *BookMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BookMetadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Video specific metadata.
type VideoMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YoutubeUrl     string                 `protobuf:"bytes,1,opt,name=youtube_url,json=youtubeUrl,proto3" json:"youtube_url,omitempty"`
	YoutubeId      string                 `protobuf:"bytes,2,opt,name=youtube_id,json=youtubeId,proto3" json:"youtube_id,omitempty"`
	Duration       *wrapperspb.Int32Value `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"` // seconds
	Quality        string                 `protobuf:"bytes,4,opt,name=quality,proto3" json:"quality,omitempty"`
	InstructorName string                 `protobuf:"bytes,5,opt,name=instructor_name,json=instructorName,proto3" json:"instructor_name,omitempty"`
	RelatedExamId  string                 `protobuf:"bytes,6,opt,name=related_exam_id,json=relatedExamId,proto3" json:"related_exam_id,omitempty"`
	Subject        string                 `protobuf:"bytes,7,opt,name=subject,proto3" json:"subject,omitempty"`
	Grade          string                 `protobuf:"bytes,8,opt,name=grade,proto3" json:"grade,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *VideoMetadata) Reset() {
	*x = VideoMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMetadata) ProtoMessage() {}

func (x *VideoMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMetadata.ProtoReflect.Descriptor instead.
func (*VideoMetadata) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{3}
}

func (x *VideoMetadata) GetYoutubeUrl() string {
	if x != nil {
		return x.YoutubeUrl
	}
	return ""
}

func (x *VideoMetadata) GetYoutubeId() string {
	if x != nil {
		return x.YoutubeId
	}
	return ""
}

func (x *VideoMetadata) GetDuration() *wrapperspb.Int32Value {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *VideoMetadata) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

func (x *VideoMetadata) GetInstructorName() string {
	if x != nil {
		return x.InstructorName
	}
	return ""
}

func (x *VideoMetadata) GetRelatedExamId() string {
	if x != nil {
		return x.RelatedExamId
	}
	return ""
}

func (x *VideoMetadata) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *VideoMetadata) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *VideoMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VideoMetadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Shared payload for create/update operations.
type LibraryItemPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type          LibraryItemType        `protobuf:"varint,3,opt,name=type,proto3,enum=v1.LibraryItemType" json:"type,omitempty"`
	FileUrl       string                 `protobuf:"bytes,4,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	FileId        string                 `protobuf:"bytes,5,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	ThumbnailUrl  string                 `protobuf:"bytes,6,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	FileSize      *wrapperspb.Int64Value `protobuf:"bytes,7,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	Category      string                 `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	RequiredRole  string                 `protobuf:"bytes,9,opt,name=required_role,json=requiredRole,proto3" json:"required_role,omitempty"`
	RequiredLevel *wrapperspb.Int32Value `protobuf:"bytes,10,opt,name=required_level,json=requiredLevel,proto3" json:"required_level,omitempty"`
	TargetRoles   []string               `protobuf:"bytes,11,rep,name=target_roles,json=targetRoles,proto3" json:"target_roles,omitempty"`
	Tags          []string               `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	// Types that are assignable to Metadata:
	//
	//	*LibraryItemPayload_Exam
	//	*LibraryItemPayload_Book
	//	*LibraryItemPayload_Video
	Metadata isLibraryItemPayload_Metadata `protobuf_oneof:"metadata"`
}

func (x *LibraryItemPayload) Reset() {
	*x = LibraryItemPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibraryItemPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibraryItemPayload) ProtoMessage() {}

func (x *LibraryItemPayload) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibraryItemPayload.ProtoReflect.Descriptor instead.
func (*LibraryItemPayload) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{4}
}

func (x *LibraryItemPayload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LibraryItemPayload) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LibraryItemPayload) GetType() LibraryItemType {
	if x != nil {
		return x.Type
	}
	return LibraryItemType_LIBRARY_ITEM_TYPE_UNSPECIFIED
}

func (x *LibraryItemPayload) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *LibraryItemPayload) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *LibraryItemPayload) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *LibraryItemPayload) GetFileSize() *wrapperspb.Int64Value {
	if x != nil {
		return x.FileSize
	}
	return nil
}

func (x *LibraryItemPayload) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *LibraryItemPayload) GetRequiredRole() string {
	if x != nil {
		return x.RequiredRole
	}
	return ""
}

func (x *LibraryItemPayload) GetRequiredLevel() *wrapperspb.Int32Value {
	if x != nil {
		return x.RequiredLevel
	}
	return nil
}

func (x *LibraryItemPayload) GetTargetRoles() []string {
	if x != nil {
		return x.TargetRoles
	}
	return nil
}

func (x *LibraryItemPayload) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (m *LibraryItemPayload) GetMetadata() isLibraryItemPayload_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *LibraryItemPayload) GetExam() *CreateExamMetadata {
	if x, ok := x.GetMetadata().(*LibraryItemPayload_Exam); ok {
		return x.Exam
	}
	return nil
}

func (x *LibraryItemPayload) GetBook() *CreateBookMetadata {
	if x, ok := x.GetMetadata().(*LibraryItemPayload_Book); ok {
		return x.Book
	}
	return nil
}

func (x *LibraryItemPayload) GetVideo() *CreateVideoMetadata {
	if x, ok := x.GetMetadata().(*LibraryItemPayload_Video); ok {
		return x.Video
	}
	return nil
}

type isLibraryItemPayload_Metadata interface {
	isLibraryItemPayload_Metadata()
}

type LibraryItemPayload_Exam struct {
	Exam *CreateExamMetadata `protobuf:"bytes,20,opt,name=exam,proto3,oneof"`
}

type LibraryItemPayload_Book struct {
	Book *CreateBookMetadata `protobuf:"bytes,21,opt,name=book,proto3,oneof"`
}

type LibraryItemPayload_Video struct {
	Video *CreateVideoMetadata `protobuf:"bytes,22,opt,name=video,proto3,oneof"`
}

func (*LibraryItemPayload_Exam) isLibraryItemPayload_Metadata() {}

func (*LibraryItemPayload_Book) isLibraryItemPayload_Metadata() {}

func (*LibraryItemPayload_Video) isLibraryItemPayload_Metadata() {}

type CreateExamMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject         string                 `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Grade           string                 `protobuf:"bytes,2,opt,name=grade,proto3" json:"grade,omitempty"`
	Province        string                 `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`
	School          string                 `protobuf:"bytes,4,opt,name=school,proto3" json:"school,omitempty"`
	AcademicYear    string                 `protobuf:"bytes,5,opt,name=academic_year,json=academicYear,proto3" json:"academic_year,omitempty"`
	Semester        string                 `protobuf:"bytes,6,opt,name=semester,proto3" json:"semester,omitempty"`
	ExamDuration    *wrapperspb.Int32Value `protobuf:"bytes,7,opt,name=exam_duration,json=examDuration,proto3" json:"exam_duration,omitempty"`
	QuestionCount   *wrapperspb.Int32Value `protobuf:"bytes,8,opt,name=question_count,json=questionCount,proto3" json:"question_count,omitempty"`
	DifficultyLevel string                 `protobuf:"bytes,9,opt,name=difficulty_level,json=difficultyLevel,proto3" json:"difficulty_level,omitempty"`
	ExamType        string                 `protobuf:"bytes,10,opt,name=exam_type,json=examType,proto3" json:"exam_type,omitempty"`
}

func (x *CreateExamMetadata) Reset() {
	*x = CreateExamMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExamMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExamMetadata) ProtoMessage() {}

func (x *CreateExamMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExamMetadata.ProtoReflect.Descriptor instead.
func (*CreateExamMetadata) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{5}
}

func (x *CreateExamMetadata) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateExamMetadata) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *CreateExamMetadata) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CreateExamMetadata) GetSchool() string {
	if x != nil {
		return x.School
	}
	return ""
}

func (x *CreateExamMetadata) GetAcademicYear() string {
	if x != nil {
		return x.AcademicYear
	}
	return ""
}

func (x *CreateExamMetadata) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *CreateExamMetadata) GetExamDuration() *wrapperspb.Int32Value {
	if x != nil {
		return x.ExamDuration
	}
	return nil
}

func (x *CreateExamMetadata) GetQuestionCount() *wrapperspb.Int32Value {
	if x != nil {
		return x.QuestionCount
	}
	return nil
}

func (x *CreateExamMetadata) GetDifficultyLevel() string {
	if x != nil {
		return x.DifficultyLevel
	}
	return ""
}

func (x *CreateExamMetadata) GetExamType() string {
	if x != nil {
		return x.ExamType
	}
	return ""
}

type CreateBookMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject         string                 `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Grade           string                 `protobuf:"bytes,2,opt,name=grade,proto3" json:"grade,omitempty"`
	BookType        string                 `protobuf:"bytes,3,opt,name=book_type,json=bookType,proto3" json:"book_type,omitempty"`
	Author          string                 `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	Publisher       string                 `protobuf:"bytes,5,opt,name=publisher,proto3" json:"publisher,omitempty"`
	PublicationYear *wrapperspb.Int32Value `protobuf:"bytes,6,opt,name=publication_year,json=publicationYear,proto3" json:"publication_year,omitempty"`
	Isbn            string                 `protobuf:"bytes,7,opt,name=isbn,proto3" json:"isbn,omitempty"`
	PageCount       *wrapperspb.Int32Value `protobuf:"bytes,8,opt,name=page_count,json=pageCount,proto3" json:"page_count,omitempty"`
	CoverImage      string                 `protobuf:"bytes,9,opt,name=cover_image,json=coverImage,proto3" json:"cover_image,omitempty"`
}

func (x *CreateBookMetadata) Reset() {
	*x = CreateBookMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBookMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBookMetadata) ProtoMessage() {}

func (x *CreateBookMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBookMetadata.ProtoReflect.Descriptor instead.
func (*CreateBookMetadata) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{6}
}

func (x *CreateBookMetadata) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateBookMetadata) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *CreateBookMetadata) GetBookType() string {
	if x != nil {
		return x.BookType
	}
	return ""
}

func (x *CreateBookMetadata) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CreateBookMetadata) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *CreateBookMetadata) GetPublicationYear() *wrapperspb.Int32Value {
	if x != nil {
		return x.PublicationYear
	}
	return nil
}

func (x *CreateBookMetadata) GetIsbn() string {
	if x != nil {
		return x.Isbn
	}
	return ""
}

func (x *CreateBookMetadata) GetPageCount() *wrapperspb.Int32Value {
	if x != nil {
		return x.PageCount
	}
	return nil
}

func (x *CreateBookMetadata) GetCoverImage() string {
	if x != nil {
		return x.CoverImage
	}
	return ""
}

type CreateVideoMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject        string                 `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Grade          string                 `protobuf:"bytes,2,opt,name=grade,proto3" json:"grade,omitempty"`
	YoutubeUrl     string                 `protobuf:"bytes,3,opt,name=youtube_url,json=youtubeUrl,proto3" json:"youtube_url,omitempty"`
	YoutubeId      string                 `protobuf:"bytes,4,opt,name=youtube_id,json=youtubeId,proto3" json:"youtube_id,omitempty"`
	Duration       *wrapperspb.Int32Value `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Quality        string                 `protobuf:"bytes,6,opt,name=quality,proto3" json:"quality,omitempty"`
	InstructorName string                 `protobuf:"bytes,7,opt,name=instructor_name,json=instructorName,proto3" json:"instructor_name,omitempty"`
	RelatedExamId  string                 `protobuf:"bytes,8,opt,name=related_exam_id,json=relatedExamId,proto3" json:"related_exam_id,omitempty"`
}

func (x *CreateVideoMetadata) Reset() {
	*x = CreateVideoMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVideoMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVideoMetadata) ProtoMessage() {}

func (x *CreateVideoMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVideoMetadata.ProtoReflect.Descriptor instead.
func (*CreateVideoMetadata) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{7}
}

func (x *CreateVideoMetadata) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateVideoMetadata) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *CreateVideoMetadata) GetYoutubeUrl() string {
	if x != nil {
		return x.YoutubeUrl
	}
	return ""
}

func (x *CreateVideoMetadata) GetYoutubeId() string {
	if x != nil {
		return x.YoutubeId
	}
	return ""
}

func (x *CreateVideoMetadata) GetDuration() *wrapperspb.Int32Value {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *CreateVideoMetadata) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

func (x *CreateVideoMetadata) GetInstructorName() string {
	if x != nil {
		return x.InstructorName
	}
	return ""
}

func (x *CreateVideoMetadata) GetRelatedExamId() string {
	if x != nil {
		return x.RelatedExamId
	}
	return ""
}

// Filtering parameters for listing/searching items.
type LibraryFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types           []LibraryItemType      `protobuf:"varint,1,rep,packed,name=types,proto3,enum=v1.LibraryItemType" json:"types,omitempty"`
	Subjects        []string               `protobuf:"bytes,2,rep,name=subjects,proto3" json:"subjects,omitempty"`
	Grades          []string               `protobuf:"bytes,3,rep,name=grades,proto3" json:"grades,omitempty"`
	Province        string                 `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	AcademicYear    string                 `protobuf:"bytes,5,opt,name=academic_year,json=academicYear,proto3" json:"academic_year,omitempty"`
	Semester        string                 `protobuf:"bytes,6,opt,name=semester,proto3" json:"semester,omitempty"`
	DifficultyLevel string                 `protobuf:"bytes,7,opt,name=difficulty_level,json=difficultyLevel,proto3" json:"difficulty_level,omitempty"`
	ExamType        string                 `protobuf:"bytes,8,opt,name=exam_type,json=examType,proto3" json:"exam_type,omitempty"`
	BookType        string                 `protobuf:"bytes,9,opt,name=book_type,json=bookType,proto3" json:"book_type,omitempty"`
	VideoQuality    string                 `protobuf:"bytes,10,opt,name=video_quality,json=videoQuality,proto3" json:"video_quality,omitempty"`
	Tags            []string               `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	OnlyActive      bool                   `protobuf:"varint,12,opt,name=only_active,json=onlyActive,proto3" json:"only_active,omitempty"`
	MinLevel        *wrapperspb.Int32Value `protobuf:"bytes,13,opt,name=min_level,json=minLevel,proto3" json:"min_level,omitempty"`
	MaxLevel        *wrapperspb.Int32Value `protobuf:"bytes,14,opt,name=max_level,json=maxLevel,proto3" json:"max_level,omitempty"`
	RequiredRole    string                 `protobuf:"bytes,15,opt,name=required_role,json=requiredRole,proto3" json:"required_role,omitempty"`
}

func (x *LibraryFilter) Reset() {
	*x = LibraryFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibraryFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibraryFilter) ProtoMessage() {}

func (x *LibraryFilter) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibraryFilter.ProtoReflect.Descriptor instead.
func (*LibraryFilter) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{8}
}

func (x *LibraryFilter) GetTypes() []LibraryItemType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *LibraryFilter) GetSubjects() []string {
	if x != nil {
		return x.Subjects
	}
	return nil
}

func (x *LibraryFilter) GetGrades() []string {
	if x != nil {
		return x.Grades
	}
	return nil
}

func (x *LibraryFilter) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *LibraryFilter) GetAcademicYear() string {
	if x != nil {
		return x.AcademicYear
	}
	return ""
}

func (x *LibraryFilter) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *LibraryFilter) GetDifficultyLevel() string {
	if x != nil {
		return x.DifficultyLevel
	}
	return ""
}

func (x *LibraryFilter) GetExamType() string {
	if x != nil {
		return x.ExamType
	}
	return ""
}

func (x *LibraryFilter) GetBookType() string {
	if x != nil {
		return x.BookType
	}
	return ""
}

func (x *LibraryFilter) GetVideoQuality() string {
	if x != nil {
		return x.VideoQuality
	}
	return ""
}

func (x *LibraryFilter) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *LibraryFilter) GetOnlyActive() bool {
	if x != nil {
		return x.OnlyActive
	}
	return false
}

func (x *LibraryFilter) GetMinLevel() *wrapperspb.Int32Value {
	if x != nil {
		return x.MinLevel
	}
	return nil
}

func (x *LibraryFilter) GetMaxLevel() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxLevel
	}
	return nil
}

func (x *LibraryFilter) GetRequiredRole() string {
	if x != nil {
		return x.RequiredRole
	}
	return ""
}

type ListLibraryItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *common.PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filter     *LibraryFilter            `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Search     string                    `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	SortBy     string                    `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`          // created_at, rating, download_count, name
	SortOrder  string                    `protobuf:"bytes,5,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"` // asc, desc
}

func (x *ListLibraryItemsRequest) Reset() {
	*x = ListLibraryItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLibraryItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLibraryItemsRequest) ProtoMessage() {}

func (x *ListLibraryItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLibraryItemsRequest.ProtoReflect.Descriptor instead.
func (*ListLibraryItemsRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{9}
}

func (x *ListLibraryItemsRequest) GetPagination() *common.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListLibraryItemsRequest) GetFilter() *LibraryFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListLibraryItemsRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListLibraryItemsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListLibraryItemsRequest) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

type ListLibraryItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response   *common.Response           `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Items      []*LibraryItem             `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *common.PaginationResponse `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListLibraryItemsResponse) Reset() {
	*x = ListLibraryItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLibraryItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLibraryItemsResponse) ProtoMessage() {}

func (x *ListLibraryItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLibraryItemsResponse.ProtoReflect.Descriptor instead.
func (*ListLibraryItemsResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{10}
}

func (x *ListLibraryItemsResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ListLibraryItemsResponse) GetItems() []*LibraryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListLibraryItemsResponse) GetPagination() *common.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetLibraryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetLibraryItemRequest) Reset() {
	*x = GetLibraryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLibraryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLibraryItemRequest) ProtoMessage() {}

func (x *GetLibraryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLibraryItemRequest.ProtoReflect.Descriptor instead.
func (*GetLibraryItemRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{11}
}

func (x *GetLibraryItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetLibraryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Item     *LibraryItem     `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetLibraryItemResponse) Reset() {
	*x = GetLibraryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLibraryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLibraryItemResponse) ProtoMessage() {}

func (x *GetLibraryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLibraryItemResponse.ProtoReflect.Descriptor instead.
func (*GetLibraryItemResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{12}
}

func (x *GetLibraryItemResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetLibraryItemResponse) GetItem() *LibraryItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateLibraryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *LibraryItemPayload `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateLibraryItemRequest) Reset() {
	*x = CreateLibraryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLibraryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLibraryItemRequest) ProtoMessage() {}

func (x *CreateLibraryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLibraryItemRequest.ProtoReflect.Descriptor instead.
func (*CreateLibraryItemRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{13}
}

func (x *CreateLibraryItemRequest) GetItem() *LibraryItemPayload {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateLibraryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Item     *LibraryItem     `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateLibraryItemResponse) Reset() {
	*x = CreateLibraryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLibraryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLibraryItemResponse) ProtoMessage() {}

func (x *CreateLibraryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLibraryItemResponse.ProtoReflect.Descriptor instead.
func (*CreateLibraryItemResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{14}
}

func (x *CreateLibraryItemResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *CreateLibraryItemResponse) GetItem() *LibraryItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateLibraryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Item *LibraryItemPayload `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateLibraryItemRequest) Reset() {
	*x = UpdateLibraryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLibraryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLibraryItemRequest) ProtoMessage() {}

func (x *UpdateLibraryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLibraryItemRequest.ProtoReflect.Descriptor instead.
func (*UpdateLibraryItemRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateLibraryItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateLibraryItemRequest) GetItem() *LibraryItemPayload {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateLibraryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Item     *LibraryItem     `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateLibraryItemResponse) Reset() {
	*x = UpdateLibraryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLibraryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLibraryItemResponse) ProtoMessage() {}

func (x *UpdateLibraryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLibraryItemResponse.ProtoReflect.Descriptor instead.
func (*UpdateLibraryItemResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateLibraryItemResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *UpdateLibraryItemResponse) GetItem() *LibraryItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type ApproveLibraryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status       LibraryUploadStatus `protobuf:"varint,2,opt,name=status,proto3,enum=v1.LibraryUploadStatus" json:"status,omitempty"`
	ReviewerNote string              `protobuf:"bytes,3,opt,name=reviewer_note,json=reviewerNote,proto3" json:"reviewer_note,omitempty"`
}

func (x *ApproveLibraryItemRequest) Reset() {
	*x = ApproveLibraryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveLibraryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveLibraryItemRequest) ProtoMessage() {}

func (x *ApproveLibraryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveLibraryItemRequest.ProtoReflect.Descriptor instead.
func (*ApproveLibraryItemRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{17}
}

func (x *ApproveLibraryItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApproveLibraryItemRequest) GetStatus() LibraryUploadStatus {
	if x != nil {
		return x.Status
	}
	return LibraryUploadStatus_LIBRARY_UPLOAD_STATUS_UNSPECIFIED
}

func (x *ApproveLibraryItemRequest) GetReviewerNote() string {
	if x != nil {
		return x.ReviewerNote
	}
	return ""
}

type ApproveLibraryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Item     *LibraryItem     `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ApproveLibraryItemResponse) Reset() {
	*x = ApproveLibraryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveLibraryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveLibraryItemResponse) ProtoMessage() {}

func (x *ApproveLibraryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveLibraryItemResponse.ProtoReflect.Descriptor instead.
func (*ApproveLibraryItemResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{18}
}

func (x *ApproveLibraryItemResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ApproveLibraryItemResponse) GetItem() *LibraryItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type RateLibraryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Rating int32  `protobuf:"varint,2,opt,name=rating,proto3" json:"rating,omitempty"` // 1-5
	Review string `protobuf:"bytes,3,opt,name=review,proto3" json:"review,omitempty"`
}

func (x *RateLibraryItemRequest) Reset() {
	*x = RateLibraryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLibraryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLibraryItemRequest) ProtoMessage() {}

func (x *RateLibraryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLibraryItemRequest.ProtoReflect.Descriptor instead.
func (*RateLibraryItemRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{19}
}

func (x *RateLibraryItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RateLibraryItemRequest) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *RateLibraryItemRequest) GetReview() string {
	if x != nil {
		return x.Review
	}
	return ""
}

type RateLibraryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response      *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	AverageRating float64          `protobuf:"fixed64,2,opt,name=average_rating,json=averageRating,proto3" json:"average_rating,omitempty"`
	ReviewCount   int32            `protobuf:"varint,3,opt,name=review_count,json=reviewCount,proto3" json:"review_count,omitempty"`
}

func (x *RateLibraryItemResponse) Reset() {
	*x = RateLibraryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLibraryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLibraryItemResponse) ProtoMessage() {}

func (x *RateLibraryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLibraryItemResponse.ProtoReflect.Descriptor instead.
func (*RateLibraryItemResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{20}
}

func (x *RateLibraryItemResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *RateLibraryItemResponse) GetAverageRating() float64 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *RateLibraryItemResponse) GetReviewCount() int32 {
	if x != nil {
		return x.ReviewCount
	}
	return 0
}

type BookmarkLibraryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Bookmark bool   `protobuf:"varint,2,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
}

func (x *BookmarkLibraryItemRequest) Reset() {
	*x = BookmarkLibraryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookmarkLibraryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookmarkLibraryItemRequest) ProtoMessage() {}

func (x *BookmarkLibraryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookmarkLibraryItemRequest.ProtoReflect.Descriptor instead.
func (*BookmarkLibraryItemRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{21}
}

func (x *BookmarkLibraryItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BookmarkLibraryItemRequest) GetBookmark() bool {
	if x != nil {
		return x.Bookmark
	}
	return false
}

type BookmarkLibraryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response   *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Bookmarked bool             `protobuf:"varint,2,opt,name=bookmarked,proto3" json:"bookmarked,omitempty"`
}

func (x *BookmarkLibraryItemResponse) Reset() {
	*x = BookmarkLibraryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookmarkLibraryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookmarkLibraryItemResponse) ProtoMessage() {}

func (x *BookmarkLibraryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookmarkLibraryItemResponse.ProtoReflect.Descriptor instead.
func (*BookmarkLibraryItemResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{22}
}

func (x *BookmarkLibraryItemResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *BookmarkLibraryItemResponse) GetBookmarked() bool {
	if x != nil {
		return x.Bookmarked
	}
	return false
}

type DownloadLibraryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DownloadLibraryItemRequest) Reset() {
	*x = DownloadLibraryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadLibraryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadLibraryItemRequest) ProtoMessage() {}

func (x *DownloadLibraryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadLibraryItemRequest.ProtoReflect.Descriptor instead.
func (*DownloadLibraryItemRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{23}
}

func (x *DownloadLibraryItemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DownloadLibraryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response    *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	DownloadUrl string           `protobuf:"bytes,2,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
}

func (x *DownloadLibraryItemResponse) Reset() {
	*x = DownloadLibraryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadLibraryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadLibraryItemResponse) ProtoMessage() {}

func (x *DownloadLibraryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadLibraryItemResponse.ProtoReflect.Descriptor instead.
func (*DownloadLibraryItemResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{24}
}

func (x *DownloadLibraryItemResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *DownloadLibraryItemResponse) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

type SearchLibraryItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query      string                    `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Pagination *common.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filter     *LibraryFilter            `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *SearchLibraryItemsRequest) Reset() {
	*x = SearchLibraryItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLibraryItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLibraryItemsRequest) ProtoMessage() {}

func (x *SearchLibraryItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLibraryItemsRequest.ProtoReflect.Descriptor instead.
func (*SearchLibraryItemsRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{25}
}

func (x *SearchLibraryItemsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchLibraryItemsRequest) GetPagination() *common.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchLibraryItemsRequest) GetFilter() *LibraryFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type SearchLibraryItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response   *common.Response           `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Items      []*LibraryItem             `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *common.PaginationResponse `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchLibraryItemsResponse) Reset() {
	*x = SearchLibraryItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLibraryItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLibraryItemsResponse) ProtoMessage() {}

func (x *SearchLibraryItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLibraryItemsResponse.ProtoReflect.Descriptor instead.
func (*SearchLibraryItemsResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{26}
}

func (x *SearchLibraryItemsResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *SearchLibraryItemsResponse) GetItems() []*LibraryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchLibraryItemsResponse) GetPagination() *common.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Tags Messages
type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Color       string                 `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	IsTrending  bool                   `protobuf:"varint,5,opt,name=is_trending,json=isTrending,proto3" json:"is_trending,omitempty"`
	UsageCount  int32                  `protobuf:"varint,6,opt,name=usage_count,json=usageCount,proto3" json:"usage_count,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{27}
}

func (x *Tag) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tag) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Tag) GetIsTrending() bool {
	if x != nil {
		return x.IsTrending
	}
	return false
}

func (x *Tag) GetUsageCount() int32 {
	if x != nil {
		return x.UsageCount
	}
	return 0
}

func (x *Tag) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Tag) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Color       string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	IsTrending  bool   `protobuf:"varint,4,opt,name=is_trending,json=isTrending,proto3" json:"is_trending,omitempty"`
}

func (x *CreateTagRequest) Reset() {
	*x = CreateTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagRequest) ProtoMessage() {}

func (x *CreateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagRequest.ProtoReflect.Descriptor instead.
func (*CreateTagRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{28}
}

func (x *CreateTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTagRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTagRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *CreateTagRequest) GetIsTrending() bool {
	if x != nil {
		return x.IsTrending
	}
	return false
}

type GetTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTagRequest) Reset() {
	*x = GetTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagRequest) ProtoMessage() {}

func (x *GetTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagRequest.ProtoReflect.Descriptor instead.
func (*GetTagRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{29}
}

func (x *GetTagRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search     string                `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	IsTrending *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=is_trending,json=isTrending,proto3" json:"is_trending,omitempty"`
	Limit      int32                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset     int32                 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListTagsRequest) Reset() {
	*x = ListTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsRequest) ProtoMessage() {}

func (x *ListTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsRequest.ProtoReflect.Descriptor instead.
func (*ListTagsRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{30}
}

func (x *ListTagsRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListTagsRequest) GetIsTrending() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsTrending
	}
	return nil
}

func (x *ListTagsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListTagsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Tags     []*Tag           `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	Total    int32            `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListTagsResponse) Reset() {
	*x = ListTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsResponse) ProtoMessage() {}

func (x *ListTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsResponse.ProtoReflect.Descriptor instead.
func (*ListTagsResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{31}
}

func (x *ListTagsResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ListTagsResponse) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListTagsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Color       string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	IsTrending  bool   `protobuf:"varint,5,opt,name=is_trending,json=isTrending,proto3" json:"is_trending,omitempty"`
}

func (x *UpdateTagRequest) Reset() {
	*x = UpdateTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagRequest) ProtoMessage() {}

func (x *UpdateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagRequest.ProtoReflect.Descriptor instead.
func (*UpdateTagRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateTagRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTagRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateTagRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *UpdateTagRequest) GetIsTrending() bool {
	if x != nil {
		return x.IsTrending
	}
	return false
}

type DeleteTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTagRequest) Reset() {
	*x = DeleteTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagRequest) ProtoMessage() {}

func (x *DeleteTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagRequest.ProtoReflect.Descriptor instead.
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteTagRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *DeleteTagResponse) Reset() {
	*x = DeleteTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagResponse) ProtoMessage() {}

func (x *DeleteTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagResponse.ProtoReflect.Descriptor instead.
func (*DeleteTagResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteTagResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetPopularTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetPopularTagsRequest) Reset() {
	*x = GetPopularTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPopularTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPopularTagsRequest) ProtoMessage() {}

func (x *GetPopularTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPopularTagsRequest.ProtoReflect.Descriptor instead.
func (*GetPopularTagsRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{35}
}

func (x *GetPopularTagsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type TagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Tag      *Tag             `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *TagResponse) Reset() {
	*x = TagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagResponse) ProtoMessage() {}

func (x *TagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagResponse.ProtoReflect.Descriptor instead.
func (*TagResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{36}
}

func (x *TagResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *TagResponse) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

// Analytics Messages
type GetAnalyticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAnalyticsRequest) Reset() {
	*x = GetAnalyticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnalyticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnalyticsRequest) ProtoMessage() {}

func (x *GetAnalyticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnalyticsRequest.ProtoReflect.Descriptor instead.
func (*GetAnalyticsRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{37}
}

type AnalyticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response      *common.Response       `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Summary       *AnalyticsSummary      `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	TopDownloaded []*TopItem             `protobuf:"bytes,3,rep,name=top_downloaded,json=topDownloaded,proto3" json:"top_downloaded,omitempty"`
	TopRated      []*TopItem             `protobuf:"bytes,4,rep,name=top_rated,json=topRated,proto3" json:"top_rated,omitempty"`
	RecentlyAdded []*TopItem             `protobuf:"bytes,5,rep,name=recently_added,json=recentlyAdded,proto3" json:"recently_added,omitempty"`
	Distribution  []*ContentDistribution `protobuf:"bytes,6,rep,name=distribution,proto3" json:"distribution,omitempty"`
}

func (x *AnalyticsResponse) Reset() {
	*x = AnalyticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyticsResponse) ProtoMessage() {}

func (x *AnalyticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyticsResponse.ProtoReflect.Descriptor instead.
func (*AnalyticsResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{38}
}

func (x *AnalyticsResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *AnalyticsResponse) GetSummary() *AnalyticsSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *AnalyticsResponse) GetTopDownloaded() []*TopItem {
	if x != nil {
		return x.TopDownloaded
	}
	return nil
}

func (x *AnalyticsResponse) GetTopRated() []*TopItem {
	if x != nil {
		return x.TopRated
	}
	return nil
}

func (x *AnalyticsResponse) GetRecentlyAdded() []*TopItem {
	if x != nil {
		return x.RecentlyAdded
	}
	return nil
}

func (x *AnalyticsResponse) GetDistribution() []*ContentDistribution {
	if x != nil {
		return x.Distribution
	}
	return nil
}

type AnalyticsSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalDownloads int64   `protobuf:"varint,1,opt,name=total_downloads,json=totalDownloads,proto3" json:"total_downloads,omitempty"`
	TotalViews     int64   `protobuf:"varint,2,opt,name=total_views,json=totalViews,proto3" json:"total_views,omitempty"`
	AverageRating  float64 `protobuf:"fixed64,3,opt,name=average_rating,json=averageRating,proto3" json:"average_rating,omitempty"`
	ActiveUsers    int64   `protobuf:"varint,4,opt,name=active_users,json=activeUsers,proto3" json:"active_users,omitempty"`
	TrendingGrowth float64 `protobuf:"fixed64,5,opt,name=trending_growth,json=trendingGrowth,proto3" json:"trending_growth,omitempty"`
	TotalItems     int64   `protobuf:"varint,6,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	TotalExams     int64   `protobuf:"varint,7,opt,name=total_exams,json=totalExams,proto3" json:"total_exams,omitempty"`
	TotalBooks     int64   `protobuf:"varint,8,opt,name=total_books,json=totalBooks,proto3" json:"total_books,omitempty"`
	TotalVideos    int64   `protobuf:"varint,9,opt,name=total_videos,json=totalVideos,proto3" json:"total_videos,omitempty"`
}

func (x *AnalyticsSummary) Reset() {
	*x = AnalyticsSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyticsSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyticsSummary) ProtoMessage() {}

func (x *AnalyticsSummary) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyticsSummary.ProtoReflect.Descriptor instead.
func (*AnalyticsSummary) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{39}
}

func (x *AnalyticsSummary) GetTotalDownloads() int64 {
	if x != nil {
		return x.TotalDownloads
	}
	return 0
}

func (x *AnalyticsSummary) GetTotalViews() int64 {
	if x != nil {
		return x.TotalViews
	}
	return 0
}

func (x *AnalyticsSummary) GetAverageRating() float64 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *AnalyticsSummary) GetActiveUsers() int64 {
	if x != nil {
		return x.ActiveUsers
	}
	return 0
}

func (x *AnalyticsSummary) GetTrendingGrowth() float64 {
	if x != nil {
		return x.TrendingGrowth
	}
	return 0
}

func (x *AnalyticsSummary) GetTotalItems() int64 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *AnalyticsSummary) GetTotalExams() int64 {
	if x != nil {
		return x.TotalExams
	}
	return 0
}

func (x *AnalyticsSummary) GetTotalBooks() int64 {
	if x != nil {
		return x.TotalBooks
	}
	return 0
}

func (x *AnalyticsSummary) GetTotalVideos() int64 {
	if x != nil {
		return x.TotalVideos
	}
	return 0
}

type TopItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId        string  `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Title         string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type          string  `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	DownloadCount int64   `protobuf:"varint,4,opt,name=download_count,json=downloadCount,proto3" json:"download_count,omitempty"`
	Rating        float64 `protobuf:"fixed64,5,opt,name=rating,proto3" json:"rating,omitempty"`
	ReviewCount   int32   `protobuf:"varint,6,opt,name=review_count,json=reviewCount,proto3" json:"review_count,omitempty"`
	Rank          int32   `protobuf:"varint,7,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *TopItem) Reset() {
	*x = TopItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopItem) ProtoMessage() {}

func (x *TopItem) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopItem.ProtoReflect.Descriptor instead.
func (*TopItem) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{40}
}

func (x *TopItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *TopItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TopItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TopItem) GetDownloadCount() int64 {
	if x != nil {
		return x.DownloadCount
	}
	return 0
}

func (x *TopItem) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *TopItem) GetReviewCount() int32 {
	if x != nil {
		return x.ReviewCount
	}
	return 0
}

func (x *TopItem) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type ContentDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Count      int64   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Percentage float64 `protobuf:"fixed64,3,opt,name=percentage,proto3" json:"percentage,omitempty"`
}

func (x *ContentDistribution) Reset() {
	*x = ContentDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentDistribution) ProtoMessage() {}

func (x *ContentDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentDistribution.ProtoReflect.Descriptor instead.
func (*ContentDistribution) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{41}
}

func (x *ContentDistribution) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ContentDistribution) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ContentDistribution) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

type GetTopItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetTopItemsRequest) Reset() {
	*x = GetTopItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopItemsRequest) ProtoMessage() {}

func (x *GetTopItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopItemsRequest.ProtoReflect.Descriptor instead.
func (*GetTopItemsRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{42}
}

func (x *GetTopItemsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type TopItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Items    []*TopItem       `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *TopItemsResponse) Reset() {
	*x = TopItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopItemsResponse) ProtoMessage() {}

func (x *TopItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopItemsResponse.ProtoReflect.Descriptor instead.
func (*TopItemsResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{43}
}

func (x *TopItemsResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *TopItemsResponse) GetItems() []*TopItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// Search Suggestions Messages
type SearchSuggestionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Limit int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SearchSuggestionsRequest) Reset() {
	*x = SearchSuggestionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSuggestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSuggestionsRequest) ProtoMessage() {}

func (x *SearchSuggestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSuggestionsRequest.ProtoReflect.Descriptor instead.
func (*SearchSuggestionsRequest) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{44}
}

func (x *SearchSuggestionsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchSuggestionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SearchSuggestionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response    *common.Response    `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Suggestions []*SearchSuggestion `protobuf:"bytes,2,rep,name=suggestions,proto3" json:"suggestions,omitempty"`
}

func (x *SearchSuggestionsResponse) Reset() {
	*x = SearchSuggestionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSuggestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSuggestionsResponse) ProtoMessage() {}

func (x *SearchSuggestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSuggestionsResponse.ProtoReflect.Descriptor instead.
func (*SearchSuggestionsResponse) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{45}
}

func (x *SearchSuggestionsResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *SearchSuggestionsResponse) GetSuggestions() []*SearchSuggestion {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

type SearchSuggestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text       string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Type       string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // "title", "subject", "tag", "trending"
	Count      int64  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	IsTrending bool   `protobuf:"varint,4,opt,name=is_trending,json=isTrending,proto3" json:"is_trending,omitempty"`
}

func (x *SearchSuggestion) Reset() {
	*x = SearchSuggestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_library_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSuggestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSuggestion) ProtoMessage() {}

func (x *SearchSuggestion) ProtoReflect() protoreflect.Message {
	mi := &file_v1_library_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSuggestion.ProtoReflect.Descriptor instead.
func (*SearchSuggestion) Descriptor() ([]byte, []int) {
	return file_v1_library_proto_rawDescGZIP(), []int{46}
}

func (x *SearchSuggestion) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SearchSuggestion) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SearchSuggestion) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SearchSuggestion) GetIsTrending() bool {
	if x != nil {
		return x.IsTrending
	}
	return false
}

var File_v1_library_proto protoreflect.FileDescriptor

var file_v1_library_proto_rawDesc = []byte{
	0x0a, 0x10, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x07, 0x0a, 0x0b, 0x4c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55,
	0x72, 0x6c, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3c, 0x0a, 0x0d,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x26, 0x0a, 0x04, 0x65, 0x78, 0x61, 0x6d, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x04, 0x65, 0x78, 0x61, 0x6d, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b,
	0x12, 0x29, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf7, 0x03, 0x0a, 0x0c, 0x45, 0x78, 0x61, 0x6d,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x59, 0x65, 0x61,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x40, 0x0a,
	0x0d, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0c, 0x65, 0x78, 0x61, 0x6d, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x42, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64,
	0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xc0, 0x03, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x73, 0x62, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x73, 0x62,
	0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x99, 0x03, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x79, 0x6f, 0x75,
	0x74, 0x75, 0x62, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x79, 0x6f, 0x75, 0x74, 0x75,
	0x62, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x79, 0x6f, 0x75,
	0x74, 0x75, 0x62, 0x65, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x78,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xdb, 0x04, 0x0a, 0x12, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12,
	0x38, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x04, 0x65, 0x78, 0x61, 0x6d, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x65,
	0x78, 0x61, 0x6d, 0x12, 0x2c, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f,
	0x6b, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x05, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x87,
	0x03, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x61,
	0x64, 0x65, 0x6d, 0x69, 0x63, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0d, 0x65, 0x78,
	0x61, 0x6d, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c,
	0x65, 0x78, 0x61, 0x6d, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0e,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x78, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x78, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd0, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73,
	0x62, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x73, 0x62, 0x6e, 0x12, 0x3a,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xa9, 0x02, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62,
	0x65, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x45, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x22, 0xa3, 0x04, 0x0a, 0x0d, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63,
	0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x61,
	0x64, 0x65, 0x6d, 0x69, 0x63, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x38,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0xcf, 0x01,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22,
	0xab, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x22, 0x46, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x6e, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x56, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x22, 0x6e, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x22, 0x81, 0x01, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0x6f, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x58, 0x0a, 0x16, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x22, 0x91, 0x01, 0x0a, 0x17, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x1a, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61,
	0x72, 0x6b, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x6b, 0x0a, 0x1b, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x22, 0x2c, 0x0a,
	0x1a, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x1b, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x97, 0x01, 0x0a, 0x19,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x39, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xad, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x02, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x74, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x7f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x3b, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0a, 0x69, 0x73, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x73, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x8f, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x56, 0x0a, 0x0b, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22,
	0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc0, 0x02, 0x0a, 0x11, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x0e, 0x74, 0x6f,
	0x70, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0d, 0x74, 0x6f, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x12, 0x28,
	0x0a, 0x09, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08,
	0x74, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x6c, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd5, 0x02, 0x0a, 0x10, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x27,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x67,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x74, 0x72, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x61, 0x6d, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x22, 0xc2, 0x01, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x5f, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x63, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x46, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x81, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0b,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x71, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x54,
	0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2a, 0x89, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x4c,
	0x49, 0x42, 0x52, 0x41, 0x52, 0x59, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a,
	0x0a, 0x16, 0x4c, 0x49, 0x42, 0x52, 0x41, 0x52, 0x59, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x45, 0x58, 0x41, 0x4d, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x49,
	0x42, 0x52, 0x41, 0x52, 0x59, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x4c, 0x49, 0x42, 0x52, 0x41, 0x52,
	0x59, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45,
	0x4f, 0x10, 0x03, 0x2a, 0xcb, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x21, 0x4c,
	0x49, 0x42, 0x52, 0x41, 0x52, 0x59, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x4c, 0x49, 0x42, 0x52, 0x41, 0x52, 0x59, 0x5f, 0x55, 0x50,
	0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x4c, 0x49, 0x42, 0x52, 0x41, 0x52, 0x59,
	0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41,
	0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x4c, 0x49, 0x42,
	0x52, 0x41, 0x52, 0x59, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x22, 0x0a,
	0x1e, 0x4c, 0x49, 0x42, 0x52, 0x41, 0x52, 0x59, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x44, 0x10,
	0x04, 0x32, 0xf7, 0x0f, 0x0a, 0x0e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x64, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x6b, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x70,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1f, 0x3a, 0x01, 0x2a, 0x1a, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x7b, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x6f, 0x0a,
	0x08, 0x52, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x12, 0x7f,
	0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x7f, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x6c, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x53,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x14, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x4f, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x12, 0x11, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x74, 0x61, 0x67, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x53, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73,
	0x12, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2f, 0x74, 0x61, 0x67, 0x73, 0x12, 0x58, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x1a, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x74, 0x61, 0x67, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x5b, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67,
	0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x74, 0x61, 0x67, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x67, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x54, 0x61,
	0x67, 0x73, 0x12, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c,
	0x61, 0x72, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x74, 0x61, 0x67,
	0x73, 0x2f, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x61, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x12, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x12, 0x72, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x12, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f,
	0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2f, 0x74, 0x6f, 0x70, 0x2d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x12, 0x68, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x16, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x2f, 0x74, 0x6f, 0x70, 0x2d, 0x72, 0x61, 0x74, 0x65, 0x64, 0x12, 0x7f, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x6a, 0x0a, 0x06, 0x63,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x65, 0x78, 0x61, 0x6d, 0x2d, 0x62, 0x61, 0x6e, 0x6b,
	0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x56, 0x58, 0x58, 0xaa, 0x02, 0x02, 0x56, 0x31, 0xca, 0x02, 0x02, 0x56,
	0x31, 0xe2, 0x02, 0x0e, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x02, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_library_proto_rawDescOnce sync.Once
	file_v1_library_proto_rawDescData = file_v1_library_proto_rawDesc
)

func file_v1_library_proto_rawDescGZIP() []byte {
	file_v1_library_proto_rawDescOnce.Do(func() {
		file_v1_library_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_library_proto_rawDescData)
	})
	return file_v1_library_proto_rawDescData
}

var file_v1_library_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_library_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_v1_library_proto_goTypes = []interface{}{
	(LibraryItemType)(0),                // 0: v1.LibraryItemType
	(LibraryUploadStatus)(0),            // 1: v1.LibraryUploadStatus
	(*LibraryItem)(nil),                 // 2: v1.LibraryItem
	(*ExamMetadata)(nil),                // 3: v1.ExamMetadata
	(*BookMetadata)(nil),                // 4: v1.BookMetadata
	(*VideoMetadata)(nil),               // 5: v1.VideoMetadata
	(*LibraryItemPayload)(nil),          // 6: v1.LibraryItemPayload
	(*CreateExamMetadata)(nil),          // 7: v1.CreateExamMetadata
	(*CreateBookMetadata)(nil),          // 8: v1.CreateBookMetadata
	(*CreateVideoMetadata)(nil),         // 9: v1.CreateVideoMetadata
	(*LibraryFilter)(nil),               // 10: v1.LibraryFilter
	(*ListLibraryItemsRequest)(nil),     // 11: v1.ListLibraryItemsRequest
	(*ListLibraryItemsResponse)(nil),    // 12: v1.ListLibraryItemsResponse
	(*GetLibraryItemRequest)(nil),       // 13: v1.GetLibraryItemRequest
	(*GetLibraryItemResponse)(nil),      // 14: v1.GetLibraryItemResponse
	(*CreateLibraryItemRequest)(nil),    // 15: v1.CreateLibraryItemRequest
	(*CreateLibraryItemResponse)(nil),   // 16: v1.CreateLibraryItemResponse
	(*UpdateLibraryItemRequest)(nil),    // 17: v1.UpdateLibraryItemRequest
	(*UpdateLibraryItemResponse)(nil),   // 18: v1.UpdateLibraryItemResponse
	(*ApproveLibraryItemRequest)(nil),   // 19: v1.ApproveLibraryItemRequest
	(*ApproveLibraryItemResponse)(nil),  // 20: v1.ApproveLibraryItemResponse
	(*RateLibraryItemRequest)(nil),      // 21: v1.RateLibraryItemRequest
	(*RateLibraryItemResponse)(nil),     // 22: v1.RateLibraryItemResponse
	(*BookmarkLibraryItemRequest)(nil),  // 23: v1.BookmarkLibraryItemRequest
	(*BookmarkLibraryItemResponse)(nil), // 24: v1.BookmarkLibraryItemResponse
	(*DownloadLibraryItemRequest)(nil),  // 25: v1.DownloadLibraryItemRequest
	(*DownloadLibraryItemResponse)(nil), // 26: v1.DownloadLibraryItemResponse
	(*SearchLibraryItemsRequest)(nil),   // 27: v1.SearchLibraryItemsRequest
	(*SearchLibraryItemsResponse)(nil),  // 28: v1.SearchLibraryItemsResponse
	(*Tag)(nil),                         // 29: v1.Tag
	(*CreateTagRequest)(nil),            // 30: v1.CreateTagRequest
	(*GetTagRequest)(nil),               // 31: v1.GetTagRequest
	(*ListTagsRequest)(nil),             // 32: v1.ListTagsRequest
	(*ListTagsResponse)(nil),            // 33: v1.ListTagsResponse
	(*UpdateTagRequest)(nil),            // 34: v1.UpdateTagRequest
	(*DeleteTagRequest)(nil),            // 35: v1.DeleteTagRequest
	(*DeleteTagResponse)(nil),           // 36: v1.DeleteTagResponse
	(*GetPopularTagsRequest)(nil),       // 37: v1.GetPopularTagsRequest
	(*TagResponse)(nil),                 // 38: v1.TagResponse
	(*GetAnalyticsRequest)(nil),         // 39: v1.GetAnalyticsRequest
	(*AnalyticsResponse)(nil),           // 40: v1.AnalyticsResponse
	(*AnalyticsSummary)(nil),            // 41: v1.AnalyticsSummary
	(*TopItem)(nil),                     // 42: v1.TopItem
	(*ContentDistribution)(nil),         // 43: v1.ContentDistribution
	(*GetTopItemsRequest)(nil),          // 44: v1.GetTopItemsRequest
	(*TopItemsResponse)(nil),            // 45: v1.TopItemsResponse
	(*SearchSuggestionsRequest)(nil),    // 46: v1.SearchSuggestionsRequest
	(*SearchSuggestionsResponse)(nil),   // 47: v1.SearchSuggestionsResponse
	(*SearchSuggestion)(nil),            // 48: v1.SearchSuggestion
	(*wrapperspb.Int64Value)(nil),       // 49: google.protobuf.Int64Value
	(*wrapperspb.Int32Value)(nil),       // 50: google.protobuf.Int32Value
	(*timestamppb.Timestamp)(nil),       // 51: google.protobuf.Timestamp
	(*common.PaginationRequest)(nil),    // 52: common.PaginationRequest
	(*common.Response)(nil),             // 53: common.Response
	(*common.PaginationResponse)(nil),   // 54: common.PaginationResponse
	(*wrapperspb.BoolValue)(nil),        // 55: google.protobuf.BoolValue
}
var file_v1_library_proto_depIdxs = []int32{
	0,  // 0: v1.LibraryItem.type:type_name -> v1.LibraryItemType
	49, // 1: v1.LibraryItem.file_size:type_name -> google.protobuf.Int64Value
	1,  // 2: v1.LibraryItem.upload_status:type_name -> v1.LibraryUploadStatus
	50, // 3: v1.LibraryItem.required_level:type_name -> google.protobuf.Int32Value
	51, // 4: v1.LibraryItem.created_at:type_name -> google.protobuf.Timestamp
	51, // 5: v1.LibraryItem.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 6: v1.LibraryItem.exam:type_name -> v1.ExamMetadata
	4,  // 7: v1.LibraryItem.book:type_name -> v1.BookMetadata
	5,  // 8: v1.LibraryItem.video:type_name -> v1.VideoMetadata
	50, // 9: v1.ExamMetadata.exam_duration:type_name -> google.protobuf.Int32Value
	50, // 10: v1.ExamMetadata.question_count:type_name -> google.protobuf.Int32Value
	51, // 11: v1.ExamMetadata.created_at:type_name -> google.protobuf.Timestamp
	51, // 12: v1.ExamMetadata.updated_at:type_name -> google.protobuf.Timestamp
	50, // 13: v1.BookMetadata.publication_year:type_name -> google.protobuf.Int32Value
	50, // 14: v1.BookMetadata.page_count:type_name -> google.protobuf.Int32Value
	51, // 15: v1.BookMetadata.created_at:type_name -> google.protobuf.Timestamp
	51, // 16: v1.BookMetadata.updated_at:type_name -> google.protobuf.Timestamp
	50, // 17: v1.VideoMetadata.duration:type_name -> google.protobuf.Int32Value
	51, // 18: v1.VideoMetadata.created_at:type_name -> google.protobuf.Timestamp
	51, // 19: v1.VideoMetadata.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 20: v1.LibraryItemPayload.type:type_name -> v1.LibraryItemType
	49, // 21: v1.LibraryItemPayload.file_size:type_name -> google.protobuf.Int64Value
	50, // 22: v1.LibraryItemPayload.required_level:type_name -> google.protobuf.Int32Value
	7,  // 23: v1.LibraryItemPayload.exam:type_name -> v1.CreateExamMetadata
	8,  // 24: v1.LibraryItemPayload.book:type_name -> v1.CreateBookMetadata
	9,  // 25: v1.LibraryItemPayload.video:type_name -> v1.CreateVideoMetadata
	50, // 26: v1.CreateExamMetadata.exam_duration:type_name -> google.protobuf.Int32Value
	50, // 27: v1.CreateExamMetadata.question_count:type_name -> google.protobuf.Int32Value
	50, // 28: v1.CreateBookMetadata.publication_year:type_name -> google.protobuf.Int32Value
	50, // 29: v1.CreateBookMetadata.page_count:type_name -> google.protobuf.Int32Value
	50, // 30: v1.CreateVideoMetadata.duration:type_name -> google.protobuf.Int32Value
	0,  // 31: v1.LibraryFilter.types:type_name -> v1.LibraryItemType
	50, // 32: v1.LibraryFilter.min_level:type_name -> google.protobuf.Int32Value
	50, // 33: v1.LibraryFilter.max_level:type_name -> google.protobuf.Int32Value
	52, // 34: v1.ListLibraryItemsRequest.pagination:type_name -> common.PaginationRequest
	10, // 35: v1.ListLibraryItemsRequest.filter:type_name -> v1.LibraryFilter
	53, // 36: v1.ListLibraryItemsResponse.response:type_name -> common.Response
	2,  // 37: v1.ListLibraryItemsResponse.items:type_name -> v1.LibraryItem
	54, // 38: v1.ListLibraryItemsResponse.pagination:type_name -> common.PaginationResponse
	53, // 39: v1.GetLibraryItemResponse.response:type_name -> common.Response
	2,  // 40: v1.GetLibraryItemResponse.item:type_name -> v1.LibraryItem
	6,  // 41: v1.CreateLibraryItemRequest.item:type_name -> v1.LibraryItemPayload
	53, // 42: v1.CreateLibraryItemResponse.response:type_name -> common.Response
	2,  // 43: v1.CreateLibraryItemResponse.item:type_name -> v1.LibraryItem
	6,  // 44: v1.UpdateLibraryItemRequest.item:type_name -> v1.LibraryItemPayload
	53, // 45: v1.UpdateLibraryItemResponse.response:type_name -> common.Response
	2,  // 46: v1.UpdateLibraryItemResponse.item:type_name -> v1.LibraryItem
	1,  // 47: v1.ApproveLibraryItemRequest.status:type_name -> v1.LibraryUploadStatus
	53, // 48: v1.ApproveLibraryItemResponse.response:type_name -> common.Response
	2,  // 49: v1.ApproveLibraryItemResponse.item:type_name -> v1.LibraryItem
	53, // 50: v1.RateLibraryItemResponse.response:type_name -> common.Response
	53, // 51: v1.BookmarkLibraryItemResponse.response:type_name -> common.Response
	53, // 52: v1.DownloadLibraryItemResponse.response:type_name -> common.Response
	52, // 53: v1.SearchLibraryItemsRequest.pagination:type_name -> common.PaginationRequest
	10, // 54: v1.SearchLibraryItemsRequest.filter:type_name -> v1.LibraryFilter
	53, // 55: v1.SearchLibraryItemsResponse.response:type_name -> common.Response
	2,  // 56: v1.SearchLibraryItemsResponse.items:type_name -> v1.LibraryItem
	54, // 57: v1.SearchLibraryItemsResponse.pagination:type_name -> common.PaginationResponse
	51, // 58: v1.Tag.created_at:type_name -> google.protobuf.Timestamp
	51, // 59: v1.Tag.updated_at:type_name -> google.protobuf.Timestamp
	55, // 60: v1.ListTagsRequest.is_trending:type_name -> google.protobuf.BoolValue
	53, // 61: v1.ListTagsResponse.response:type_name -> common.Response
	29, // 62: v1.ListTagsResponse.tags:type_name -> v1.Tag
	53, // 63: v1.DeleteTagResponse.response:type_name -> common.Response
	53, // 64: v1.TagResponse.response:type_name -> common.Response
	29, // 65: v1.TagResponse.tag:type_name -> v1.Tag
	53, // 66: v1.AnalyticsResponse.response:type_name -> common.Response
	41, // 67: v1.AnalyticsResponse.summary:type_name -> v1.AnalyticsSummary
	42, // 68: v1.AnalyticsResponse.top_downloaded:type_name -> v1.TopItem
	42, // 69: v1.AnalyticsResponse.top_rated:type_name -> v1.TopItem
	42, // 70: v1.AnalyticsResponse.recently_added:type_name -> v1.TopItem
	43, // 71: v1.AnalyticsResponse.distribution:type_name -> v1.ContentDistribution
	53, // 72: v1.TopItemsResponse.response:type_name -> common.Response
	42, // 73: v1.TopItemsResponse.items:type_name -> v1.TopItem
	53, // 74: v1.SearchSuggestionsResponse.response:type_name -> common.Response
	48, // 75: v1.SearchSuggestionsResponse.suggestions:type_name -> v1.SearchSuggestion
	11, // 76: v1.LibraryService.ListItems:input_type -> v1.ListLibraryItemsRequest
	13, // 77: v1.LibraryService.GetItem:input_type -> v1.GetLibraryItemRequest
	15, // 78: v1.LibraryService.CreateItem:input_type -> v1.CreateLibraryItemRequest
	17, // 79: v1.LibraryService.UpdateItem:input_type -> v1.UpdateLibraryItemRequest
	19, // 80: v1.LibraryService.ApproveItem:input_type -> v1.ApproveLibraryItemRequest
	21, // 81: v1.LibraryService.RateItem:input_type -> v1.RateLibraryItemRequest
	23, // 82: v1.LibraryService.BookmarkItem:input_type -> v1.BookmarkLibraryItemRequest
	25, // 83: v1.LibraryService.DownloadItem:input_type -> v1.DownloadLibraryItemRequest
	27, // 84: v1.LibraryService.SearchItems:input_type -> v1.SearchLibraryItemsRequest
	30, // 85: v1.LibraryService.CreateTag:input_type -> v1.CreateTagRequest
	31, // 86: v1.LibraryService.GetTag:input_type -> v1.GetTagRequest
	32, // 87: v1.LibraryService.ListTags:input_type -> v1.ListTagsRequest
	34, // 88: v1.LibraryService.UpdateTag:input_type -> v1.UpdateTagRequest
	35, // 89: v1.LibraryService.DeleteTag:input_type -> v1.DeleteTagRequest
	37, // 90: v1.LibraryService.GetPopularTags:input_type -> v1.GetPopularTagsRequest
	39, // 91: v1.LibraryService.GetAnalytics:input_type -> v1.GetAnalyticsRequest
	44, // 92: v1.LibraryService.GetTopDownloaded:input_type -> v1.GetTopItemsRequest
	44, // 93: v1.LibraryService.GetTopRated:input_type -> v1.GetTopItemsRequest
	46, // 94: v1.LibraryService.GetSearchSuggestions:input_type -> v1.SearchSuggestionsRequest
	12, // 95: v1.LibraryService.ListItems:output_type -> v1.ListLibraryItemsResponse
	14, // 96: v1.LibraryService.GetItem:output_type -> v1.GetLibraryItemResponse
	16, // 97: v1.LibraryService.CreateItem:output_type -> v1.CreateLibraryItemResponse
	18, // 98: v1.LibraryService.UpdateItem:output_type -> v1.UpdateLibraryItemResponse
	20, // 99: v1.LibraryService.ApproveItem:output_type -> v1.ApproveLibraryItemResponse
	22, // 100: v1.LibraryService.RateItem:output_type -> v1.RateLibraryItemResponse
	24, // 101: v1.LibraryService.BookmarkItem:output_type -> v1.BookmarkLibraryItemResponse
	26, // 102: v1.LibraryService.DownloadItem:output_type -> v1.DownloadLibraryItemResponse
	28, // 103: v1.LibraryService.SearchItems:output_type -> v1.SearchLibraryItemsResponse
	38, // 104: v1.LibraryService.CreateTag:output_type -> v1.TagResponse
	38, // 105: v1.LibraryService.GetTag:output_type -> v1.TagResponse
	33, // 106: v1.LibraryService.ListTags:output_type -> v1.ListTagsResponse
	38, // 107: v1.LibraryService.UpdateTag:output_type -> v1.TagResponse
	36, // 108: v1.LibraryService.DeleteTag:output_type -> v1.DeleteTagResponse
	33, // 109: v1.LibraryService.GetPopularTags:output_type -> v1.ListTagsResponse
	40, // 110: v1.LibraryService.GetAnalytics:output_type -> v1.AnalyticsResponse
	45, // 111: v1.LibraryService.GetTopDownloaded:output_type -> v1.TopItemsResponse
	45, // 112: v1.LibraryService.GetTopRated:output_type -> v1.TopItemsResponse
	47, // 113: v1.LibraryService.GetSearchSuggestions:output_type -> v1.SearchSuggestionsResponse
	95, // [95:114] is the sub-list for method output_type
	76, // [76:95] is the sub-list for method input_type
	76, // [76:76] is the sub-list for extension type_name
	76, // [76:76] is the sub-list for extension extendee
	0,  // [0:76] is the sub-list for field type_name
}

func init() { file_v1_library_proto_init() }
func file_v1_library_proto_init() {
	if File_v1_library_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_library_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibraryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibraryItemPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExamMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBookMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVideoMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibraryFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLibraryItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLibraryItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLibraryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLibraryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLibraryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLibraryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLibraryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLibraryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveLibraryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveLibraryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLibraryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLibraryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookmarkLibraryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookmarkLibraryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadLibraryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadLibraryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLibraryItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLibraryItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPopularTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnalyticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyticsSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSuggestionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSuggestionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_library_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSuggestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_library_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*LibraryItem_Exam)(nil),
		(*LibraryItem_Book)(nil),
		(*LibraryItem_Video)(nil),
	}
	file_v1_library_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*LibraryItemPayload_Exam)(nil),
		(*LibraryItemPayload_Book)(nil),
		(*LibraryItemPayload_Video)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_library_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_library_proto_goTypes,
		DependencyIndexes: file_v1_library_proto_depIdxs,
		EnumInfos:         file_v1_library_proto_enumTypes,
		MessageInfos:      file_v1_library_proto_msgTypes,
	}.Build()
	File_v1_library_proto = out.File
	file_v1_library_proto_rawDesc = nil
	file_v1_library_proto_goTypes = nil
	file_v1_library_proto_depIdxs = nil
}

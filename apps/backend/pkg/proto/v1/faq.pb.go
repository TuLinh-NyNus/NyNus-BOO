// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v6.31.1
// source: v1/faq.proto

package v1

import (
	common "exam-bank-system/apps/backend/pkg/proto/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FAQ data model
type FAQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Question     string                 `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Answer       string                 `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
	Category     string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Tags         []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	IsPublished  bool                   `protobuf:"varint,6,opt,name=is_published,json=isPublished,proto3" json:"is_published,omitempty"`
	ViewCount    int32                  `protobuf:"varint,7,opt,name=view_count,json=viewCount,proto3" json:"view_count,omitempty"`
	HelpfulCount int32                  `protobuf:"varint,8,opt,name=helpful_count,json=helpfulCount,proto3" json:"helpful_count,omitempty"`
	OrderNumber  int32                  `protobuf:"varint,9,opt,name=order_number,json=orderNumber,proto3" json:"order_number,omitempty"`
	CreatedBy    string                 `protobuf:"bytes,10,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *FAQ) Reset() {
	*x = FAQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FAQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FAQ) ProtoMessage() {}

func (x *FAQ) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FAQ.ProtoReflect.Descriptor instead.
func (*FAQ) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{0}
}

func (x *FAQ) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FAQ) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *FAQ) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *FAQ) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *FAQ) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *FAQ) GetIsPublished() bool {
	if x != nil {
		return x.IsPublished
	}
	return false
}

func (x *FAQ) GetViewCount() int32 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

func (x *FAQ) GetHelpfulCount() int32 {
	if x != nil {
		return x.HelpfulCount
	}
	return 0
}

func (x *FAQ) GetOrderNumber() int32 {
	if x != nil {
		return x.OrderNumber
	}
	return 0
}

func (x *FAQ) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *FAQ) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FAQ) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// List FAQs request
type ListFAQsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination  *common.PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Category    string                    `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`                           // Filter by category
	IsPublished bool                      `protobuf:"varint,3,opt,name=is_published,json=isPublished,proto3" json:"is_published,omitempty"` // Filter by published status
	Search      string                    `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`                               // Search in question, answer
	SortBy      string                    `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`                 // Sort field: order_number, created_at, view_count, helpful_count
	SortOrder   string                    `protobuf:"bytes,6,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`        // Sort order: asc, desc
}

func (x *ListFAQsRequest) Reset() {
	*x = ListFAQsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFAQsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFAQsRequest) ProtoMessage() {}

func (x *ListFAQsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFAQsRequest.ProtoReflect.Descriptor instead.
func (*ListFAQsRequest) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{1}
}

func (x *ListFAQsRequest) GetPagination() *common.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListFAQsRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListFAQsRequest) GetIsPublished() bool {
	if x != nil {
		return x.IsPublished
	}
	return false
}

func (x *ListFAQsRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListFAQsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListFAQsRequest) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

// List FAQs response
type ListFAQsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response       *common.Response           `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Faqs           []*FAQ                     `protobuf:"bytes,2,rep,name=faqs,proto3" json:"faqs,omitempty"`
	Pagination     *common.PaginationResponse `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	TotalPublished int32                      `protobuf:"varint,4,opt,name=total_published,json=totalPublished,proto3" json:"total_published,omitempty"`
}

func (x *ListFAQsResponse) Reset() {
	*x = ListFAQsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFAQsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFAQsResponse) ProtoMessage() {}

func (x *ListFAQsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFAQsResponse.ProtoReflect.Descriptor instead.
func (*ListFAQsResponse) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{2}
}

func (x *ListFAQsResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ListFAQsResponse) GetFaqs() []*FAQ {
	if x != nil {
		return x.Faqs
	}
	return nil
}

func (x *ListFAQsResponse) GetPagination() *common.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListFAQsResponse) GetTotalPublished() int32 {
	if x != nil {
		return x.TotalPublished
	}
	return 0
}

// Get FAQ request
type GetFAQRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetFAQRequest) Reset() {
	*x = GetFAQRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFAQRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFAQRequest) ProtoMessage() {}

func (x *GetFAQRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFAQRequest.ProtoReflect.Descriptor instead.
func (*GetFAQRequest) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{3}
}

func (x *GetFAQRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Get FAQ response
type GetFAQResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Faq      *FAQ             `protobuf:"bytes,2,opt,name=faq,proto3" json:"faq,omitempty"`
}

func (x *GetFAQResponse) Reset() {
	*x = GetFAQResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFAQResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFAQResponse) ProtoMessage() {}

func (x *GetFAQResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFAQResponse.ProtoReflect.Descriptor instead.
func (*GetFAQResponse) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{4}
}

func (x *GetFAQResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetFAQResponse) GetFaq() *FAQ {
	if x != nil {
		return x.Faq
	}
	return nil
}

// Create FAQ request
type CreateFAQRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question    string   `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Answer      string   `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	Category    string   `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Tags        []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	IsPublished bool     `protobuf:"varint,5,opt,name=is_published,json=isPublished,proto3" json:"is_published,omitempty"`
	OrderNumber int32    `protobuf:"varint,6,opt,name=order_number,json=orderNumber,proto3" json:"order_number,omitempty"`
}

func (x *CreateFAQRequest) Reset() {
	*x = CreateFAQRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFAQRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFAQRequest) ProtoMessage() {}

func (x *CreateFAQRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFAQRequest.ProtoReflect.Descriptor instead.
func (*CreateFAQRequest) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{5}
}

func (x *CreateFAQRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *CreateFAQRequest) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *CreateFAQRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CreateFAQRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateFAQRequest) GetIsPublished() bool {
	if x != nil {
		return x.IsPublished
	}
	return false
}

func (x *CreateFAQRequest) GetOrderNumber() int32 {
	if x != nil {
		return x.OrderNumber
	}
	return 0
}

// Create FAQ response
type CreateFAQResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Faq      *FAQ             `protobuf:"bytes,2,opt,name=faq,proto3" json:"faq,omitempty"`
}

func (x *CreateFAQResponse) Reset() {
	*x = CreateFAQResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFAQResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFAQResponse) ProtoMessage() {}

func (x *CreateFAQResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFAQResponse.ProtoReflect.Descriptor instead.
func (*CreateFAQResponse) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{6}
}

func (x *CreateFAQResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *CreateFAQResponse) GetFaq() *FAQ {
	if x != nil {
		return x.Faq
	}
	return nil
}

// Update FAQ request
type UpdateFAQRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Question    string   `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Answer      string   `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
	Category    string   `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Tags        []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	IsPublished bool     `protobuf:"varint,6,opt,name=is_published,json=isPublished,proto3" json:"is_published,omitempty"`
	OrderNumber int32    `protobuf:"varint,7,opt,name=order_number,json=orderNumber,proto3" json:"order_number,omitempty"`
}

func (x *UpdateFAQRequest) Reset() {
	*x = UpdateFAQRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFAQRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFAQRequest) ProtoMessage() {}

func (x *UpdateFAQRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFAQRequest.ProtoReflect.Descriptor instead.
func (*UpdateFAQRequest) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateFAQRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFAQRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *UpdateFAQRequest) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *UpdateFAQRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UpdateFAQRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateFAQRequest) GetIsPublished() bool {
	if x != nil {
		return x.IsPublished
	}
	return false
}

func (x *UpdateFAQRequest) GetOrderNumber() int32 {
	if x != nil {
		return x.OrderNumber
	}
	return 0
}

// Update FAQ response
type UpdateFAQResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Faq      *FAQ             `protobuf:"bytes,2,opt,name=faq,proto3" json:"faq,omitempty"`
}

func (x *UpdateFAQResponse) Reset() {
	*x = UpdateFAQResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFAQResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFAQResponse) ProtoMessage() {}

func (x *UpdateFAQResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFAQResponse.ProtoReflect.Descriptor instead.
func (*UpdateFAQResponse) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateFAQResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *UpdateFAQResponse) GetFaq() *FAQ {
	if x != nil {
		return x.Faq
	}
	return nil
}

// Delete FAQ request
type DeleteFAQRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteFAQRequest) Reset() {
	*x = DeleteFAQRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFAQRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFAQRequest) ProtoMessage() {}

func (x *DeleteFAQRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFAQRequest.ProtoReflect.Descriptor instead.
func (*DeleteFAQRequest) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteFAQRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Delete FAQ response
type DeleteFAQResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *DeleteFAQResponse) Reset() {
	*x = DeleteFAQResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFAQResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFAQResponse) ProtoMessage() {}

func (x *DeleteFAQResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFAQResponse.ProtoReflect.Descriptor instead.
func (*DeleteFAQResponse) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteFAQResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// Increment view count request
type IncrementViewCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IncrementViewCountRequest) Reset() {
	*x = IncrementViewCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrementViewCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementViewCountRequest) ProtoMessage() {}

func (x *IncrementViewCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementViewCountRequest.ProtoReflect.Descriptor instead.
func (*IncrementViewCountRequest) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{11}
}

func (x *IncrementViewCountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Increment view count response
type IncrementViewCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response  *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	ViewCount int32            `protobuf:"varint,2,opt,name=view_count,json=viewCount,proto3" json:"view_count,omitempty"`
}

func (x *IncrementViewCountResponse) Reset() {
	*x = IncrementViewCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrementViewCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementViewCountResponse) ProtoMessage() {}

func (x *IncrementViewCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementViewCountResponse.ProtoReflect.Descriptor instead.
func (*IncrementViewCountResponse) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{12}
}

func (x *IncrementViewCountResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *IncrementViewCountResponse) GetViewCount() int32 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

// Increment helpful count request
type IncrementHelpfulCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IncrementHelpfulCountRequest) Reset() {
	*x = IncrementHelpfulCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrementHelpfulCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementHelpfulCountRequest) ProtoMessage() {}

func (x *IncrementHelpfulCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementHelpfulCountRequest.ProtoReflect.Descriptor instead.
func (*IncrementHelpfulCountRequest) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{13}
}

func (x *IncrementHelpfulCountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Increment helpful count response
type IncrementHelpfulCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response     *common.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	HelpfulCount int32            `protobuf:"varint,2,opt,name=helpful_count,json=helpfulCount,proto3" json:"helpful_count,omitempty"`
}

func (x *IncrementHelpfulCountResponse) Reset() {
	*x = IncrementHelpfulCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_faq_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrementHelpfulCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementHelpfulCountResponse) ProtoMessage() {}

func (x *IncrementHelpfulCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_faq_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementHelpfulCountResponse.ProtoReflect.Descriptor instead.
func (*IncrementHelpfulCountResponse) Descriptor() ([]byte, []int) {
	return file_v1_faq_proto_rawDescGZIP(), []int{14}
}

func (x *IncrementHelpfulCountResponse) GetResponse() *common.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *IncrementHelpfulCountResponse) GetHelpfulCount() int32 {
	if x != nil {
		return x.HelpfulCount
	}
	return 0
}

var File_v1_faq_proto protoreflect.FileDescriptor

var file_v1_faq_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x03, 0x0a, 0x03, 0x46, 0x41, 0x51, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x65, 0x6c, 0x70, 0x66, 0x75, 0x6c, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x65, 0x6c,
	0x70, 0x66, 0x75, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xdb, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x41, 0x51, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22,
	0xc2, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x41, 0x51, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x66, 0x61, 0x71, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x41, 0x51, 0x52, 0x04, 0x66, 0x61, 0x71, 0x73, 0x12,
	0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x41, 0x51, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x41, 0x51, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x66, 0x61, 0x71, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x41, 0x51, 0x52, 0x03, 0x66, 0x61, 0x71,
	0x22, 0xbc, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x41, 0x51, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x5c, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x41, 0x51, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x66, 0x61, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x41, 0x51, 0x52, 0x03, 0x66, 0x61, 0x71, 0x22, 0xcc, 0x01,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x41, 0x51, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x5c, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x41, 0x51, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x19, 0x0a, 0x03, 0x66, 0x61, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x41, 0x51, 0x52, 0x03, 0x66, 0x61, 0x71, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x41, 0x51, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x41, 0x51, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2b, 0x0a, 0x19, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x69,
	0x0a, 0x1a, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x1c, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x66, 0x75, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x72, 0x0a, 0x1d, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x66, 0x75, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x65, 0x6c, 0x70,
	0x66, 0x75, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x68, 0x65, 0x6c, 0x70, 0x66, 0x75, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xb4, 0x05,
	0x0a, 0x0a, 0x46, 0x41, 0x51, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x08,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x41, 0x51, 0x73, 0x12, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x41, 0x51, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x41, 0x51, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x71, 0x73, 0x12, 0x4a, 0x0a, 0x06, 0x47, 0x65, 0x74,
	0x46, 0x41, 0x51, 0x12, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x41, 0x51, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x41, 0x51, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x71, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x57, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x41, 0x51, 0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x41,
	0x51, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x41, 0x51, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x66, 0x61, 0x71, 0x73, 0x12, 0x5c,
	0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x41, 0x51, 0x12, 0x14, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x41, 0x51, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x41, 0x51,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x3a, 0x01, 0x2a, 0x1a, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x66, 0x61, 0x71, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x59, 0x0a, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x41, 0x51, 0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x41, 0x51, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x41, 0x51, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x66, 0x61,
	0x71, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x76, 0x0a, 0x12, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x61, 0x71, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x82, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c,
	0x70, 0x66, 0x75, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x66, 0x75, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x66, 0x75,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x61, 0x71, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x68, 0x65, 0x6c,
	0x70, 0x66, 0x75, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_faq_proto_rawDescOnce sync.Once
	file_v1_faq_proto_rawDescData = file_v1_faq_proto_rawDesc
)

func file_v1_faq_proto_rawDescGZIP() []byte {
	file_v1_faq_proto_rawDescOnce.Do(func() {
		file_v1_faq_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_faq_proto_rawDescData)
	})
	return file_v1_faq_proto_rawDescData
}

var file_v1_faq_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_v1_faq_proto_goTypes = []interface{}{
	(*FAQ)(nil),                           // 0: v1.FAQ
	(*ListFAQsRequest)(nil),               // 1: v1.ListFAQsRequest
	(*ListFAQsResponse)(nil),              // 2: v1.ListFAQsResponse
	(*GetFAQRequest)(nil),                 // 3: v1.GetFAQRequest
	(*GetFAQResponse)(nil),                // 4: v1.GetFAQResponse
	(*CreateFAQRequest)(nil),              // 5: v1.CreateFAQRequest
	(*CreateFAQResponse)(nil),             // 6: v1.CreateFAQResponse
	(*UpdateFAQRequest)(nil),              // 7: v1.UpdateFAQRequest
	(*UpdateFAQResponse)(nil),             // 8: v1.UpdateFAQResponse
	(*DeleteFAQRequest)(nil),              // 9: v1.DeleteFAQRequest
	(*DeleteFAQResponse)(nil),             // 10: v1.DeleteFAQResponse
	(*IncrementViewCountRequest)(nil),     // 11: v1.IncrementViewCountRequest
	(*IncrementViewCountResponse)(nil),    // 12: v1.IncrementViewCountResponse
	(*IncrementHelpfulCountRequest)(nil),  // 13: v1.IncrementHelpfulCountRequest
	(*IncrementHelpfulCountResponse)(nil), // 14: v1.IncrementHelpfulCountResponse
	(*timestamppb.Timestamp)(nil),         // 15: google.protobuf.Timestamp
	(*common.PaginationRequest)(nil),      // 16: common.PaginationRequest
	(*common.Response)(nil),               // 17: common.Response
	(*common.PaginationResponse)(nil),     // 18: common.PaginationResponse
}
var file_v1_faq_proto_depIdxs = []int32{
	15, // 0: v1.FAQ.created_at:type_name -> google.protobuf.Timestamp
	15, // 1: v1.FAQ.updated_at:type_name -> google.protobuf.Timestamp
	16, // 2: v1.ListFAQsRequest.pagination:type_name -> common.PaginationRequest
	17, // 3: v1.ListFAQsResponse.response:type_name -> common.Response
	0,  // 4: v1.ListFAQsResponse.faqs:type_name -> v1.FAQ
	18, // 5: v1.ListFAQsResponse.pagination:type_name -> common.PaginationResponse
	17, // 6: v1.GetFAQResponse.response:type_name -> common.Response
	0,  // 7: v1.GetFAQResponse.faq:type_name -> v1.FAQ
	17, // 8: v1.CreateFAQResponse.response:type_name -> common.Response
	0,  // 9: v1.CreateFAQResponse.faq:type_name -> v1.FAQ
	17, // 10: v1.UpdateFAQResponse.response:type_name -> common.Response
	0,  // 11: v1.UpdateFAQResponse.faq:type_name -> v1.FAQ
	17, // 12: v1.DeleteFAQResponse.response:type_name -> common.Response
	17, // 13: v1.IncrementViewCountResponse.response:type_name -> common.Response
	17, // 14: v1.IncrementHelpfulCountResponse.response:type_name -> common.Response
	1,  // 15: v1.FAQService.ListFAQs:input_type -> v1.ListFAQsRequest
	3,  // 16: v1.FAQService.GetFAQ:input_type -> v1.GetFAQRequest
	5,  // 17: v1.FAQService.CreateFAQ:input_type -> v1.CreateFAQRequest
	7,  // 18: v1.FAQService.UpdateFAQ:input_type -> v1.UpdateFAQRequest
	9,  // 19: v1.FAQService.DeleteFAQ:input_type -> v1.DeleteFAQRequest
	11, // 20: v1.FAQService.IncrementViewCount:input_type -> v1.IncrementViewCountRequest
	13, // 21: v1.FAQService.IncrementHelpfulCount:input_type -> v1.IncrementHelpfulCountRequest
	2,  // 22: v1.FAQService.ListFAQs:output_type -> v1.ListFAQsResponse
	4,  // 23: v1.FAQService.GetFAQ:output_type -> v1.GetFAQResponse
	6,  // 24: v1.FAQService.CreateFAQ:output_type -> v1.CreateFAQResponse
	8,  // 25: v1.FAQService.UpdateFAQ:output_type -> v1.UpdateFAQResponse
	10, // 26: v1.FAQService.DeleteFAQ:output_type -> v1.DeleteFAQResponse
	12, // 27: v1.FAQService.IncrementViewCount:output_type -> v1.IncrementViewCountResponse
	14, // 28: v1.FAQService.IncrementHelpfulCount:output_type -> v1.IncrementHelpfulCountResponse
	22, // [22:29] is the sub-list for method output_type
	15, // [15:22] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_v1_faq_proto_init() }
func file_v1_faq_proto_init() {
	if File_v1_faq_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_faq_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FAQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFAQsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFAQsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFAQRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFAQResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFAQRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFAQResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFAQRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFAQResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFAQRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFAQResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncrementViewCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncrementViewCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncrementHelpfulCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_faq_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncrementHelpfulCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_faq_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_faq_proto_goTypes,
		DependencyIndexes: file_v1_faq_proto_depIdxs,
		MessageInfos:      file_v1_faq_proto_msgTypes,
	}.Build()
	File_v1_faq_proto = out.File
	file_v1_faq_proto_rawDesc = nil
	file_v1_faq_proto_goTypes = nil
	file_v1_faq_proto_depIdxs = nil
}

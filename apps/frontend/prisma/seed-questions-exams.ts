/**
 * NyNus Exam Bank System - Questions & Exams Seed Script
 * 
 * This script creates sample questions and exams
 */

import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

function generateId(): string {
  return crypto.randomUUID();
}

export async function seedQuestionsAndExams() {
  console.log('üìù Creating question codes...');

  // Create question codes first (required by foreign key constraint)
  // Using raw SQL because QuestionCode model is not in Prisma schema
  const questionCodes = [
    { code: 'Q000001', format: 'ID5', grade: '9', subject: 'T', chapter: '1', lesson: '1', level: '1' },
    { code: 'Q000002', format: 'ID5', grade: '9', subject: 'T', chapter: '2', lesson: '1', level: '2' },
    { code: 'Q000003', format: 'ID5', grade: '9', subject: 'T', chapter: '1', lesson: '1', level: '1' },
    { code: 'Q000004', format: 'ID5', grade: '9', subject: 'T', chapter: '1', lesson: '1', level: '3' },
    { code: 'Q000005', format: 'ID5', grade: '9', subject: 'T', chapter: '3', lesson: '1', level: '2' },
    { code: 'Q000006', format: 'ID5', grade: '7', subject: 'L', chapter: '1', lesson: '1', level: '1' },
    { code: 'Q000007', format: 'ID5', grade: '7', subject: 'H', chapter: '1', lesson: '1', level: '1' },
  ];

  for (const qc of questionCodes) {
    await prisma.$executeRaw`
      INSERT INTO question_code (code, format, grade, subject, chapter, lesson, level)
      VALUES (${qc.code}, ${qc.format}::codeformat, ${qc.grade}, ${qc.subject}, ${qc.chapter}, ${qc.lesson}, ${qc.level})
      ON CONFLICT (code) DO NOTHING
    `;
  }

  console.log(`‚úÖ Created ${questionCodes.length} question codes\n`);
  console.log('üìù Creating sample questions...');

  // Sample Math questions for Grade 12
  const mathQuestions = [];

  // Question 1: Multiple Choice
  const q1 = await prisma.question.create({
    data: {
      id: generateId(),
      raw_content: 'T√≠nh ƒë·∫°o h√†m c·ªßa h√†m s·ªë y = x^2 + 3x + 1',
      content: 'T√≠nh ƒë·∫°o h√†m c·ªßa h√†m s·ªë y = x¬≤ + 3x + 1',
      type: 'MC', // Multiple Choice
      difficulty: 'EASY',
      grade: '9', // Grade 12 (using level 9)
      subject: 'T', // To√°n
      chapter: '1',
      level: '1',
      question_code_id: 'Q000001',
      status: 'ACTIVE',
      answers: [
        { id: 'A', text: "y' = 2x + 3" },
        { id: 'B', text: "y' = x + 3" },
        { id: 'C', text: "y' = 2x" },
        { id: 'D', text: "y' = 3x + 1" },
      ],
      correct_answer: { id: 'A' },
      solution: '√Åp d·ª•ng c√¥ng th·ª©c ƒë·∫°o h√†m: (x^n)\' = n*x^(n-1) v√† (c)\' = 0',
      tag: ['ƒë·∫°o h√†m', 'h√†m b·∫≠c 2'],
    },
  });
  mathQuestions.push(q1);

  // Question 2: Multiple Choice
  const q2 = await prisma.question.create({
    data: {
      id: generateId(),
      raw_content: 'T√≠ch ph√¢n c·ªßa h√†m s·ªë f(x) = 2x t·ª´ 0 ƒë·∫øn 1 b·∫±ng',
      content: 'T√≠ch ph√¢n c·ªßa h√†m s·ªë f(x) = 2x t·ª´ 0 ƒë·∫øn 1 b·∫±ng',
      type: 'MC', // Multiple Choice
      difficulty: 'MEDIUM',
      grade: '9', // Grade 12 (using level 9)
      subject: 'T',
      chapter: '2',
      level: '2',
      question_code_id: 'Q000002',
      status: 'ACTIVE',
      answers: [
        { id: 'A', text: '0' },
        { id: 'B', text: '1' },
        { id: 'C', text: '2' },
        { id: 'D', text: '4' },
      ],
      correct_answer: { id: 'B' },
      solution: '‚à´‚ÇÄ¬π 2x dx = [x¬≤]‚ÇÄ¬π = 1¬≤ - 0¬≤ = 1',
      tag: ['t√≠ch ph√¢n', 'nguy√™n h√†m'],
    },
  });
  mathQuestions.push(q2);

  // Question 3: True/False
  const q3 = await prisma.question.create({
    data: {
      id: generateId(),
      raw_content: 'H√†m s·ªë y = x^3 ƒë·ªìng bi·∫øn tr√™n R',
      content: 'H√†m s·ªë y = x¬≥ ƒë·ªìng bi·∫øn tr√™n ‚Ñù',
      type: 'TF', // True/False
      difficulty: 'EASY',
      grade: '9', // Grade 12 (using level 9)
      subject: 'T',
      chapter: '1',
      level: '1',
      question_code_id: 'Q000003',
      status: 'ACTIVE',
      answers: [
        { id: 'A', text: 'ƒê√∫ng' },
        { id: 'B', text: 'Sai' },
      ],
      correct_answer: { id: 'A' },
      solution: "y' = 3x¬≤ ‚â• 0 v·ªõi m·ªçi x ‚àà ‚Ñù, n√™n h√†m s·ªë ƒë·ªìng bi·∫øn tr√™n ‚Ñù",
      tag: ['h√†m s·ªë', 't√≠nh ƒë∆°n ƒëi·ªáu'],
    },
  });
  mathQuestions.push(q3);

  // Question 4: Multiple Choice - Harder
  const q4 = await prisma.question.create({
    data: {
      id: generateId(),
      raw_content: 'Gi√° tr·ªã l·ªõn nh·∫•t c·ªßa h√†m s·ªë y = x^3 - 3x + 2 tr√™n ƒëo·∫°n [-2, 2]',
      content: 'Gi√° tr·ªã l·ªõn nh·∫•t c·ªßa h√†m s·ªë y = x¬≥ - 3x + 2 tr√™n ƒëo·∫°n [-2, 2]',
      type: 'MC', // Multiple Choice
      difficulty: 'HARD',
      grade: '9', // Grade 12 (using level 9)
      subject: 'T',
      chapter: '1',
      level: '3',
      question_code_id: 'Q000004',
      status: 'ACTIVE',
      answers: [
        { id: 'A', text: '0' },
        { id: 'B', text: '2' },
        { id: 'C', text: '4' },
        { id: 'D', text: '6' },
      ],
      correct_answer: { id: 'C' },
      solution: "y' = 3x¬≤ - 3 = 0 ‚áî x = ¬±1. T√≠nh y(-2) = 0, y(-1) = 4, y(1) = 0, y(2) = 4. Max = 4",
      tag: ['c·ª±c tr·ªã', 'gi√° tr·ªã l·ªõn nh·∫•t'],
    },
  });
  mathQuestions.push(q4);

  // Question 5: Short Answer
  const q5 = await prisma.question.create({
    data: {
      id: generateId(),
      raw_content: 'T√≠nh lim (x->0) (sin x / x)',
      content: 'T√≠nh lim (x‚Üí0) (sin x / x)',
      type: 'SA', // Short Answer
      difficulty: 'MEDIUM',
      grade: '9', // Grade 12 (using level 9)
      subject: 'T',
      chapter: '3',
      level: '2',
      question_code_id: 'Q000005',
      status: 'ACTIVE',
      correct_answer: { value: '1' },
      solution: 'ƒê√¢y l√† gi·ªõi h·∫°n c∆° b·∫£n: lim (x‚Üí0) (sin x / x) = 1',
      tag: ['gi·ªõi h·∫°n', 'h√†m l∆∞·ª£ng gi√°c'],
    },
  });
  mathQuestions.push(q5);

  // Physics questions
  const q6 = await prisma.question.create({
    data: {
      id: generateId(),
      raw_content: 'C√¥ng th·ª©c t√≠nh v·∫≠n t·ªëc trong chuy·ªÉn ƒë·ªông th·∫≥ng ƒë·ªÅu',
      content: 'C√¥ng th·ª©c t√≠nh v·∫≠n t·ªëc trong chuy·ªÉn ƒë·ªông th·∫≥ng ƒë·ªÅu',
      type: 'MC', // Multiple Choice
      difficulty: 'EASY',
      grade: '7', // Grade 10 (using level 7)
      subject: 'L', // L√Ω
      chapter: '1',
      level: '1',
      question_code_id: 'Q000006',
      status: 'ACTIVE',
      answers: [
        { id: 'A', text: 'v = s/t' },
        { id: 'B', text: 'v = at' },
        { id: 'C', text: 'v = s*t' },
        { id: 'D', text: 'v = a/t' },
      ],
      correct_answer: { id: 'A' },
      solution: 'Trong chuy·ªÉn ƒë·ªông th·∫≥ng ƒë·ªÅu, v·∫≠n t·ªëc v = qu√£ng ƒë∆∞·ªùng / th·ªùi gian = s/t',
      tag: ['chuy·ªÉn ƒë·ªông th·∫≥ng ƒë·ªÅu', 'v·∫≠n t·ªëc'],
    },
  });

  // Chemistry question
  const q7 = await prisma.question.create({
    data: {
      id: generateId(),
      raw_content: 'C√¥ng th·ª©c h√≥a h·ªçc c·ªßa n∆∞·ªõc',
      content: 'C√¥ng th·ª©c h√≥a h·ªçc c·ªßa n∆∞·ªõc',
      type: 'SA', // Short Answer
      difficulty: 'EASY',
      grade: '7', // Grade 10 (using level 7)
      subject: 'H', // H√≥a
      chapter: '1',
      level: '1',
      question_code_id: 'Q000007',
      status: 'ACTIVE',
      correct_answer: { value: 'H2O' },
      solution: 'N∆∞·ªõc c√≥ c√¥ng th·ª©c h√≥a h·ªçc l√† H‚ÇÇO (2 nguy√™n t·ª≠ Hydro, 1 nguy√™n t·ª≠ Oxy)',
      tag: ['h√≥a h·ªçc c∆° b·∫£n', 'c√¥ng th·ª©c'],
    },
  });

  console.log(`‚úÖ Created ${await prisma.question.count()} questions\n`);

  // ========================================
  // CREATE EXAMS
  // ========================================
  console.log('üìã Creating sample exams...');

  // Get teacher and admin for exam creation
  const teacher = await prisma.users.findFirst({ where: { role: 'TEACHER', status: 'ACTIVE' } });
  const admin = await prisma.users.findFirst({ where: { role: 'ADMIN' } });

  if (!teacher || !admin) {
    console.log('‚ö†Ô∏è  No teacher or admin found, skipping exam creation');
    return;
  }

  // Exam 1: Math Grade 12
  const exam1 = await prisma.exams.create({
    data: {
      id: generateId(),
      title: 'ƒê·ªÅ thi To√°n 12 - H·ªçc k·ª≥ 1',
      description: 'ƒê·ªÅ thi gi·ªØa k·ª≥ m√¥n To√°n l·ªõp 12 - Ch∆∞∆°ng ƒê·∫°o h√†m v√† T√≠ch ph√¢n',
      instructions: 'Th·ªùi gian l√†m b√†i: 90 ph√∫t. Kh√¥ng ƒë∆∞·ª£c s·ª≠ d·ª•ng t√†i li·ªáu. L√†m b√†i tr√™n gi·∫•y thi.',
      duration_minutes: 90,
      total_points: 100,
      pass_percentage: 50,
      exam_type: 'official',
      status: 'ACTIVE',
      difficulty: 'MEDIUM',
      grade: 12,
      subject: 'To√°n',
      chapter: 'ƒê·∫°o h√†m v√† T√≠ch ph√¢n',
      exam_year: '2024-2025',
      source_institution: 'Tr∆∞·ªùng THPT Nguy·ªÖn Hu·ªá',
      created_by: teacher.id,
      published_at: new Date(),
    },
  });

  // Add questions to exam 1
  await prisma.exam_questions.createMany({
    data: [
      {
        id: generateId(),
        exam_id: exam1.id,
        question_id: mathQuestions[0].id,
        order_number: 1,
        points: 20,
      },
      {
        id: generateId(),
        exam_id: exam1.id,
        question_id: mathQuestions[1].id,
        order_number: 2,
        points: 25,
      },
      {
        id: generateId(),
        exam_id: exam1.id,
        question_id: mathQuestions[2].id,
        order_number: 3,
        points: 15,
      },
      {
        id: generateId(),
        exam_id: exam1.id,
        question_id: mathQuestions[3].id,
        order_number: 4,
        points: 30,
      },
      {
        id: generateId(),
        exam_id: exam1.id,
        question_id: mathQuestions[4].id,
        order_number: 5,
        points: 10,
      },
    ],
  });

  // Exam 2: Practice exam
  const exam2 = await prisma.exams.create({
    data: {
      id: generateId(),
      title: 'ƒê·ªÅ luy·ªán t·∫≠p To√°n 12 - C∆° b·∫£n',
      description: 'ƒê·ªÅ luy·ªán t·∫≠p c√°c d·∫°ng b√†i c∆° b·∫£n m√¥n To√°n 12',
      instructions: 'Th·ªùi gian l√†m b√†i: 45 ph√∫t. ƒê·ªÅ thi luy·ªán t·∫≠p, kh√¥ng t√≠nh ƒëi·ªÉm.',
      duration_minutes: 45,
      total_points: 50,
      pass_percentage: 60,
      exam_type: 'generated', // Practice exam (using 'generated' type)
      status: 'ACTIVE',
      difficulty: 'EASY',
      grade: 12,
      subject: 'To√°n',
      created_by: admin.id,
      published_at: new Date(),
    },
  });

  await prisma.exam_questions.createMany({
    data: [
      {
        id: generateId(),
        exam_id: exam2.id,
        question_id: mathQuestions[0].id,
        order_number: 1,
        points: 25,
      },
      {
        id: generateId(),
        exam_id: exam2.id,
        question_id: mathQuestions[2].id,
        order_number: 2,
        points: 25,
      },
    ],
  });

  console.log(`‚úÖ Created ${await prisma.exams.count()} exams\n`);
}


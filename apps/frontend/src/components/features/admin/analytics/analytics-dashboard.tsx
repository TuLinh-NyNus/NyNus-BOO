/**
 * Analytics Dashboard Component
 * Advanced analytics dashboard v·ªõi tab system v√† 3:1 layout
 */

'use client';

import React, { useState, useEffect } from 'react';
import {
  BarChart3,
  TrendingUp,
  GraduationCap,
  Activity,
  Target,
  Clock,
  Download,
  Eye,
  Star,
  DollarSign
} from 'lucide-react';

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/display/card';
import { Badge } from '@/components/ui/display/badge';
import { Button } from '@/components/ui/form/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/navigation/tabs';
import { StatCard } from '../dashboard/stat-card';
import { mockAnalytics } from '@/lib/mockdata/analytics';

/**
 * Analytics Dashboard Props
 */
export interface AnalyticsDashboardProps {
  className?: string;
}

/**
 * Tab Types for Analytics Dashboard
 */
type AnalyticsTab = 'user-growth' | 'activity-access' | 'course-stats';

/**
 * Analytics Dashboard Component
 * Advanced analytics dashboard v·ªõi tab system v√† 3:1 layout
 */
export function AnalyticsDashboard({ className }: AnalyticsDashboardProps) {
  const [analyticsData] = useState(mockAnalytics);
  const [isLoading, setIsLoading] = useState(true);
  const [selectedPeriod, setSelectedPeriod] = useState<'7d' | '30d' | '90d'>('30d');
  const [activeTab, setActiveTab] = useState<AnalyticsTab>('user-growth');

  // Simulate data loading
  useEffect(() => {
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 1000);

    return () => clearTimeout(timer);
  }, []);

  if (isLoading) {
    return (
      <div className="space-y-6">
        <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
          {[...Array(4)].map((_, i) => (
            <Card key={i} className="animate-pulse">
              <CardHeader className="space-y-0 pb-2">
                <div className="h-4 bg-muted rounded w-3/4"></div>
              </CardHeader>
              <CardContent>
                <div className="h-8 bg-muted rounded w-1/2 mb-2"></div>
                <div className="h-3 bg-muted rounded w-full"></div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    );
  }

  const { performance, engagement } = analyticsData;

  return (
    <div className={`space-y-6 ${className}`}>
      {/* Header v·ªõi period selector */}
      <div className="flex items-center justify-between">
        <div>
          <h2 className="text-2xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent">
            üìä Analytics Dashboard
          </h2>
          <p className="text-muted-foreground">
            Comprehensive analytics v·ªõi customizable widgets
          </p>
        </div>

        <div className="flex gap-2">
          {(['7d', '30d', '90d'] as const).map((period) => (
            <Button
              key={period}
              variant={selectedPeriod === period ? 'default' : 'outline'}
              size="sm"
              onClick={() => setSelectedPeriod(period)}
            >
              {period === '7d' ? '7 ng√†y' : period === '30d' ? '30 ng√†y' : '90 ng√†y'}
            </Button>
          ))}
        </div>
      </div>

      {/* Main Layout: Full Width Charts Dashboard */}
      <div className="w-full">
        {/* Charts Dashboard */}
        <div className="w-full">
          <Tabs value={activeTab} onValueChange={(value) => setActiveTab(value as AnalyticsTab)}>
            <TabsList className="grid w-full grid-cols-3">
              <TabsTrigger value="user-growth">TƒÉng tr∆∞·ªüng ng∆∞·ªùi d√πng</TabsTrigger>
              <TabsTrigger value="activity-access">Ho·∫°t ƒë·ªông truy c·∫≠p</TabsTrigger>
              <TabsTrigger value="course-stats">Th·ªëng k√™ kh√≥a h·ªçc</TabsTrigger>
            </TabsList>

            {/* Tab 1: TƒÉng tr∆∞·ªüng ng∆∞·ªùi d√πng */}
            <TabsContent value="user-growth" className="space-y-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <TrendingUp className="h-5 w-5" />
                    Th·ªëng k√™ truy c·∫≠p
                  </CardTitle>
                  <CardDescription>S·ªë l∆∞·ª£ng ng∆∞·ªùi d√πng ho·∫°t ƒë·ªông trong 7 ng√†y qua</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="h-[300px] flex items-center justify-center text-muted-foreground">
                    <div className="text-center">
                      <BarChart3 className="h-16 w-16 mx-auto mb-4 opacity-50" />
                      <p className="text-lg font-medium mb-2">[Bi·ªÉu ƒë·ªì s·∫Ω ƒë∆∞·ª£c th√™m v√†o sau]</p>
                      <Badge variant="outline">Line Chart - User Growth</Badge>
                    </div>
                  </div>
                </CardContent>
              </Card>


            </TabsContent>

            {/* Tab 2: Ho·∫°t ƒë·ªông truy c·∫≠p */}
            <TabsContent value="activity-access" className="space-y-6">
              <div className="grid gap-6 md:grid-cols-2">
                {/* Truy c·∫≠p c√¢u h·ªèi */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Target className="h-5 w-5" />
                      Truy c·∫≠p c√¢u h·ªèi
                    </CardTitle>
                    <CardDescription>Th·ªëng k√™ l√†m b√†i v√† c√¢u h·ªèi ph·ªï bi·∫øn</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="h-[200px] flex items-center justify-center text-muted-foreground">
                      <div className="text-center">
                        <Target className="h-12 w-12 mx-auto mb-2 opacity-50" />
                        <p>Bi·ªÉu ƒë·ªì truy c·∫≠p c√¢u h·ªèi</p>
                        <Badge variant="outline" className="mt-2">Bar Chart</Badge>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                {/* Truy c·∫≠p l√Ω thuy·∫øt */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Eye className="h-5 w-5" />
                      Truy c·∫≠p l√Ω thuy·∫øt
                    </CardTitle>
                    <CardDescription>S·ªë l∆∞·ª£t xem v√† th·ªùi gian ƒë·ªçc</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="h-[200px] flex items-center justify-center text-muted-foreground">
                      <div className="text-center">
                        <Eye className="h-12 w-12 mx-auto mb-2 opacity-50" />
                        <p>Bi·ªÉu ƒë·ªì truy c·∫≠p l√Ω thuy·∫øt</p>
                        <Badge variant="outline" className="mt-2">Line Chart</Badge>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>

              {/* T·∫£i t√†i li·ªáu */}
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Download className="h-5 w-5" />
                    T·∫£i t√†i li·ªáu
                  </CardTitle>
                  <CardDescription>S·ªë l∆∞·ª£t download v√† t√†i li·ªáu hot</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="h-[200px] flex items-center justify-center text-muted-foreground">
                    <div className="text-center">
                      <Download className="h-12 w-12 mx-auto mb-2 opacity-50" />
                      <p>Bi·ªÉu ƒë·ªì t·∫£i t√†i li·ªáu</p>
                      <Badge variant="outline" className="mt-2">Pie Chart</Badge>
                    </div>
                  </div>
                </CardContent>
              </Card>

              {/* Activity Metrics */}
              <div className="grid gap-4 md:grid-cols-3">
                <StatCard
                  title="C√¢u h·ªèi ƒë∆∞·ª£c l√†m"
                  value={engagement.questionsAnswered}
                  description="T·ªïng l∆∞·ª£t l√†m b√†i"
                  icon={<Target className="h-4 w-4" />}
                  colorScheme="accent"
                />
                <StatCard
                  title="Th·ªùi gian ƒë·ªçc TB"
                  value={engagement.averageStudyTime}
                  description="Ph√∫t/session"
                  icon={<Clock className="h-4 w-4" />}
                  colorScheme="primary"
                />
                <StatCard
                  title="T·ª∑ l·ªá ƒë√∫ng"
                  value={engagement.correctAnswerRate}
                  description="C√¢u tr·∫£ l·ªùi ƒë√∫ng"
                  icon={<Activity className="h-4 w-4" />}
                  colorScheme="success"
                  format="percentage"
                />
              </div>
            </TabsContent>

            {/* Tab 3: Th·ªëng k√™ kh√≥a h·ªçc */}
            <TabsContent value="course-stats" className="space-y-6">
              <div className="grid gap-6 md:grid-cols-2">
                {/* Enrollment vs Completion */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <GraduationCap className="h-5 w-5" />
                      Enrollment vs Completion
                    </CardTitle>
                    <CardDescription>T·ª∑ l·ªá ƒëƒÉng k√Ω v√† ho√†n th√†nh kh√≥a h·ªçc</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="h-[200px] flex items-center justify-center text-muted-foreground">
                      <div className="text-center">
                        <GraduationCap className="h-12 w-12 mx-auto mb-2 opacity-50" />
                        <p>Bi·ªÉu ƒë·ªì Enrollment vs Completion</p>
                        <Badge variant="outline" className="mt-2">Bar Chart</Badge>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                {/* Top kh√≥a h·ªçc */}
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Star className="h-5 w-5" />
                      Top kh√≥a h·ªçc
                    </CardTitle>
                    <CardDescription>Kh√≥a h·ªçc ƒë∆∞·ª£c y√™u th√≠ch nh·∫•t</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="h-[200px] flex items-center justify-center text-muted-foreground">
                      <div className="text-center">
                        <Star className="h-12 w-12 mx-auto mb-2 opacity-50" />
                        <p>Top kh√≥a h·ªçc y√™u th√≠ch</p>
                        <Badge variant="outline" className="mt-2">Ranking List</Badge>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>

              {/* Doanh thu theo kh√≥a h·ªçc */}
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <DollarSign className="h-5 w-5" />
                    Doanh thu theo kh√≥a h·ªçc
                  </CardTitle>
                  <CardDescription>Th·ªëng k√™ doanh thu t·ª´ng kh√≥a h·ªçc</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="h-[200px] flex items-center justify-center text-muted-foreground">
                    <div className="text-center">
                      <DollarSign className="h-12 w-12 mx-auto mb-2 opacity-50" />
                      <p>Bi·ªÉu ƒë·ªì doanh thu kh√≥a h·ªçc</p>
                      <Badge variant="outline" className="mt-2">Revenue Chart</Badge>
                    </div>
                  </div>
                </CardContent>
              </Card>

              {/* Course Stats Metrics */}
              <div className="grid gap-4 md:grid-cols-3">
                <StatCard
                  title="T·ªïng doanh thu"
                  value={performance.totalRevenue}
                  description="Doanh thu t√≠ch l≈©y"
                  icon={<DollarSign className="h-4 w-4" />}
                  colorScheme="success"
                  format="currency"
                  trend={{
                    value: performance.revenueGrowth,
                    label: "so v·ªõi th√°ng tr∆∞·ªõc",
                    isPositive: performance.revenueGrowth > 0,
                  }}
                />
                <StatCard
                  title="Kh√≥a h·ªçc ho√†n th√†nh"
                  value={performance.coursesCompleted}
                  description="Kh√≥a h·ªçc ƒë√£ ho√†n th√†nh"
                  icon={<GraduationCap className="h-4 w-4" />}
                  colorScheme="education"
                />
                <StatCard
                  title="T·ª∑ l·ªá ho√†n th√†nh"
                  value={performance.completionRate}
                  description="Completion rate"
                  icon={<Target className="h-4 w-4" />}
                  colorScheme="accent"
                  format="percentage"
                />
              </div>
            </TabsContent>
          </Tabs>
        </div>


      </div>
    </div>
  );
}

/**
 * Default export
 */
export default AnalyticsDashboard;

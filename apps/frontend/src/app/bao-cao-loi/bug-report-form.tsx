"use client";

import { Bug, Info, Send, Camera, FileText, MessageCircle, CheckCircle, AlertCircle, Clock, Zap } from "lucide-react";
import { motion } from "framer-motion";
import { useState } from "react";

const bugTypes = [
  {
    value: "ui-ux",
    label: "Giao di·ªán ng∆∞·ªùi d√πng",
    description: "L·ªói v·ªÅ layout, m√†u s·∫Øc, font ch·ªØ, responsive",
    icon: "üé®",
    gradient: "from-blue-500/20 to-indigo-500/20"
  },
  {
    value: "functionality",
    label: "Ch·ª©c nƒÉng",
    description: "L·ªói v·ªÅ t√≠nh nƒÉng, kh√¥ng ho·∫°t ƒë·ªông nh∆∞ mong ƒë·ª£i",
    icon: "‚öôÔ∏è",
    gradient: "from-purple-500/20 to-violet-500/20"
  },
  {
    value: "performance",
    label: "Hi·ªáu su·∫•t",
    description: "Ch·∫≠m, lag, t·∫£i trang l√¢u, crash",
    icon: "üöÄ",
    gradient: "from-green-500/20 to-emerald-500/20"
  },
  {
    value: "content",
    label: "N·ªôi dung",
    description: "L·ªói v·ªÅ b√†i h·ªçc, c√¢u h·ªèi, ƒë√°p √°n",
    icon: "üìö",
    gradient: "from-amber-500/20 to-orange-500/20"
  },
  {
    value: "account",
    label: "T√†i kho·∫£n",
    description: "L·ªói ƒëƒÉng nh·∫≠p, ƒëƒÉng k√Ω, qu·∫£n l√Ω profile",
    icon: "üë§",
    gradient: "from-pink-500/20 to-rose-500/20"
  },
  {
    value: "payment",
    label: "Thanh to√°n",
    description: "L·ªói v·ªÅ giao d·ªãch, thanh to√°n, g√≥i Premium",
    icon: "üí≥",
    gradient: "from-cyan-500/20 to-blue-500/20"
  }
];

const priorityLevels = [
  {
    value: "low",
    label: "Th·∫•p",
    description: "L·ªói nh·ªè, kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn vi·ªác s·ª≠ d·ª•ng",
    color: "text-emerald-400",
    bgColor: "bg-emerald-500/20",
    borderColor: "border-emerald-500/30"
  },
  {
    value: "medium",
    label: "Trung b√¨nh",
    description: "L·ªói g√¢y kh√≥ ch·ªãu nh∆∞ng v·∫´n c√≥ th·ªÉ s·ª≠ d·ª•ng",
    color: "text-yellow-400",
    bgColor: "bg-yellow-500/20",
    borderColor: "border-yellow-500/30"
  },
  {
    value: "high",
    label: "Cao",
    description: "L·ªói nghi√™m tr·ªçng, ·∫£nh h∆∞·ªüng ƒë·∫øn tr·∫£i nghi·ªám",
    color: "text-orange-400",
    bgColor: "bg-orange-500/20",
    borderColor: "border-orange-500/30"
  },
  {
    value: "critical",
    label: "Nghi√™m tr·ªçng",
    description: "L·ªói khi·∫øn kh√¥ng th·ªÉ s·ª≠ d·ª•ng ƒë∆∞·ª£c t√≠nh nƒÉng",
    color: "text-red-400",
    bgColor: "bg-red-500/20",
    borderColor: "border-red-500/30"
  }
];

const reportingTips = [
  {
    icon: Camera,
    title: "Ch·ª•p ·∫£nh m√†n h√¨nh",
    description: "Ch·ª•p ·∫£nh m√†n h√¨nh l·ªói ƒë·ªÉ ch√∫ng t√¥i hi·ªÉu r√µ h∆°n v·ªÅ v·∫•n ƒë·ªÅ",
    gradient: "from-blue-500/20 to-indigo-500/20",
    iconColor: "text-blue-400"
  },
  {
    icon: FileText,
    title: "M√¥ t·∫£ chi ti·∫øt",
    description: "M√¥ t·∫£ c√°c b∆∞·ªõc th·ª±c hi·ªán tr∆∞·ªõc khi g·∫∑p l·ªói",
    gradient: "from-purple-500/20 to-violet-500/20",
    iconColor: "text-purple-400"
  },
  {
    icon: MessageCircle,
    title: "Th√¥ng tin h·ªá th·ªëng",
    description: "Cung c·∫•p th√¥ng tin v·ªÅ tr√¨nh duy·ªát, thi·∫øt b·ªã, h·ªá ƒëi·ªÅu h√†nh",
    gradient: "from-emerald-500/20 to-teal-500/20",
    iconColor: "text-emerald-400"
  }
];

const processSteps = [
  {
    step: "1",
    title: "Ti·∫øp nh·∫≠n",
    description: "Ch√∫ng t√¥i nh·∫≠n b√°o c√°o v√† ph√¢n lo·∫°i m·ª©c ƒë·ªô ∆∞u ti√™n",
    icon: CheckCircle,
    gradient: "from-blue-500/20 to-indigo-500/20",
    iconColor: "text-blue-400"
  },
  {
    step: "2",
    title: "Ph√¢n t√≠ch",
    description: "ƒê·ªôi ng≈© k·ªπ thu·∫≠t ph√¢n t√≠ch v√† t√°i hi·ªán l·ªói",
    icon: AlertCircle,
    gradient: "from-purple-500/20 to-violet-500/20",
    iconColor: "text-purple-400"
  },
  {
    step: "3",
    title: "Kh·∫Øc ph·ª•c",
    description: "Ph√°t tri·ªÉn v√† ki·ªÉm tra gi·∫£i ph√°p kh·∫Øc ph·ª•c",
    icon: Zap,
    gradient: "from-emerald-500/20 to-teal-500/20",
    iconColor: "text-emerald-400"
  },
  {
    step: "4",
    title: "C·∫≠p nh·∫≠t",
    description: "Tri·ªÉn khai b·∫£n c·∫≠p nh·∫≠t v√† th√¥ng b√°o cho b·∫°n",
    icon: Clock,
    gradient: "from-amber-500/20 to-orange-500/20",
    iconColor: "text-amber-400"
  }
];

export function BugReportForm() {
  const [selectedBugType, setSelectedBugType] = useState("");
  const [selectedPriority, setSelectedPriority] = useState("");

  return (
    <div className="min-h-screen relative overflow-hidden">
      {/* Enhanced Background with Theme Gradients */}
      <div className="absolute inset-0 gradient-hero"></div>
      <div className="absolute inset-0 gradient-overlay"></div>
      
      {/* Animated Background Elements */}
      <div className="absolute top-20 left-20 w-72 h-72 bg-blue-500/10 rounded-full blur-3xl animate-pulse"></div>
      <div className="absolute bottom-20 right-20 w-96 h-96 bg-purple-500/10 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '1s' }}></div>
      <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-64 h-64 bg-pink-500/5 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '2s' }}></div>

      {/* Hero Section */}
      <section className="relative z-10 pt-32 pb-20">
        <div className="container mx-auto px-4">
          <motion.div 
            className="text-center max-w-4xl mx-auto"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <motion.h1 
              className="text-5xl md:text-6xl lg:text-7xl font-bold mb-6 bg-clip-text text-transparent bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 leading-tight"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.2 }}
            >
              B√°o c√°o{" "}
              <span className="text-transparent bg-clip-text bg-gradient-to-r from-red-400 via-orange-400 to-yellow-400">
                l·ªói
              </span>
            </motion.h1>
            <motion.p 
              className="text-xl md:text-2xl text-slate-300 mb-12 leading-relaxed"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.4 }}
            >
              Gi√∫p ch√∫ng t√¥i c·∫£i thi·ªán NyNus b·∫±ng c√°ch b√°o c√°o l·ªói ho·∫∑c v·∫•n ƒë·ªÅ b·∫°n g·∫∑p ph·∫£i. 
              M·ªói b√°o c√°o ƒë·ªÅu r·∫•t quan tr·ªçng ƒë·ªÉ ch√∫ng t√¥i t·∫°o ra tr·∫£i nghi·ªám t·ªët h∆°n.
            </motion.p>
          </motion.div>
        </div>
      </section>

      {/* Reporting Tips */}
      <section className="relative z-10 py-20 px-4">
        <div className="container mx-auto max-w-6xl">
          <motion.div 
            className="text-center mb-12"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">M·∫πo b√°o c√°o l·ªói hi·ªáu qu·∫£</h2>
            <p className="text-slate-300 text-lg max-w-2xl mx-auto">
              ƒê·ªÉ ch√∫ng t√¥i c√≥ th·ªÉ kh·∫Øc ph·ª•c l·ªói nhanh ch√≥ng, h√£y cung c·∫•p th√¥ng tin chi ti·∫øt nh·∫•t c√≥ th·ªÉ
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-16">
            {reportingTips.map((tip, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 40 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                className="group"
              >
                <div className={`p-6 bg-gradient-to-br ${tip.gradient} backdrop-blur-sm border border-white/10 rounded-2xl hover:bg-white/10 transition-all duration-300 transform hover:scale-105`}>
                  <div className="w-12 h-12 bg-white/10 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300">
                    <tip.icon className={`w-6 h-6 ${tip.iconColor}`} />
                  </div>
                  <h3 className="text-lg font-semibold text-white mb-3 text-center">{tip.title}</h3>
                  <p className="text-slate-300 text-center">{tip.description}</p>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Bug Report Form */}
      <section className="relative z-10 py-20 px-4">
        <div className="container mx-auto max-w-4xl">
          <motion.div 
            className="bg-white/5 backdrop-blur-md border border-white/10 rounded-2xl p-8 shadow-xl"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <h2 className="text-3xl font-bold text-white mb-8 text-center">Form b√°o c√°o l·ªói</h2>
            
            <form className="space-y-8">
              {/* Basic Information */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label htmlFor="name" className="block text-sm font-medium text-slate-200 mb-2">
                    H·ªç v√† t√™n *
                  </label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    required
                    className="w-full px-4 py-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400/50 focus:border-transparent text-white placeholder-slate-400 transition-all duration-300"
                    placeholder="Nh·∫≠p h·ªç v√† t√™n"
                  />
                </div>
                <div>
                  <label htmlFor="email" className="block text-sm font-medium text-slate-200 mb-2">
                    Email *
                  </label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    required
                    className="w-full px-4 py-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400/50 focus:border-transparent text-white placeholder-slate-400 transition-all duration-300"
                    placeholder="Nh·∫≠p email"
                  />
                </div>
              </div>

              {/* Bug Type */}
              <div>
                <label className="block text-sm font-medium text-slate-200 mb-4">
                  Lo·∫°i l·ªói *
                </label>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {bugTypes.map((type) => (
                    <label 
                      key={type.value} 
                      className={`flex items-start gap-3 p-4 border rounded-lg cursor-pointer transition-all duration-300 ${
                        selectedBugType === type.value 
                          ? 'border-blue-400 bg-blue-500/20' 
                          : 'border-white/20 hover:border-white/40 hover:bg-white/5'
                      }`}
                    >
                      <input
                        type="radio"
                        name="bugType"
                        value={type.value}
                        required
                        checked={selectedBugType === type.value}
                        onChange={(e) => setSelectedBugType(e.target.value)}
                        className="mt-1 w-4 h-4 text-blue-400 border-white/30 focus:ring-blue-400"
                      />
                      <div className="flex-1">
                        <div className="flex items-center gap-2 mb-1">
                          <span className="text-lg">{type.icon}</span>
                          <div className="font-medium text-white">{type.label}</div>
                        </div>
                        <div className="text-sm text-slate-300">{type.description}</div>
                      </div>
                    </label>
                  ))}
                </div>
              </div>

              {/* Priority Level */}
              <div>
                <label className="block text-sm font-medium text-slate-200 mb-4">
                  M·ª©c ƒë·ªô nghi√™m tr·ªçng *
                </label>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                  {priorityLevels.map((level) => (
                    <label 
                      key={level.value} 
                      className={`flex items-start gap-3 p-4 border rounded-lg cursor-pointer transition-all duration-300 ${
                        selectedPriority === level.value 
                          ? `${level.borderColor} ${level.bgColor}` 
                          : 'border-white/20 hover:border-white/40 hover:bg-white/5'
                      }`}
                    >
                      <input
                        type="radio"
                        name="priority"
                        value={level.value}
                        required
                        checked={selectedPriority === level.value}
                        onChange={(e) => setSelectedPriority(e.target.value)}
                        className="mt-1 w-4 h-4 text-blue-400 border-white/30 focus:ring-blue-400"
                      />
                      <div className="flex-1">
                        <div className={`font-medium ${level.color} mb-1`}>{level.label}</div>
                        <div className="text-sm text-slate-300">{level.description}</div>
                      </div>
                    </label>
                  ))}
                </div>
              </div>

              {/* Bug Title */}
              <div>
                <label htmlFor="title" className="block text-sm font-medium text-slate-200 mb-2">
                  Ti√™u ƒë·ªÅ l·ªói *
                </label>
                <input
                  type="text"
                  id="title"
                  name="title"
                  required
                  className="w-full px-4 py-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400/50 focus:border-transparent text-white placeholder-slate-400 transition-all duration-300"
                  placeholder="M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ l·ªói (VD: Kh√¥ng th·ªÉ ƒëƒÉng nh·∫≠p v√†o t√†i kho·∫£n)"
                />
              </div>

              {/* Bug Description */}
              <div>
                <label htmlFor="description" className="block text-sm font-medium text-slate-200 mb-2">
                  M√¥ t·∫£ chi ti·∫øt *
                </label>
                <textarea
                  id="description"
                  name="description"
                  rows={6}
                  required
                  className="w-full px-4 py-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400/50 focus:border-transparent text-white placeholder-slate-400 resize-none transition-all duration-300"
                  placeholder="M√¥ t·∫£ chi ti·∫øt v·ªÅ l·ªói, bao g·ªìm:&#10;- C√°c b∆∞·ªõc th·ª±c hi·ªán tr∆∞·ªõc khi g·∫∑p l·ªói&#10;- K·∫øt qu·∫£ mong ƒë·ª£i&#10;- K·∫øt qu·∫£ th·ª±c t·∫ø&#10;- T·∫ßn su·∫•t x·∫£y ra l·ªói"
                ></textarea>
              </div>

              {/* Steps to Reproduce */}
              <div>
                <label htmlFor="steps" className="block text-sm font-medium text-slate-200 mb-2">
                  C√°c b∆∞·ªõc t√°i hi·ªán l·ªói
                </label>
                <textarea
                  id="steps"
                  name="steps"
                  rows={4}
                  className="w-full px-4 py-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400/50 focus:border-transparent text-white placeholder-slate-400 resize-none transition-all duration-300"
                  placeholder="1. Truy c·∫≠p trang...&#10;2. Nh·∫•n v√†o n√∫t...&#10;3. ƒêi·ªÅn th√¥ng tin...&#10;4. L·ªói x·∫£y ra..."
                ></textarea>
              </div>

              {/* System Information */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label htmlFor="browser" className="block text-sm font-medium text-slate-200 mb-2">
                    Tr√¨nh duy·ªát
                  </label>
                  <input
                    type="text"
                    id="browser"
                    name="browser"
                    className="w-full px-4 py-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400/50 focus:border-transparent text-white placeholder-slate-400 transition-all duration-300"
                    placeholder="VD: Chrome 120.0.6099.109"
                  />
                </div>
                <div>
                  <label htmlFor="device" className="block text-sm font-medium text-slate-200 mb-2">
                    Thi·∫øt b·ªã
                  </label>
                  <input
                    type="text"
                    id="device"
                    name="device"
                    className="w-full px-4 py-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400/50 focus:border-transparent text-white placeholder-slate-400 transition-all duration-300"
                    placeholder="VD: iPhone 15, Windows 11, MacBook Pro"
                  />
                </div>
              </div>

              {/* Screenshots */}
              <div>
                <label htmlFor="screenshots" className="block text-sm font-medium text-slate-200 mb-2">
                  ·∫¢nh ch·ª•p m√†n h√¨nh (n·∫øu c√≥)
                </label>
                <input
                  type="file"
                  id="screenshots"
                  name="screenshots"
                  multiple
                  accept="image/*"
                  className="w-full px-4 py-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400/50 focus:border-transparent text-white transition-all duration-300 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-500/20 file:text-blue-400 hover:file:bg-blue-500/30"
                />
                <p className="text-sm text-slate-400 mt-2">
                  Ch·ª•p ·∫£nh m√†n h√¨nh l·ªói ƒë·ªÉ gi√∫p ch√∫ng t√¥i hi·ªÉu r√µ h∆°n v·ªÅ v·∫•n ƒë·ªÅ
                </p>
              </div>

              {/* Additional Information */}
              <div>
                <label htmlFor="additional" className="block text-sm font-medium text-slate-200 mb-2">
                  Th√¥ng tin b·ªï sung
                </label>
                <textarea
                  id="additional"
                  name="additional"
                  rows={3}
                  className="w-full px-4 py-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400/50 focus:border-transparent text-white placeholder-slate-400 resize-none transition-all duration-300"
                  placeholder="B·∫•t k·ª≥ th√¥ng tin b·ªï sung n√†o kh√°c m√† b·∫°n nghƒ© c√≥ th·ªÉ h·ªØu √≠ch..."
                ></textarea>
              </div>

              {/* Privacy Consent */}
              <div className="flex items-start gap-3 p-4 bg-white/5 rounded-lg border border-white/10">
                <input
                  type="checkbox"
                  id="privacy"
                  name="privacy"
                  required
                  className="mt-1 w-4 h-4 text-blue-400 border-white/30 rounded focus:ring-blue-400"
                />
                <label htmlFor="privacy" className="text-sm text-slate-300">
                  T√¥i ƒë·ªìng √Ω v·ªõi{" "}
                  <a href="/privacy" className="text-blue-400 hover:underline">
                    Ch√≠nh s√°ch b·∫£o m·∫≠t
                  </a>{" "}
                  v√† cho ph√©p NyNus s·ª≠ d·ª•ng th√¥ng tin n√†y ƒë·ªÉ kh·∫Øc ph·ª•c l·ªói
                </label>
              </div>

              {/* Submit Button */}
              <button
                type="submit"
                className="w-full bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white py-4 px-6 rounded-lg transition-all duration-300 font-semibold flex items-center justify-center gap-3 transform hover:scale-105 shadow-lg hover:shadow-xl"
              >
                <Send className="w-5 h-5" />
                G·ª≠i b√°o c√°o l·ªói
              </button>
            </form>
          </motion.div>
        </div>
      </section>

      {/* Alternative Contact Methods */}
      <section className="relative z-10 py-20 px-4">
        <div className="container mx-auto max-w-4xl">
          <motion.div 
            className="text-center mb-12"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">C√°ch kh√°c ƒë·ªÉ b√°o c√°o l·ªói</h2>
            <p className="text-slate-300 text-lg max-w-2xl mx-auto">
              N·∫øu b·∫°n g·∫∑p kh√≥ khƒÉn v·ªõi form tr√™n, h√£y s·ª≠ d·ª•ng c√°c ph∆∞∆°ng th·ª©c kh√°c
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <motion.div 
              className="text-center p-6 bg-gradient-to-br from-blue-500/20 to-indigo-500/20 backdrop-blur-sm border border-white/10 rounded-2xl hover:bg-white/10 transition-all duration-300 transform hover:scale-105"
              initial={{ opacity: 0, y: 40 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.1 }}
            >
              <Bug className="w-12 h-12 text-blue-400 mx-auto mb-4" />
              <h3 className="text-lg font-semibold text-white mb-2">Email tr·ª±c ti·∫øp</h3>
              <p className="text-slate-300 mb-4">
                G·ª≠i email chi ti·∫øt v·ªÅ l·ªói cho ƒë·ªôi ng≈© k·ªπ thu·∫≠t
              </p>
              <a
                href="mailto:bugs@nynus.edu.vn"
                className="text-blue-400 hover:underline font-medium"
              >
                bugs@nynus.edu.vn
              </a>
            </motion.div>

            <motion.div 
              className="text-center p-6 bg-gradient-to-br from-purple-500/20 to-violet-500/20 backdrop-blur-sm border border-white/10 rounded-2xl hover:bg-white/10 transition-all duration-300 transform hover:scale-105"
              initial={{ opacity: 0, y: 40 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.2 }}
            >
              <MessageCircle className="w-12 h-12 text-purple-400 mx-auto mb-4" />
              <h3 className="text-lg font-semibold text-white mb-2">Chat h·ªó tr·ª£</h3>
              <p className="text-slate-300 mb-4">
                Chat tr·ª±c ti·∫øp v·ªõi ƒë·ªôi ng≈© h·ªó tr·ª£ ƒë·ªÉ b√°o c√°o l·ªói
              </p>
              <a
                href="/lien-he"
                className="text-purple-400 hover:underline font-medium"
              >
                M·ªü chat ngay
              </a>
            </motion.div>

            <motion.div 
              className="text-center p-6 bg-gradient-to-br from-emerald-500/20 to-teal-500/20 backdrop-blur-sm border border-white/10 rounded-2xl hover:bg-white/10 transition-all duration-300 transform hover:scale-105"
              initial={{ opacity: 0, y: 40 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.3 }}
            >
              <Info className="w-12 h-12 text-emerald-400 mx-auto mb-4" />
              <h3 className="text-lg font-semibold text-white mb-2">Xem FAQ</h3>
              <p className="text-slate-300 mb-4">
                Ki·ªÉm tra xem l·ªói c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c gi·∫£i quy·∫øt ch∆∞a
              </p>
              <a
                href="/faq"
                className="text-emerald-400 hover:underline font-medium"
              >
                Xem c√¢u h·ªèi th∆∞·ªùng g·∫∑p
              </a>
            </motion.div>
          </div>
        </div>
      </section>

      {/* What Happens Next */}
      <section className="relative z-10 py-20 px-4">
        <div className="container mx-auto max-w-4xl">
          <motion.div 
            className="text-center mb-12"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">ƒêi·ªÅu g√¨ x·∫£y ra ti·∫øp theo?</h2>
            <p className="text-slate-300 text-lg max-w-2xl mx-auto">
              Quy tr√¨nh x·ª≠ l√Ω b√°o c√°o l·ªói c·ªßa ch√∫ng t√¥i
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {processSteps.map((step, index) => (
              <motion.div 
                key={index}
                className="text-center"
                initial={{ opacity: 0, y: 40 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
              >
                <div className={`w-16 h-16 bg-gradient-to-br ${step.gradient} backdrop-blur-sm border border-white/10 rounded-full flex items-center justify-center mx-auto mb-4`}>
                  <step.icon className={`w-8 h-8 ${step.iconColor}`} />
                </div>
                <h3 className="text-lg font-semibold text-white mb-2">{step.title}</h3>
                <p className="text-sm text-slate-300">
                  {step.description}
                </p>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="relative z-10 py-20 px-4 bg-gradient-to-br from-blue-500/10 via-purple-500/5 to-pink-500/10">
        <div className="container mx-auto max-w-4xl text-center">
          <motion.h2 
            className="text-3xl md:text-4xl font-bold text-white mb-4"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            C·∫£m ∆°n b·∫°n ƒë√£ gi√∫p c·∫£i thi·ªán NyNus!
          </motion.h2>
          <motion.p 
            className="text-xl text-slate-300 mb-8"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
          >
            M·ªói b√°o c√°o l·ªói ƒë·ªÅu gi√∫p ch√∫ng t√¥i t·∫°o ra tr·∫£i nghi·ªám t·ªët h∆°n cho t·∫•t c·∫£ ng∆∞·ªùi d√πng
          </motion.p>
          <motion.div 
            className="flex flex-col sm:flex-row gap-4 justify-center"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}
          >
            <a
              href="/lien-he"
              className="inline-flex items-center px-8 py-3 bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white rounded-lg transition-all duration-300 font-medium transform hover:scale-105 shadow-lg hover:shadow-xl"
            >
              Li√™n h·ªá h·ªó tr·ª£
            </a>
            <a
              href="/faq"
              className="inline-flex items-center px-8 py-3 border border-white/20 rounded-lg hover:bg-white/10 transition-all duration-300 font-medium text-white"
            >
              Xem FAQ
            </a>
          </motion.div>
        </div>
      </section>
    </div>
  );
}

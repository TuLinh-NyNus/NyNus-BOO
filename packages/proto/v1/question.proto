syntax = "proto3";

package v1;

import "common/common.proto";
import "google/api/annotations.proto";

option go_package = "github.com/AnhPhan49/exam-bank-system/apps/backend/pkg/proto/v1";

// Answer message
message Answer {
  string id = 1;
  string text = 2;
  bool is_correct = 3;
}

// Question message
message Question {
  string id = 1;
  string text = 2;
  common.QuestionType type = 3;
  common.DifficultyLevel difficulty = 4;
  repeated Answer answers = 5;
  string explanation = 6;
  repeated string tags = 7;
  int32 points = 8;
  string created_by = 9;
  string created_at = 10;
  string updated_at = 11;
}

// Question management
message CreateQuestionRequest {
  string text = 1;
  common.QuestionType type = 2;
  common.DifficultyLevel difficulty = 3;
  repeated Answer answers = 4;
  string explanation = 5;
  repeated string tags = 6;
  int32 points = 7;
}

message CreateQuestionResponse {
  common.Response response = 1;
  Question question = 2;
}

message GetQuestionRequest {
  string id = 1;
}

message GetQuestionResponse {
  common.Response response = 1;
  Question question = 2;
}

message ListQuestionsRequest {
  common.PaginationRequest pagination = 1;
}

message ListQuestionsResponse {
  common.Response response = 1;
  repeated Question questions = 2;
  common.PaginationResponse pagination = 3;
}

// Import questions
message ImportQuestionsRequest {
  string csv_data_base64 = 1;
  bool upsert_mode = 2;
}

message ImportError {
  int32 row_number = 1;
  string field_name = 2;
  string error_message = 3;
  string row_data = 4;
}

message ImportQuestionsResponse {
  common.Response response = 1;
  int32 total_processed = 2;
  int32 created_count = 3;
  int32 updated_count = 4;
  int32 error_count = 5;
  repeated ImportError errors = 6;
  string summary = 7;
}

// Question service
service QuestionService {
  rpc CreateQuestion(CreateQuestionRequest) returns (CreateQuestionResponse) {
    option (google.api.http) = {
      post: "/api/v1/questions"
      body: "*"
    };
  }

  rpc GetQuestion(GetQuestionRequest) returns (GetQuestionResponse) {
    option (google.api.http) = {
      get: "/api/v1/questions/{id}"
    };
  }

  rpc ListQuestions(ListQuestionsRequest) returns (ListQuestionsResponse) {
    option (google.api.http) = {
      get: "/api/v1/questions"
    };
  }

  rpc ImportQuestions(ImportQuestionsRequest) returns (ImportQuestionsResponse) {
    option (google.api.http) = {
      post: "/api/v1/questions/import"
      body: "*"
    };
  }
}

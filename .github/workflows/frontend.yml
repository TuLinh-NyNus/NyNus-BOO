name: Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/frontend/**'
      - 'packages/proto/**'
      - '.github/workflows/frontend.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'apps/frontend/**'
      - 'packages/proto/**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './apps/frontend/package-lock.json'

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
        npm install -g protoc-gen-grpc-web

    - name: Generate proto files
      run: make proto

    - name: Install dependencies
      working-directory: ./apps/frontend
      run: npm ci

    - name: Run linter
      working-directory: ./apps/frontend
      run: npm run lint

    - name: Run type check
      working-directory: ./apps/frontend
      run: npm run type-check

    - name: Run tests
      working-directory: ./apps/frontend
      run: npm test

    - name: Build application
      working-directory: ./apps/frontend
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: ./apps/frontend/dist

  e2e-tests:
    runs-on: ubuntu-latest
    needs: test
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './apps/frontend/package-lock.json'

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install protoc
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
        npm install -g protoc-gen-grpc-web

    - name: Generate proto files
      run: make proto

    - name: Start backend
      working-directory: ./apps/backend
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: test_user
        DB_PASSWORD: test_password
        DB_NAME: test_db
        JWT_SECRET: test-secret
      run: |
        go mod download
        go build -o bin/grpc-server cmd/main.go
        ./bin/grpc-server &
        sleep 5

    - name: Install frontend dependencies
      working-directory: ./apps/frontend
      run: npm ci

    - name: Start Envoy proxy
      working-directory: ./apps/frontend
      run: |
        docker-compose up -d envoy
        sleep 5

    - name: Run E2E tests
      working-directory: ./apps/frontend
      run: npm run test:e2e

  build-docker:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./apps/frontend/Dockerfile
        push: false
        tags: exam-bank-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

# Security Scanning Workflow
# Comprehensive security scanning for SAST, dependencies, and container vulnerabilities

name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  contents: read
  security-events: write

jobs:
  # CodeQL Static Analysis Security Testing (SAST)
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [ 'go', 'javascript', 'typescript' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - name: Setup Go (if Go)
        if: matrix.language == 'go'
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Setup Node (if JavaScript/TypeScript)
        if: matrix.language == 'javascript' || matrix.language == 'typescript'
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: /language:${{ matrix.language }}

  # Backend Go Security Scanning
  gosec:
    name: Go Security Scan (Gosec)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install Gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run Gosec
        working-directory: apps/backend
        run: |
          gosec -no-fail -fmt sarif -out gosec-report.sarif ./...
        continue-on-error: true

      - name: Upload Gosec SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: apps/backend/gosec-report.sarif
          category: gosec
        if: always()

      - name: Run Go Vulnerability Check
        working-directory: apps/backend
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...
        continue-on-error: true

  # Frontend JavaScript/TypeScript Security
  frontend-security:
    name: Frontend Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        working-directory: apps/frontend
        run: pnpm install --frozen-lockfile

      - name: Run npm audit
        working-directory: apps/frontend
        run: |
          pnpm audit --audit-level=moderate || true
        continue-on-error: true

      - name: Check for known vulnerabilities
        working-directory: apps/frontend
        run: |
          echo "Checking for known vulnerabilities in dependencies..."
          pnpm audit --json > audit-report.json || true
          cat audit-report.json

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-audit-report
          path: apps/frontend/audit-report.json

  # Mobile/Flutter Security
  mobile-security:
    name: Mobile Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'

      - name: Get dependencies
        working-directory: apps/mobile
        run: flutter pub get

      - name: Run pub audit
        working-directory: apps/mobile
        run: |
          flutter pub pub get
          dart pub audit || true
        continue-on-error: true

      - name: Check outdated packages
        working-directory: apps/mobile
        run: flutter pub outdated --mode=null-safety || true
        continue-on-error: true

  # Dependency Checking with Snyk
  snyk:
    name: Snyk Dependency Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk on Frontend
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=apps/frontend/package.json --severity-threshold=high
        continue-on-error: true
        if: ${{ secrets.SNYK_TOKEN != '' }}

      - name: Run Snyk on Backend
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=apps/backend/go.mod --severity-threshold=high
        continue-on-error: true
        if: ${{ secrets.SNYK_TOKEN != '' }}

  # Container Image Scanning with Trivy
  trivy-backend:
    name: Trivy - Backend Image Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Backend Image
        run: |
          docker build -t exam-bank-backend:scan \
            -f docker/backend.Dockerfile .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: exam-bank-backend:scan
          format: 'sarif'
          output: 'trivy-backend-results.sarif'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true

      - name: Upload Trivy Backend Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-backend-results.sarif
          category: trivy-backend
        if: always()

  trivy-frontend:
    name: Trivy - Frontend Image Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Frontend Image
        run: |
          docker build -t exam-bank-frontend:scan \
            -f docker/frontend.Dockerfile apps/frontend/

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: exam-bank-frontend:scan
          format: 'sarif'
          output: 'trivy-frontend-results.sarif'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true

      - name: Upload Trivy Frontend Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-frontend-results.sarif
          category: trivy-frontend
        if: always()

  # Secret Detection with TruffleHog
  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog Secret Scan
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified
        continue-on-error: true

  # OWASP Dependency-Check
  dependency-check:
    name: OWASP Dependency-Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'exam-bank-system'
          path: '.'
          format: 'JSON'
          args: >
            --enableExperimental
            --enableRetired
        continue-on-error: true

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-check-report
          path: reports/

  # Generate Security Report Summary
  security-report:
    name: Security Report Summary
    runs-on: ubuntu-latest
    needs: [codeql, gosec, frontend-security, mobile-security, snyk, trivy-backend, trivy-frontend, secret-scan, dependency-check]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate security summary
        run: |
          echo "# ðŸ”’ Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "- CodeQL: ${{ needs.codeql.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Gosec: ${{ needs.gosec.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend Security: ${{ needs.frontend-security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Mobile Security: ${{ needs.mobile-security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Snyk: ${{ needs.snyk.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Trivy Backend: ${{ needs.trivy-backend.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Trivy Frontend: ${{ needs.trivy-frontend.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Secret Scan: ${{ needs.secret-scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Dependency-Check: ${{ needs.dependency-check.result }}" >> $GITHUB_STEP_SUMMARY

      - name: Notify Slack on Security Issues
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          webhook_url: ${{ secrets.SLACK_WEBHOOK_SECURITY }}
          text: |
            ðŸš¨ Security Scan Detected Issues
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            
            Please review the security scan results in the GitHub Actions tab.
        continue-on-error: true

